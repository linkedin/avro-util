/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.avro.fastserde.generated.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Used in tests to confirm fast-serde supports logical-types */
@org.apache.avro.specific.AvroGenerated
public class FastSerdeLogicalTypesTest1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8167610828446879065L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FastSerdeLogicalTypesTest1\",\"namespace\":\"com.linkedin.avro.fastserde.generated.avro\",\"doc\":\"Used in tests to confirm fast-serde supports logical-types\",\"fields\":[{\"name\":\"unionOfArrayAndMap\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"int\",\"logicalType\":\"time-millis\"}},{\"type\":\"map\",\"values\":{\"type\":\"int\",\"logicalType\":\"date\"}}]},{\"name\":\"mapOfUnionsOfDateAndTimestampMillis\",\"type\":{\"type\":\"map\",\"values\":[{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}]}},{\"name\":\"timestampMillisMap\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}},{\"name\":\"nullableArrayOfDates\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"int\",\"logicalType\":\"date\"}}],\"default\":null},{\"name\":\"arrayOfDates\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"int\",\"logicalType\":\"date\"}}},{\"name\":\"unionOfDecimalOrDate\",\"type\":[{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":4,\"scale\":2},{\"type\":\"int\",\"logicalType\":\"date\"}]},{\"name\":\"uuidField\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"timestampMillisField\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"timestampMicrosField\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-micros\"}},{\"name\":\"timeMillisField\",\"type\":{\"type\":\"int\",\"logicalType\":\"time-millis\"}},{\"name\":\"timeMicrosField\",\"type\":{\"type\":\"long\",\"logicalType\":\"time-micros\"}},{\"name\":\"dateField\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"nestedLocalTimestampMillis\",\"type\":{\"type\":\"record\",\"name\":\"LocalTimestampRecord\",\"fields\":[{\"name\":\"nestedTimestamp\",\"type\":{\"type\":\"long\",\"logicalType\":\"local-timestamp-millis\"}},{\"name\":\"nullableNestedTimestamp\",\"type\":[\"null\",{\"type\":\"long\",\"logicalType\":\"local-timestamp-millis\"}]},{\"name\":\"nullableUnionOfDateAndLocalTimestamp\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-millis\"}]},{\"name\":\"unionOfDateAndLocalTimestamp\",\"type\":[{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"local-timestamp-millis\"}]}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimeMillisConversion());
  }

  private static final BinaryMessageEncoder<FastSerdeLogicalTypesTest1> ENCODER =
      new BinaryMessageEncoder<FastSerdeLogicalTypesTest1>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FastSerdeLogicalTypesTest1> DECODER =
      new BinaryMessageDecoder<FastSerdeLogicalTypesTest1>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FastSerdeLogicalTypesTest1> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FastSerdeLogicalTypesTest1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FastSerdeLogicalTypesTest1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FastSerdeLogicalTypesTest1>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FastSerdeLogicalTypesTest1 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FastSerdeLogicalTypesTest1 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FastSerdeLogicalTypesTest1 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FastSerdeLogicalTypesTest1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.Object unionOfArrayAndMap;
   private java.util.Map<java.lang.CharSequence,java.lang.Object> mapOfUnionsOfDateAndTimestampMillis;
   private java.util.Map<java.lang.CharSequence,java.time.Instant> timestampMillisMap;
   private java.util.List<java.time.LocalDate> nullableArrayOfDates;
   private java.util.List<java.time.LocalDate> arrayOfDates;
   private java.lang.Object unionOfDecimalOrDate;
   private java.lang.CharSequence uuidField;
   private java.time.Instant timestampMillisField;
   private java.time.Instant timestampMicrosField;
   private java.time.LocalTime timeMillisField;
   private java.time.LocalTime timeMicrosField;
   private java.time.LocalDate dateField;
   private com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord nestedLocalTimestampMillis;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FastSerdeLogicalTypesTest1() {}

  /**
   * All-args constructor.
   * @param unionOfArrayAndMap The new value for unionOfArrayAndMap
   * @param mapOfUnionsOfDateAndTimestampMillis The new value for mapOfUnionsOfDateAndTimestampMillis
   * @param timestampMillisMap The new value for timestampMillisMap
   * @param nullableArrayOfDates The new value for nullableArrayOfDates
   * @param arrayOfDates The new value for arrayOfDates
   * @param unionOfDecimalOrDate The new value for unionOfDecimalOrDate
   * @param uuidField The new value for uuidField
   * @param timestampMillisField The new value for timestampMillisField
   * @param timestampMicrosField The new value for timestampMicrosField
   * @param timeMillisField The new value for timeMillisField
   * @param timeMicrosField The new value for timeMicrosField
   * @param dateField The new value for dateField
   * @param nestedLocalTimestampMillis The new value for nestedLocalTimestampMillis
   */
  public FastSerdeLogicalTypesTest1(java.lang.Object unionOfArrayAndMap, java.util.Map<java.lang.CharSequence,java.lang.Object> mapOfUnionsOfDateAndTimestampMillis, java.util.Map<java.lang.CharSequence,java.time.Instant> timestampMillisMap, java.util.List<java.time.LocalDate> nullableArrayOfDates, java.util.List<java.time.LocalDate> arrayOfDates, java.lang.Object unionOfDecimalOrDate, java.lang.CharSequence uuidField, java.time.Instant timestampMillisField, java.time.Instant timestampMicrosField, java.time.LocalTime timeMillisField, java.time.LocalTime timeMicrosField, java.time.LocalDate dateField, com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord nestedLocalTimestampMillis) {
    this.unionOfArrayAndMap = unionOfArrayAndMap;
    this.mapOfUnionsOfDateAndTimestampMillis = mapOfUnionsOfDateAndTimestampMillis;
    this.timestampMillisMap = timestampMillisMap;
    this.nullableArrayOfDates = nullableArrayOfDates;
    this.arrayOfDates = arrayOfDates;
    this.unionOfDecimalOrDate = unionOfDecimalOrDate;
    this.uuidField = uuidField;
    this.timestampMillisField = timestampMillisField.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.timestampMicrosField = timestampMicrosField.truncatedTo(java.time.temporal.ChronoUnit.MICROS);
    this.timeMillisField = timeMillisField.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.timeMicrosField = timeMicrosField.truncatedTo(java.time.temporal.ChronoUnit.MICROS);
    this.dateField = dateField;
    this.nestedLocalTimestampMillis = nestedLocalTimestampMillis;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return unionOfArrayAndMap;
    case 1: return mapOfUnionsOfDateAndTimestampMillis;
    case 2: return timestampMillisMap;
    case 3: return nullableArrayOfDates;
    case 4: return arrayOfDates;
    case 5: return unionOfDecimalOrDate;
    case 6: return uuidField;
    case 7: return timestampMillisField;
    case 8: return timestampMicrosField;
    case 9: return timeMillisField;
    case 10: return timeMicrosField;
    case 11: return dateField;
    case 12: return nestedLocalTimestampMillis;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      new org.apache.avro.data.TimeConversions.TimestampMicrosConversion(),
      new org.apache.avro.data.TimeConversions.TimeMillisConversion(),
      new org.apache.avro.data.TimeConversions.TimeMicrosConversion(),
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: unionOfArrayAndMap = value$; break;
    case 1: mapOfUnionsOfDateAndTimestampMillis = (java.util.Map<java.lang.CharSequence,java.lang.Object>)value$; break;
    case 2: timestampMillisMap = (java.util.Map<java.lang.CharSequence,java.time.Instant>)value$; break;
    case 3: nullableArrayOfDates = (java.util.List<java.time.LocalDate>)value$; break;
    case 4: arrayOfDates = (java.util.List<java.time.LocalDate>)value$; break;
    case 5: unionOfDecimalOrDate = value$; break;
    case 6: uuidField = (java.lang.CharSequence)value$; break;
    case 7: timestampMillisField = (java.time.Instant)value$; break;
    case 8: timestampMicrosField = (java.time.Instant)value$; break;
    case 9: timeMillisField = (java.time.LocalTime)value$; break;
    case 10: timeMicrosField = (java.time.LocalTime)value$; break;
    case 11: dateField = (java.time.LocalDate)value$; break;
    case 12: nestedLocalTimestampMillis = (com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'unionOfArrayAndMap' field.
   * @return The value of the 'unionOfArrayAndMap' field.
   */
  public java.lang.Object getUnionOfArrayAndMap() {
    return unionOfArrayAndMap;
  }


  /**
   * Sets the value of the 'unionOfArrayAndMap' field.
   * @param value the value to set.
   */
  public void setUnionOfArrayAndMap(java.lang.Object value) {
    this.unionOfArrayAndMap = value;
  }

  /**
   * Gets the value of the 'mapOfUnionsOfDateAndTimestampMillis' field.
   * @return The value of the 'mapOfUnionsOfDateAndTimestampMillis' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Object> getMapOfUnionsOfDateAndTimestampMillis() {
    return mapOfUnionsOfDateAndTimestampMillis;
  }


  /**
   * Sets the value of the 'mapOfUnionsOfDateAndTimestampMillis' field.
   * @param value the value to set.
   */
  public void setMapOfUnionsOfDateAndTimestampMillis(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
    this.mapOfUnionsOfDateAndTimestampMillis = value;
  }

  /**
   * Gets the value of the 'timestampMillisMap' field.
   * @return The value of the 'timestampMillisMap' field.
   */
  public java.util.Map<java.lang.CharSequence,java.time.Instant> getTimestampMillisMap() {
    return timestampMillisMap;
  }


  /**
   * Sets the value of the 'timestampMillisMap' field.
   * @param value the value to set.
   */
  public void setTimestampMillisMap(java.util.Map<java.lang.CharSequence,java.time.Instant> value) {
    this.timestampMillisMap = value;
  }

  /**
   * Gets the value of the 'nullableArrayOfDates' field.
   * @return The value of the 'nullableArrayOfDates' field.
   */
  public java.util.List<java.time.LocalDate> getNullableArrayOfDates() {
    return nullableArrayOfDates;
  }


  /**
   * Sets the value of the 'nullableArrayOfDates' field.
   * @param value the value to set.
   */
  public void setNullableArrayOfDates(java.util.List<java.time.LocalDate> value) {
    this.nullableArrayOfDates = value;
  }

  /**
   * Gets the value of the 'arrayOfDates' field.
   * @return The value of the 'arrayOfDates' field.
   */
  public java.util.List<java.time.LocalDate> getArrayOfDates() {
    return arrayOfDates;
  }


  /**
   * Sets the value of the 'arrayOfDates' field.
   * @param value the value to set.
   */
  public void setArrayOfDates(java.util.List<java.time.LocalDate> value) {
    this.arrayOfDates = value;
  }

  /**
   * Gets the value of the 'unionOfDecimalOrDate' field.
   * @return The value of the 'unionOfDecimalOrDate' field.
   */
  public java.lang.Object getUnionOfDecimalOrDate() {
    return unionOfDecimalOrDate;
  }


  /**
   * Sets the value of the 'unionOfDecimalOrDate' field.
   * @param value the value to set.
   */
  public void setUnionOfDecimalOrDate(java.lang.Object value) {
    this.unionOfDecimalOrDate = value;
  }

  /**
   * Gets the value of the 'uuidField' field.
   * @return The value of the 'uuidField' field.
   */
  public java.lang.CharSequence getUuidField() {
    return uuidField;
  }


  /**
   * Sets the value of the 'uuidField' field.
   * @param value the value to set.
   */
  public void setUuidField(java.lang.CharSequence value) {
    this.uuidField = value;
  }

  /**
   * Gets the value of the 'timestampMillisField' field.
   * @return The value of the 'timestampMillisField' field.
   */
  public java.time.Instant getTimestampMillisField() {
    return timestampMillisField;
  }


  /**
   * Sets the value of the 'timestampMillisField' field.
   * @param value the value to set.
   */
  public void setTimestampMillisField(java.time.Instant value) {
    this.timestampMillisField = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'timestampMicrosField' field.
   * @return The value of the 'timestampMicrosField' field.
   */
  public java.time.Instant getTimestampMicrosField() {
    return timestampMicrosField;
  }


  /**
   * Sets the value of the 'timestampMicrosField' field.
   * @param value the value to set.
   */
  public void setTimestampMicrosField(java.time.Instant value) {
    this.timestampMicrosField = value.truncatedTo(java.time.temporal.ChronoUnit.MICROS);
  }

  /**
   * Gets the value of the 'timeMillisField' field.
   * @return The value of the 'timeMillisField' field.
   */
  public java.time.LocalTime getTimeMillisField() {
    return timeMillisField;
  }


  /**
   * Sets the value of the 'timeMillisField' field.
   * @param value the value to set.
   */
  public void setTimeMillisField(java.time.LocalTime value) {
    this.timeMillisField = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'timeMicrosField' field.
   * @return The value of the 'timeMicrosField' field.
   */
  public java.time.LocalTime getTimeMicrosField() {
    return timeMicrosField;
  }


  /**
   * Sets the value of the 'timeMicrosField' field.
   * @param value the value to set.
   */
  public void setTimeMicrosField(java.time.LocalTime value) {
    this.timeMicrosField = value.truncatedTo(java.time.temporal.ChronoUnit.MICROS);
  }

  /**
   * Gets the value of the 'dateField' field.
   * @return The value of the 'dateField' field.
   */
  public java.time.LocalDate getDateField() {
    return dateField;
  }


  /**
   * Sets the value of the 'dateField' field.
   * @param value the value to set.
   */
  public void setDateField(java.time.LocalDate value) {
    this.dateField = value;
  }

  /**
   * Gets the value of the 'nestedLocalTimestampMillis' field.
   * @return The value of the 'nestedLocalTimestampMillis' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord getNestedLocalTimestampMillis() {
    return nestedLocalTimestampMillis;
  }


  /**
   * Sets the value of the 'nestedLocalTimestampMillis' field.
   * @param value the value to set.
   */
  public void setNestedLocalTimestampMillis(com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord value) {
    this.nestedLocalTimestampMillis = value;
  }

  /**
   * Creates a new FastSerdeLogicalTypesTest1 RecordBuilder.
   * @return A new FastSerdeLogicalTypesTest1 RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder newBuilder() {
    return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder();
  }

  /**
   * Creates a new FastSerdeLogicalTypesTest1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FastSerdeLogicalTypesTest1 RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder other) {
    if (other == null) {
      return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder();
    } else {
      return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder(other);
    }
  }

  /**
   * Creates a new FastSerdeLogicalTypesTest1 RecordBuilder by copying an existing FastSerdeLogicalTypesTest1 instance.
   * @param other The existing instance to copy.
   * @return A new FastSerdeLogicalTypesTest1 RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1 other) {
    if (other == null) {
      return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder();
    } else {
      return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder(other);
    }
  }

  /**
   * RecordBuilder for FastSerdeLogicalTypesTest1 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FastSerdeLogicalTypesTest1>
    implements org.apache.avro.data.RecordBuilder<FastSerdeLogicalTypesTest1> {

    private java.lang.Object unionOfArrayAndMap;
    private java.util.Map<java.lang.CharSequence,java.lang.Object> mapOfUnionsOfDateAndTimestampMillis;
    private java.util.Map<java.lang.CharSequence,java.time.Instant> timestampMillisMap;
    private java.util.List<java.time.LocalDate> nullableArrayOfDates;
    private java.util.List<java.time.LocalDate> arrayOfDates;
    private java.lang.Object unionOfDecimalOrDate;
    private java.lang.CharSequence uuidField;
    private java.time.Instant timestampMillisField;
    private java.time.Instant timestampMicrosField;
    private java.time.LocalTime timeMillisField;
    private java.time.LocalTime timeMicrosField;
    private java.time.LocalDate dateField;
    private com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord nestedLocalTimestampMillis;
    private com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord.Builder nestedLocalTimestampMillisBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.unionOfArrayAndMap)) {
        this.unionOfArrayAndMap = data().deepCopy(fields()[0].schema(), other.unionOfArrayAndMap);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.mapOfUnionsOfDateAndTimestampMillis)) {
        this.mapOfUnionsOfDateAndTimestampMillis = data().deepCopy(fields()[1].schema(), other.mapOfUnionsOfDateAndTimestampMillis);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.timestampMillisMap)) {
        this.timestampMillisMap = data().deepCopy(fields()[2].schema(), other.timestampMillisMap);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.nullableArrayOfDates)) {
        this.nullableArrayOfDates = data().deepCopy(fields()[3].schema(), other.nullableArrayOfDates);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.arrayOfDates)) {
        this.arrayOfDates = data().deepCopy(fields()[4].schema(), other.arrayOfDates);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.unionOfDecimalOrDate)) {
        this.unionOfDecimalOrDate = data().deepCopy(fields()[5].schema(), other.unionOfDecimalOrDate);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.uuidField)) {
        this.uuidField = data().deepCopy(fields()[6].schema(), other.uuidField);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.timestampMillisField)) {
        this.timestampMillisField = data().deepCopy(fields()[7].schema(), other.timestampMillisField);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.timestampMicrosField)) {
        this.timestampMicrosField = data().deepCopy(fields()[8].schema(), other.timestampMicrosField);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.timeMillisField)) {
        this.timeMillisField = data().deepCopy(fields()[9].schema(), other.timeMillisField);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.timeMicrosField)) {
        this.timeMicrosField = data().deepCopy(fields()[10].schema(), other.timeMicrosField);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.dateField)) {
        this.dateField = data().deepCopy(fields()[11].schema(), other.dateField);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.nestedLocalTimestampMillis)) {
        this.nestedLocalTimestampMillis = data().deepCopy(fields()[12].schema(), other.nestedLocalTimestampMillis);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasNestedLocalTimestampMillisBuilder()) {
        this.nestedLocalTimestampMillisBuilder = com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord.newBuilder(other.getNestedLocalTimestampMillisBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing FastSerdeLogicalTypesTest1 instance
     * @param other The existing instance to copy.
     */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1 other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.unionOfArrayAndMap)) {
        this.unionOfArrayAndMap = data().deepCopy(fields()[0].schema(), other.unionOfArrayAndMap);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.mapOfUnionsOfDateAndTimestampMillis)) {
        this.mapOfUnionsOfDateAndTimestampMillis = data().deepCopy(fields()[1].schema(), other.mapOfUnionsOfDateAndTimestampMillis);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestampMillisMap)) {
        this.timestampMillisMap = data().deepCopy(fields()[2].schema(), other.timestampMillisMap);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.nullableArrayOfDates)) {
        this.nullableArrayOfDates = data().deepCopy(fields()[3].schema(), other.nullableArrayOfDates);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.arrayOfDates)) {
        this.arrayOfDates = data().deepCopy(fields()[4].schema(), other.arrayOfDates);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.unionOfDecimalOrDate)) {
        this.unionOfDecimalOrDate = data().deepCopy(fields()[5].schema(), other.unionOfDecimalOrDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.uuidField)) {
        this.uuidField = data().deepCopy(fields()[6].schema(), other.uuidField);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.timestampMillisField)) {
        this.timestampMillisField = data().deepCopy(fields()[7].schema(), other.timestampMillisField);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.timestampMicrosField)) {
        this.timestampMicrosField = data().deepCopy(fields()[8].schema(), other.timestampMicrosField);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.timeMillisField)) {
        this.timeMillisField = data().deepCopy(fields()[9].schema(), other.timeMillisField);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.timeMicrosField)) {
        this.timeMicrosField = data().deepCopy(fields()[10].schema(), other.timeMicrosField);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.dateField)) {
        this.dateField = data().deepCopy(fields()[11].schema(), other.dateField);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.nestedLocalTimestampMillis)) {
        this.nestedLocalTimestampMillis = data().deepCopy(fields()[12].schema(), other.nestedLocalTimestampMillis);
        fieldSetFlags()[12] = true;
      }
      this.nestedLocalTimestampMillisBuilder = null;
    }

    /**
      * Gets the value of the 'unionOfArrayAndMap' field.
      * @return The value.
      */
    public java.lang.Object getUnionOfArrayAndMap() {
      return unionOfArrayAndMap;
    }


    /**
      * Sets the value of the 'unionOfArrayAndMap' field.
      * @param value The value of 'unionOfArrayAndMap'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setUnionOfArrayAndMap(java.lang.Object value) {
      validate(fields()[0], value);
      this.unionOfArrayAndMap = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'unionOfArrayAndMap' field has been set.
      * @return True if the 'unionOfArrayAndMap' field has been set, false otherwise.
      */
    public boolean hasUnionOfArrayAndMap() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'unionOfArrayAndMap' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearUnionOfArrayAndMap() {
      unionOfArrayAndMap = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'mapOfUnionsOfDateAndTimestampMillis' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.Object> getMapOfUnionsOfDateAndTimestampMillis() {
      return mapOfUnionsOfDateAndTimestampMillis;
    }


    /**
      * Sets the value of the 'mapOfUnionsOfDateAndTimestampMillis' field.
      * @param value The value of 'mapOfUnionsOfDateAndTimestampMillis'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setMapOfUnionsOfDateAndTimestampMillis(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
      validate(fields()[1], value);
      this.mapOfUnionsOfDateAndTimestampMillis = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'mapOfUnionsOfDateAndTimestampMillis' field has been set.
      * @return True if the 'mapOfUnionsOfDateAndTimestampMillis' field has been set, false otherwise.
      */
    public boolean hasMapOfUnionsOfDateAndTimestampMillis() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'mapOfUnionsOfDateAndTimestampMillis' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearMapOfUnionsOfDateAndTimestampMillis() {
      mapOfUnionsOfDateAndTimestampMillis = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestampMillisMap' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.time.Instant> getTimestampMillisMap() {
      return timestampMillisMap;
    }


    /**
      * Sets the value of the 'timestampMillisMap' field.
      * @param value The value of 'timestampMillisMap'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setTimestampMillisMap(java.util.Map<java.lang.CharSequence,java.time.Instant> value) {
      validate(fields()[2], value);
      this.timestampMillisMap = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timestampMillisMap' field has been set.
      * @return True if the 'timestampMillisMap' field has been set, false otherwise.
      */
    public boolean hasTimestampMillisMap() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timestampMillisMap' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearTimestampMillisMap() {
      timestampMillisMap = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'nullableArrayOfDates' field.
      * @return The value.
      */
    public java.util.List<java.time.LocalDate> getNullableArrayOfDates() {
      return nullableArrayOfDates;
    }


    /**
      * Sets the value of the 'nullableArrayOfDates' field.
      * @param value The value of 'nullableArrayOfDates'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setNullableArrayOfDates(java.util.List<java.time.LocalDate> value) {
      validate(fields()[3], value);
      this.nullableArrayOfDates = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'nullableArrayOfDates' field has been set.
      * @return True if the 'nullableArrayOfDates' field has been set, false otherwise.
      */
    public boolean hasNullableArrayOfDates() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'nullableArrayOfDates' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearNullableArrayOfDates() {
      nullableArrayOfDates = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'arrayOfDates' field.
      * @return The value.
      */
    public java.util.List<java.time.LocalDate> getArrayOfDates() {
      return arrayOfDates;
    }


    /**
      * Sets the value of the 'arrayOfDates' field.
      * @param value The value of 'arrayOfDates'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setArrayOfDates(java.util.List<java.time.LocalDate> value) {
      validate(fields()[4], value);
      this.arrayOfDates = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'arrayOfDates' field has been set.
      * @return True if the 'arrayOfDates' field has been set, false otherwise.
      */
    public boolean hasArrayOfDates() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'arrayOfDates' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearArrayOfDates() {
      arrayOfDates = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'unionOfDecimalOrDate' field.
      * @return The value.
      */
    public java.lang.Object getUnionOfDecimalOrDate() {
      return unionOfDecimalOrDate;
    }


    /**
      * Sets the value of the 'unionOfDecimalOrDate' field.
      * @param value The value of 'unionOfDecimalOrDate'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setUnionOfDecimalOrDate(java.lang.Object value) {
      validate(fields()[5], value);
      this.unionOfDecimalOrDate = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'unionOfDecimalOrDate' field has been set.
      * @return True if the 'unionOfDecimalOrDate' field has been set, false otherwise.
      */
    public boolean hasUnionOfDecimalOrDate() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'unionOfDecimalOrDate' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearUnionOfDecimalOrDate() {
      unionOfDecimalOrDate = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'uuidField' field.
      * @return The value.
      */
    public java.lang.CharSequence getUuidField() {
      return uuidField;
    }


    /**
      * Sets the value of the 'uuidField' field.
      * @param value The value of 'uuidField'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setUuidField(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.uuidField = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'uuidField' field has been set.
      * @return True if the 'uuidField' field has been set, false otherwise.
      */
    public boolean hasUuidField() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'uuidField' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearUuidField() {
      uuidField = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestampMillisField' field.
      * @return The value.
      */
    public java.time.Instant getTimestampMillisField() {
      return timestampMillisField;
    }


    /**
      * Sets the value of the 'timestampMillisField' field.
      * @param value The value of 'timestampMillisField'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setTimestampMillisField(java.time.Instant value) {
      validate(fields()[7], value);
      this.timestampMillisField = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'timestampMillisField' field has been set.
      * @return True if the 'timestampMillisField' field has been set, false otherwise.
      */
    public boolean hasTimestampMillisField() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'timestampMillisField' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearTimestampMillisField() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestampMicrosField' field.
      * @return The value.
      */
    public java.time.Instant getTimestampMicrosField() {
      return timestampMicrosField;
    }


    /**
      * Sets the value of the 'timestampMicrosField' field.
      * @param value The value of 'timestampMicrosField'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setTimestampMicrosField(java.time.Instant value) {
      validate(fields()[8], value);
      this.timestampMicrosField = value.truncatedTo(java.time.temporal.ChronoUnit.MICROS);
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'timestampMicrosField' field has been set.
      * @return True if the 'timestampMicrosField' field has been set, false otherwise.
      */
    public boolean hasTimestampMicrosField() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'timestampMicrosField' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearTimestampMicrosField() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeMillisField' field.
      * @return The value.
      */
    public java.time.LocalTime getTimeMillisField() {
      return timeMillisField;
    }


    /**
      * Sets the value of the 'timeMillisField' field.
      * @param value The value of 'timeMillisField'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setTimeMillisField(java.time.LocalTime value) {
      validate(fields()[9], value);
      this.timeMillisField = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'timeMillisField' field has been set.
      * @return True if the 'timeMillisField' field has been set, false otherwise.
      */
    public boolean hasTimeMillisField() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'timeMillisField' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearTimeMillisField() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeMicrosField' field.
      * @return The value.
      */
    public java.time.LocalTime getTimeMicrosField() {
      return timeMicrosField;
    }


    /**
      * Sets the value of the 'timeMicrosField' field.
      * @param value The value of 'timeMicrosField'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setTimeMicrosField(java.time.LocalTime value) {
      validate(fields()[10], value);
      this.timeMicrosField = value.truncatedTo(java.time.temporal.ChronoUnit.MICROS);
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'timeMicrosField' field has been set.
      * @return True if the 'timeMicrosField' field has been set, false otherwise.
      */
    public boolean hasTimeMicrosField() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'timeMicrosField' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearTimeMicrosField() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'dateField' field.
      * @return The value.
      */
    public java.time.LocalDate getDateField() {
      return dateField;
    }


    /**
      * Sets the value of the 'dateField' field.
      * @param value The value of 'dateField'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setDateField(java.time.LocalDate value) {
      validate(fields()[11], value);
      this.dateField = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'dateField' field has been set.
      * @return True if the 'dateField' field has been set, false otherwise.
      */
    public boolean hasDateField() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'dateField' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearDateField() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'nestedLocalTimestampMillis' field.
      * @return The value.
      */
    public com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord getNestedLocalTimestampMillis() {
      return nestedLocalTimestampMillis;
    }


    /**
      * Sets the value of the 'nestedLocalTimestampMillis' field.
      * @param value The value of 'nestedLocalTimestampMillis'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setNestedLocalTimestampMillis(com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord value) {
      validate(fields()[12], value);
      this.nestedLocalTimestampMillisBuilder = null;
      this.nestedLocalTimestampMillis = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'nestedLocalTimestampMillis' field has been set.
      * @return True if the 'nestedLocalTimestampMillis' field has been set, false otherwise.
      */
    public boolean hasNestedLocalTimestampMillis() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'nestedLocalTimestampMillis' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord.Builder getNestedLocalTimestampMillisBuilder() {
      if (nestedLocalTimestampMillisBuilder == null) {
        if (hasNestedLocalTimestampMillis()) {
          setNestedLocalTimestampMillisBuilder(com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord.newBuilder(nestedLocalTimestampMillis));
        } else {
          setNestedLocalTimestampMillisBuilder(com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord.newBuilder());
        }
      }
      return nestedLocalTimestampMillisBuilder;
    }

    /**
     * Sets the Builder instance for the 'nestedLocalTimestampMillis' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder setNestedLocalTimestampMillisBuilder(com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord.Builder value) {
      clearNestedLocalTimestampMillis();
      nestedLocalTimestampMillisBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'nestedLocalTimestampMillis' field has an active Builder instance
     * @return True if the 'nestedLocalTimestampMillis' field has an active Builder instance
     */
    public boolean hasNestedLocalTimestampMillisBuilder() {
      return nestedLocalTimestampMillisBuilder != null;
    }

    /**
      * Clears the value of the 'nestedLocalTimestampMillis' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesTest1.Builder clearNestedLocalTimestampMillis() {
      nestedLocalTimestampMillis = null;
      nestedLocalTimestampMillisBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FastSerdeLogicalTypesTest1 build() {
      try {
        FastSerdeLogicalTypesTest1 record = new FastSerdeLogicalTypesTest1();
        record.unionOfArrayAndMap = fieldSetFlags()[0] ? this.unionOfArrayAndMap :  defaultValue(fields()[0]);
        record.mapOfUnionsOfDateAndTimestampMillis = fieldSetFlags()[1] ? this.mapOfUnionsOfDateAndTimestampMillis : (java.util.Map<java.lang.CharSequence,java.lang.Object>) defaultValue(fields()[1]);
        record.timestampMillisMap = fieldSetFlags()[2] ? this.timestampMillisMap : (java.util.Map<java.lang.CharSequence,java.time.Instant>) defaultValue(fields()[2]);
        record.nullableArrayOfDates = fieldSetFlags()[3] ? this.nullableArrayOfDates : (java.util.List<java.time.LocalDate>) defaultValue(fields()[3]);
        record.arrayOfDates = fieldSetFlags()[4] ? this.arrayOfDates : (java.util.List<java.time.LocalDate>) defaultValue(fields()[4]);
        record.unionOfDecimalOrDate = fieldSetFlags()[5] ? this.unionOfDecimalOrDate :  defaultValue(fields()[5]);
        record.uuidField = fieldSetFlags()[6] ? this.uuidField : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.timestampMillisField = fieldSetFlags()[7] ? this.timestampMillisField : (java.time.Instant) defaultValue(fields()[7]);
        record.timestampMicrosField = fieldSetFlags()[8] ? this.timestampMicrosField : (java.time.Instant) defaultValue(fields()[8]);
        record.timeMillisField = fieldSetFlags()[9] ? this.timeMillisField : (java.time.LocalTime) defaultValue(fields()[9]);
        record.timeMicrosField = fieldSetFlags()[10] ? this.timeMicrosField : (java.time.LocalTime) defaultValue(fields()[10]);
        record.dateField = fieldSetFlags()[11] ? this.dateField : (java.time.LocalDate) defaultValue(fields()[11]);
        if (nestedLocalTimestampMillisBuilder != null) {
          try {
            record.nestedLocalTimestampMillis = this.nestedLocalTimestampMillisBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("nestedLocalTimestampMillis"));
            throw e;
          }
        } else {
          record.nestedLocalTimestampMillis = fieldSetFlags()[12] ? this.nestedLocalTimestampMillis : (com.linkedin.avro.fastserde.generated.avro.LocalTimestampRecord) defaultValue(fields()[12]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FastSerdeLogicalTypesTest1>
    WRITER$ = (org.apache.avro.io.DatumWriter<FastSerdeLogicalTypesTest1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FastSerdeLogicalTypesTest1>
    READER$ = (org.apache.avro.io.DatumReader<FastSerdeLogicalTypesTest1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










