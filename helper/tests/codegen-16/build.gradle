/*
 * Copyright 2020 LinkedIn Corp.
 * Licensed under the BSD 2-Clause License (the "License").â€¨
 * See License in the project root for license information.
 */

plugins {
  id "java-library"
  id "checkstyle"
}

configurations {
  codegen {
    extendsFrom implementation
  }
}

sourceSets {
  main {
    java {
      srcDir 'src/main/java'
      srcDir "$buildDir/generated/sources/raw-avro/java/main"
      srcDir "$buildDir/generated/sources/compat-avro/java/main"
    }
    resources {
      srcDirs = ["src/main/raw-avro", "src/main/compat-avro"]
    }
  }
}

task runVanillaAvroCodegen {
  description = 'generate specific classes using vanilla avro'

  fileTree(dir: 'src/main/raw-avro', include:'**/*.avsc').each { file ->
    doLast {
      javaexec {
        classpath configurations.codegen
        main = 'org.apache.avro.tool.Main'
        args = ["compile", "schema", file.getAbsolutePath(), "$buildDir/generated/sources/raw-avro/java/main"]
      }
    }
  }
}

task runCompatAvroCodegen {
  description = 'generate specific classes using compatibility helper'
  outputs.dir("$buildDir/generated/sources/compat-avro/java/main").withPropertyName('outputDir')
  fileTree(dir: 'src/main/compat-avro', include:'**/*.avsc').each { file ->
    doLast {
      javaexec {
        classpath configurations.codegen
        main = 'com.linkedin.avroutil1.TestTool'
        args = ["compile", file.getAbsolutePath(), "$buildDir/generated/sources/compat-avro/java/main"]
      }
    }
  }
}

//copy output generated compatible code into resources so downstream modules can use it
task copyCompatAvroCodeToResources(type: Copy) {
  from "$buildDir/generated/sources/compat-avro/java/main"
  into "$buildDir/resources/main"
}

copyCompatAvroCodeToResources.dependsOn runCompatAvroCodegen
compileJava.dependsOn runVanillaAvroCodegen, runCompatAvroCodegen
//TODO - figure out why this must be done manually
runCompatAvroCodegen.dependsOn ":helper:tests:helper-tests-common:jar"

dependencies {
  codegen "org.apache.avro:avro-tools:1.6.3"
  codegen "org.apache.avro:avro-compiler:1.6.3"
  codegen project(":helper:tests:helper-tests-common")
  codegen project(":helper:helper")

  //required because generated code depends on the helper
  implementation project(":helper:helper")
  implementation "org.apache.avro:avro:1.6.3"
}