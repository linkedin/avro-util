/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.avro.fastserde.generated.avro;  
@SuppressWarnings("all")
public class DefaultsTestRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"DefaultsTestRecord\",\"namespace\":\"com.linkedin.avro.fastserde.generated.avro\",\"fields\":[{\"name\":\"testInt\",\"type\":\"int\",\"default\":42},{\"name\":\"testIntUnion\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"testLong\",\"type\":\"long\",\"default\":9223372036854775807},{\"name\":\"testLongUnion\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"testDouble\",\"type\":\"double\",\"default\":3.14},{\"name\":\"testDoubleUnion\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"testFloat\",\"type\":\"float\",\"default\":3.14},{\"name\":\"testFloatUnion\",\"type\":[\"null\",\"float\"],\"default\":null},{\"name\":\"testBoolean\",\"type\":\"boolean\",\"default\":true},{\"name\":\"testBooleanUnion\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"testBytes\",\"type\":\"bytes\",\"default\":\"1234\"},{\"name\":\"testBytesUnion\",\"type\":[\"null\",\"bytes\"],\"default\":null},{\"name\":\"testString\",\"type\":\"string\",\"default\":\"testStringValue\"},{\"name\":\"testStringable\",\"type\":{\"type\":\"string\",\"java-class\":\"java.net.URL\"},\"default\":\"http://www.example.com\"},{\"name\":\"testStringUnion\",\"type\":[\"null\",\"string\"],\"default\":null,\"aliases\":[\"testStringAlias\"]},{\"name\":\"testFixed\",\"type\":{\"type\":\"fixed\",\"name\":\"DefaultsFixed\",\"size\":1},\"default\":\"5\"},{\"name\":\"testFixedUnion\",\"type\":[\"null\",\"DefaultsFixed\"],\"default\":null},{\"name\":\"testFixedArray\",\"type\":{\"type\":\"array\",\"items\":\"DefaultsFixed\"},\"default\":[\"6\"]},{\"name\":\"testFixedUnionArray\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"DefaultsFixed\"]},\"default\":[null]},{\"name\":\"testEnum\",\"type\":{\"type\":\"enum\",\"name\":\"DefaultsEnum\",\"symbols\":[\"A\",\"B\",\"C\",\"D\",\"E\"]},\"default\":\"C\"},{\"name\":\"testEnumUnion\",\"type\":[\"null\",\"DefaultsEnum\"],\"default\":null},{\"name\":\"testEnumArray\",\"type\":{\"type\":\"array\",\"items\":\"DefaultsEnum\"},\"default\":[\"E\",\"B\"]},{\"name\":\"testEnumUnionArray\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"DefaultsEnum\"]},\"default\":[null]},{\"name\":\"testNewEnumIntUnionArray\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":[{\"type\":\"enum\",\"name\":\"DefaultsNewEnum\",\"symbols\":[\"A\",\"B\"]},\"int\"]}},\"default\":[[\"B\"]]},{\"name\":\"oldSubRecord\",\"type\":{\"type\":\"record\",\"name\":\"OldSubRecord\",\"fields\":[{\"name\":\"oldSubField\",\"type\":\"string\"}]}},{\"name\":\"newFieldWithOldSubRecord\",\"type\":\"OldSubRecord\",\"default\":{\"oldSubField\":\"defaultOldSubField\"}},{\"name\":\"subRecordUnion\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DefaultsSubRecord\",\"fields\":[{\"name\":\"subField\",\"type\":\"string\"},{\"name\":\"anotherField\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"arrayField\",\"type\":{\"type\":\"array\",\"items\":\"DefaultsEnum\"},\"default\":[]}]}],\"default\":null},{\"name\":\"subRecord\",\"type\":\"DefaultsSubRecord\",\"default\":{\"subField\":\"valueOfSubField\",\"anotherField\":null,\"arrayField\":[\"A\"]}},{\"name\":\"recordArray\",\"type\":{\"type\":\"array\",\"items\":\"DefaultsSubRecord\"},\"default\":[{\"subField\":\"recordArrayValue\",\"anotherField\":null,\"arrayField\":[\"A\"]}]},{\"name\":\"recordUnionArray\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"DefaultsSubRecord\"]},\"default\":[null]},{\"name\":\"stringableMap\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"java-class\":\"java.math.BigInteger\"},\"java-key-class\":\"java.net.URL\"},\"default\":{\"http://www.example2.com\":\"123\"}},{\"name\":\"recordMap\",\"type\":{\"type\":\"map\",\"values\":\"DefaultsSubRecord\"},\"default\":{\"test\":{\"subField\":\"recordMapValue\",\"anotherField\":null,\"arrayField\":[\"A\"]}}},{\"name\":\"recordUnionMap\",\"type\":{\"type\":\"map\",\"values\":[\"null\",\"DefaultsSubRecord\"]},\"default\":{\"test\":null}},{\"name\":\"recordUnionMapArray\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"map\",\"values\":[\"null\",\"DefaultsSubRecord\"]}},\"default\":[{\"test\":null}]},{\"name\":\"recordUnionArrayMap\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":[\"null\",\"DefaultsSubRecord\"]}},\"default\":{\"test\":[null]}},{\"name\":\"booleanArray\",\"type\":{\"type\":\"array\",\"items\":\"boolean\"},\"default\":[]},{\"name\":\"doubleArray\",\"type\":{\"type\":\"array\",\"items\":\"double\"},\"default\":[]},{\"name\":\"floatArray\",\"type\":{\"type\":\"array\",\"items\":\"float\"},\"default\":[]},{\"name\":\"intArray\",\"type\":{\"type\":\"array\",\"items\":\"int\"},\"default\":[]},{\"name\":\"longArray\",\"type\":{\"type\":\"array\",\"items\":\"long\"},\"default\":[]},{\"name\":\"stringArray\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[]}]}");
  public int testInt;
  public java.lang.Integer testIntUnion;
  public long testLong;
  public java.lang.Long testLongUnion;
  public double testDouble;
  public java.lang.Double testDoubleUnion;
  public float testFloat;
  public java.lang.Float testFloatUnion;
  public boolean testBoolean;
  public java.lang.Boolean testBooleanUnion;
  public java.nio.ByteBuffer testBytes;
  public java.nio.ByteBuffer testBytesUnion;
  public java.lang.CharSequence testString;
  public java.lang.CharSequence testStringable;
  public java.lang.CharSequence testStringUnion;
  public com.linkedin.avro.fastserde.generated.avro.DefaultsFixed testFixed;
  public com.linkedin.avro.fastserde.generated.avro.DefaultsFixed testFixedUnion;
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> testFixedArray;
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> testFixedUnionArray;
  public com.linkedin.avro.fastserde.generated.avro.DefaultsEnum testEnum;
  public com.linkedin.avro.fastserde.generated.avro.DefaultsEnum testEnumUnion;
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> testEnumArray;
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> testEnumUnionArray;
  public java.util.List<java.util.List<java.lang.Object>> testNewEnumIntUnionArray;
  public com.linkedin.avro.fastserde.generated.avro.OldSubRecord oldSubRecord;
  public com.linkedin.avro.fastserde.generated.avro.OldSubRecord newFieldWithOldSubRecord;
  public com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord subRecordUnion;
  public com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord subRecord;
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordArray;
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordUnionArray;
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> stringableMap;
  public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordMap;
  public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordUnionMap;
  public java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> recordUnionMapArray;
  public java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> recordUnionArrayMap;
  public java.util.List<java.lang.Boolean> booleanArray;
  public java.util.List<java.lang.Double> doubleArray;
  public java.util.List<java.lang.Float> floatArray;
  public java.util.List<java.lang.Integer> intArray;
  public java.util.List<java.lang.Long> longArray;
  public java.util.List<java.lang.CharSequence> stringArray;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return testInt;
    case 1: return testIntUnion;
    case 2: return testLong;
    case 3: return testLongUnion;
    case 4: return testDouble;
    case 5: return testDoubleUnion;
    case 6: return testFloat;
    case 7: return testFloatUnion;
    case 8: return testBoolean;
    case 9: return testBooleanUnion;
    case 10: return testBytes;
    case 11: return testBytesUnion;
    case 12: return testString;
    case 13: return testStringable;
    case 14: return testStringUnion;
    case 15: return testFixed;
    case 16: return testFixedUnion;
    case 17: return testFixedArray;
    case 18: return testFixedUnionArray;
    case 19: return testEnum;
    case 20: return testEnumUnion;
    case 21: return testEnumArray;
    case 22: return testEnumUnionArray;
    case 23: return testNewEnumIntUnionArray;
    case 24: return oldSubRecord;
    case 25: return newFieldWithOldSubRecord;
    case 26: return subRecordUnion;
    case 27: return subRecord;
    case 28: return recordArray;
    case 29: return recordUnionArray;
    case 30: return stringableMap;
    case 31: return recordMap;
    case 32: return recordUnionMap;
    case 33: return recordUnionMapArray;
    case 34: return recordUnionArrayMap;
    case 35: return booleanArray;
    case 36: return doubleArray;
    case 37: return floatArray;
    case 38: return intArray;
    case 39: return longArray;
    case 40: return stringArray;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: testInt = (java.lang.Integer)value$; break;
    case 1: testIntUnion = (java.lang.Integer)value$; break;
    case 2: testLong = (java.lang.Long)value$; break;
    case 3: testLongUnion = (java.lang.Long)value$; break;
    case 4: testDouble = (java.lang.Double)value$; break;
    case 5: testDoubleUnion = (java.lang.Double)value$; break;
    case 6: testFloat = (java.lang.Float)value$; break;
    case 7: testFloatUnion = (java.lang.Float)value$; break;
    case 8: testBoolean = (java.lang.Boolean)value$; break;
    case 9: testBooleanUnion = (java.lang.Boolean)value$; break;
    case 10: testBytes = (java.nio.ByteBuffer)value$; break;
    case 11: testBytesUnion = (java.nio.ByteBuffer)value$; break;
    case 12: testString = (java.lang.CharSequence)value$; break;
    case 13: testStringable = (java.lang.CharSequence)value$; break;
    case 14: testStringUnion = (java.lang.CharSequence)value$; break;
    case 15: testFixed = (com.linkedin.avro.fastserde.generated.avro.DefaultsFixed)value$; break;
    case 16: testFixedUnion = (com.linkedin.avro.fastserde.generated.avro.DefaultsFixed)value$; break;
    case 17: testFixedArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed>)value$; break;
    case 18: testFixedUnionArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed>)value$; break;
    case 19: testEnum = (com.linkedin.avro.fastserde.generated.avro.DefaultsEnum)value$; break;
    case 20: testEnumUnion = (com.linkedin.avro.fastserde.generated.avro.DefaultsEnum)value$; break;
    case 21: testEnumArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum>)value$; break;
    case 22: testEnumUnionArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum>)value$; break;
    case 23: testNewEnumIntUnionArray = (java.util.List<java.util.List<java.lang.Object>>)value$; break;
    case 24: oldSubRecord = (com.linkedin.avro.fastserde.generated.avro.OldSubRecord)value$; break;
    case 25: newFieldWithOldSubRecord = (com.linkedin.avro.fastserde.generated.avro.OldSubRecord)value$; break;
    case 26: subRecordUnion = (com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord)value$; break;
    case 27: subRecord = (com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord)value$; break;
    case 28: recordArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>)value$; break;
    case 29: recordUnionArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>)value$; break;
    case 30: stringableMap = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 31: recordMap = (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>)value$; break;
    case 32: recordUnionMap = (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>)value$; break;
    case 33: recordUnionMapArray = (java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>>)value$; break;
    case 34: recordUnionArrayMap = (java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>>)value$; break;
    case 35: booleanArray = (java.util.List<java.lang.Boolean>)value$; break;
    case 36: doubleArray = (java.util.List<java.lang.Double>)value$; break;
    case 37: floatArray = (java.util.List<java.lang.Float>)value$; break;
    case 38: intArray = (java.util.List<java.lang.Integer>)value$; break;
    case 39: longArray = (java.util.List<java.lang.Long>)value$; break;
    case 40: stringArray = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
