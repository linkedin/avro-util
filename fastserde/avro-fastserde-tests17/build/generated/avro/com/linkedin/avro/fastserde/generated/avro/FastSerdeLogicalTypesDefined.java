/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.avro.fastserde.generated.avro;  
@SuppressWarnings("all")
/** Used in tests to confirm fast-serde supports logical-types */
@org.apache.avro.specific.AvroGenerated
public class FastSerdeLogicalTypesDefined extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FastSerdeLogicalTypesDefined\",\"namespace\":\"com.linkedin.avro.fastserde.generated.avro\",\"doc\":\"Used in tests to confirm fast-serde supports logical-types\",\"fields\":[{\"name\":\"timeMillisField\",\"type\":{\"type\":\"int\",\"logicalType\":\"time-millis\"}},{\"name\":\"dateField\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"arrayOfUnionOfDateAndTimestampMillis\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"int\",\"logicalType\":\"date\"},{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int timeMillisField;
  @Deprecated public int dateField;
  @Deprecated public java.util.List<java.lang.Object> arrayOfUnionOfDateAndTimestampMillis;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public FastSerdeLogicalTypesDefined() {}

  /**
   * All-args constructor.
   */
  public FastSerdeLogicalTypesDefined(java.lang.Integer timeMillisField, java.lang.Integer dateField, java.util.List<java.lang.Object> arrayOfUnionOfDateAndTimestampMillis) {
    this.timeMillisField = timeMillisField;
    this.dateField = dateField;
    this.arrayOfUnionOfDateAndTimestampMillis = arrayOfUnionOfDateAndTimestampMillis;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timeMillisField;
    case 1: return dateField;
    case 2: return arrayOfUnionOfDateAndTimestampMillis;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timeMillisField = (java.lang.Integer)value$; break;
    case 1: dateField = (java.lang.Integer)value$; break;
    case 2: arrayOfUnionOfDateAndTimestampMillis = (java.util.List<java.lang.Object>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'timeMillisField' field.
   */
  public java.lang.Integer getTimeMillisField() {
    return timeMillisField;
  }

  /**
   * Sets the value of the 'timeMillisField' field.
   * @param value the value to set.
   */
  public void setTimeMillisField(java.lang.Integer value) {
    this.timeMillisField = value;
  }

  /**
   * Gets the value of the 'dateField' field.
   */
  public java.lang.Integer getDateField() {
    return dateField;
  }

  /**
   * Sets the value of the 'dateField' field.
   * @param value the value to set.
   */
  public void setDateField(java.lang.Integer value) {
    this.dateField = value;
  }

  /**
   * Gets the value of the 'arrayOfUnionOfDateAndTimestampMillis' field.
   */
  public java.util.List<java.lang.Object> getArrayOfUnionOfDateAndTimestampMillis() {
    return arrayOfUnionOfDateAndTimestampMillis;
  }

  /**
   * Sets the value of the 'arrayOfUnionOfDateAndTimestampMillis' field.
   * @param value the value to set.
   */
  public void setArrayOfUnionOfDateAndTimestampMillis(java.util.List<java.lang.Object> value) {
    this.arrayOfUnionOfDateAndTimestampMillis = value;
  }

  /** Creates a new FastSerdeLogicalTypesDefined RecordBuilder */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder newBuilder() {
    return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder();
  }
  
  /** Creates a new FastSerdeLogicalTypesDefined RecordBuilder by copying an existing Builder */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder other) {
    return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder(other);
  }
  
  /** Creates a new FastSerdeLogicalTypesDefined RecordBuilder by copying an existing FastSerdeLogicalTypesDefined instance */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined other) {
    return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder(other);
  }
  
  /**
   * RecordBuilder for FastSerdeLogicalTypesDefined instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FastSerdeLogicalTypesDefined>
    implements org.apache.avro.data.RecordBuilder<FastSerdeLogicalTypesDefined> {

    private int timeMillisField;
    private int dateField;
    private java.util.List<java.lang.Object> arrayOfUnionOfDateAndTimestampMillis;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timeMillisField)) {
        this.timeMillisField = data().deepCopy(fields()[0].schema(), other.timeMillisField);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dateField)) {
        this.dateField = data().deepCopy(fields()[1].schema(), other.dateField);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.arrayOfUnionOfDateAndTimestampMillis)) {
        this.arrayOfUnionOfDateAndTimestampMillis = data().deepCopy(fields()[2].schema(), other.arrayOfUnionOfDateAndTimestampMillis);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing FastSerdeLogicalTypesDefined instance */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined other) {
            super(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.SCHEMA$);
      if (isValidValue(fields()[0], other.timeMillisField)) {
        this.timeMillisField = data().deepCopy(fields()[0].schema(), other.timeMillisField);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dateField)) {
        this.dateField = data().deepCopy(fields()[1].schema(), other.dateField);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.arrayOfUnionOfDateAndTimestampMillis)) {
        this.arrayOfUnionOfDateAndTimestampMillis = data().deepCopy(fields()[2].schema(), other.arrayOfUnionOfDateAndTimestampMillis);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'timeMillisField' field */
    public java.lang.Integer getTimeMillisField() {
      return timeMillisField;
    }
    
    /** Sets the value of the 'timeMillisField' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder setTimeMillisField(int value) {
      validate(fields()[0], value);
      this.timeMillisField = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'timeMillisField' field has been set */
    public boolean hasTimeMillisField() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'timeMillisField' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder clearTimeMillisField() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'dateField' field */
    public java.lang.Integer getDateField() {
      return dateField;
    }
    
    /** Sets the value of the 'dateField' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder setDateField(int value) {
      validate(fields()[1], value);
      this.dateField = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'dateField' field has been set */
    public boolean hasDateField() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'dateField' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder clearDateField() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'arrayOfUnionOfDateAndTimestampMillis' field */
    public java.util.List<java.lang.Object> getArrayOfUnionOfDateAndTimestampMillis() {
      return arrayOfUnionOfDateAndTimestampMillis;
    }
    
    /** Sets the value of the 'arrayOfUnionOfDateAndTimestampMillis' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder setArrayOfUnionOfDateAndTimestampMillis(java.util.List<java.lang.Object> value) {
      validate(fields()[2], value);
      this.arrayOfUnionOfDateAndTimestampMillis = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'arrayOfUnionOfDateAndTimestampMillis' field has been set */
    public boolean hasArrayOfUnionOfDateAndTimestampMillis() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'arrayOfUnionOfDateAndTimestampMillis' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesDefined.Builder clearArrayOfUnionOfDateAndTimestampMillis() {
      arrayOfUnionOfDateAndTimestampMillis = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public FastSerdeLogicalTypesDefined build() {
      try {
        FastSerdeLogicalTypesDefined record = new FastSerdeLogicalTypesDefined();
        record.timeMillisField = fieldSetFlags()[0] ? this.timeMillisField : (java.lang.Integer) defaultValue(fields()[0]);
        record.dateField = fieldSetFlags()[1] ? this.dateField : (java.lang.Integer) defaultValue(fields()[1]);
        record.arrayOfUnionOfDateAndTimestampMillis = fieldSetFlags()[2] ? this.arrayOfUnionOfDateAndTimestampMillis : (java.util.List<java.lang.Object>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
