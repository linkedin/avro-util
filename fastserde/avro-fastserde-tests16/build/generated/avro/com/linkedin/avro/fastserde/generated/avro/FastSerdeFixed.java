/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.avro.fastserde.generated.avro;  
@SuppressWarnings("all")
/** Used in tests to confirm generic-FastSerializer supports fixed types */
public class FastSerdeFixed extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FastSerdeFixed\",\"namespace\":\"com.linkedin.avro.fastserde.generated.avro\",\"doc\":\"Used in tests to confirm generic-FastSerializer supports fixed types\",\"fields\":[{\"name\":\"fixedField\",\"type\":{\"type\":\"fixed\",\"name\":\"FixedOfSize10\",\"size\":10}},{\"name\":\"arrayOfFixed\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"FixedOfSize10\"}],\"default\":null},{\"name\":\"mapOfFixed\",\"type\":{\"type\":\"map\",\"values\":\"FixedOfSize10\"}}]}");
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.FixedOfSize10 fixedField;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> arrayOfFixed;
  @Deprecated public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> mapOfFixed;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return fixedField;
    case 1: return arrayOfFixed;
    case 2: return mapOfFixed;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: fixedField = (com.linkedin.avro.fastserde.generated.avro.FixedOfSize10)value$; break;
    case 1: arrayOfFixed = (java.util.List<com.linkedin.avro.fastserde.generated.avro.FixedOfSize10>)value$; break;
    case 2: mapOfFixed = (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.FixedOfSize10>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'fixedField' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.FixedOfSize10 getFixedField() {
    return fixedField;
  }

  /**
   * Sets the value of the 'fixedField' field.
   * @param value the value to set.
   */
  public void setFixedField(com.linkedin.avro.fastserde.generated.avro.FixedOfSize10 value) {
    this.fixedField = value;
  }

  /**
   * Gets the value of the 'arrayOfFixed' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> getArrayOfFixed() {
    return arrayOfFixed;
  }

  /**
   * Sets the value of the 'arrayOfFixed' field.
   * @param value the value to set.
   */
  public void setArrayOfFixed(java.util.List<com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> value) {
    this.arrayOfFixed = value;
  }

  /**
   * Gets the value of the 'mapOfFixed' field.
   */
  public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> getMapOfFixed() {
    return mapOfFixed;
  }

  /**
   * Sets the value of the 'mapOfFixed' field.
   * @param value the value to set.
   */
  public void setMapOfFixed(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> value) {
    this.mapOfFixed = value;
  }

  /** Creates a new FastSerdeFixed RecordBuilder */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder newBuilder() {
    return new com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder();
  }
  
  /** Creates a new FastSerdeFixed RecordBuilder by copying an existing Builder */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder other) {
    return new com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder(other);
  }
  
  /** Creates a new FastSerdeFixed RecordBuilder by copying an existing FastSerdeFixed instance */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed other) {
    return new com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder(other);
  }
  
  /**
   * RecordBuilder for FastSerdeFixed instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FastSerdeFixed>
    implements org.apache.avro.data.RecordBuilder<FastSerdeFixed> {

    private com.linkedin.avro.fastserde.generated.avro.FixedOfSize10 fixedField;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> arrayOfFixed;
    private java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> mapOfFixed;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing FastSerdeFixed instance */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed other) {
            super(com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.SCHEMA$);
      if (isValidValue(fields()[0], other.fixedField)) {
        this.fixedField = (com.linkedin.avro.fastserde.generated.avro.FixedOfSize10) data().deepCopy(fields()[0].schema(), other.fixedField);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.arrayOfFixed)) {
        this.arrayOfFixed = (java.util.List<com.linkedin.avro.fastserde.generated.avro.FixedOfSize10>) data().deepCopy(fields()[1].schema(), other.arrayOfFixed);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mapOfFixed)) {
        this.mapOfFixed = (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.FixedOfSize10>) data().deepCopy(fields()[2].schema(), other.mapOfFixed);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'fixedField' field */
    public com.linkedin.avro.fastserde.generated.avro.FixedOfSize10 getFixedField() {
      return fixedField;
    }
    
    /** Sets the value of the 'fixedField' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder setFixedField(com.linkedin.avro.fastserde.generated.avro.FixedOfSize10 value) {
      validate(fields()[0], value);
      this.fixedField = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'fixedField' field has been set */
    public boolean hasFixedField() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'fixedField' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder clearFixedField() {
      fixedField = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'arrayOfFixed' field */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> getArrayOfFixed() {
      return arrayOfFixed;
    }
    
    /** Sets the value of the 'arrayOfFixed' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder setArrayOfFixed(java.util.List<com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> value) {
      validate(fields()[1], value);
      this.arrayOfFixed = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'arrayOfFixed' field has been set */
    public boolean hasArrayOfFixed() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'arrayOfFixed' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder clearArrayOfFixed() {
      arrayOfFixed = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'mapOfFixed' field */
    public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> getMapOfFixed() {
      return mapOfFixed;
    }
    
    /** Sets the value of the 'mapOfFixed' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder setMapOfFixed(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.FixedOfSize10> value) {
      validate(fields()[2], value);
      this.mapOfFixed = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'mapOfFixed' field has been set */
    public boolean hasMapOfFixed() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'mapOfFixed' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeFixed.Builder clearMapOfFixed() {
      mapOfFixed = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public FastSerdeFixed build() {
      try {
        FastSerdeFixed record = new FastSerdeFixed();
        record.fixedField = fieldSetFlags()[0] ? this.fixedField : (com.linkedin.avro.fastserde.generated.avro.FixedOfSize10) defaultValue(fields()[0]);
        record.arrayOfFixed = fieldSetFlags()[1] ? this.arrayOfFixed : (java.util.List<com.linkedin.avro.fastserde.generated.avro.FixedOfSize10>) defaultValue(fields()[1]);
        record.mapOfFixed = fieldSetFlags()[2] ? this.mapOfFixed : (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.FixedOfSize10>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
