/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.avro.fastserde.generated.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DefaultsTestRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4062561823162423871L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DefaultsTestRecord\",\"namespace\":\"com.linkedin.avro.fastserde.generated.avro\",\"fields\":[{\"name\":\"testInt\",\"type\":\"int\",\"default\":42},{\"name\":\"testIntUnion\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"testLong\",\"type\":\"long\",\"default\":9223372036854775807},{\"name\":\"testLongUnion\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"testDouble\",\"type\":\"double\",\"default\":3.14},{\"name\":\"testDoubleUnion\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"testFloat\",\"type\":\"float\",\"default\":3.14},{\"name\":\"testFloatUnion\",\"type\":[\"null\",\"float\"],\"default\":null},{\"name\":\"testBoolean\",\"type\":\"boolean\",\"default\":true},{\"name\":\"testBooleanUnion\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"testBytes\",\"type\":\"bytes\",\"default\":\"1234\"},{\"name\":\"testBytesUnion\",\"type\":[\"null\",\"bytes\"],\"default\":null},{\"name\":\"testString\",\"type\":\"string\",\"default\":\"testStringValue\"},{\"name\":\"testStringable\",\"type\":{\"type\":\"string\",\"java-class\":\"java.net.URL\"},\"default\":\"http://www.example.com\"},{\"name\":\"testStringUnion\",\"type\":[\"null\",\"string\"],\"default\":null,\"aliases\":[\"testStringAlias\"]},{\"name\":\"testFixed\",\"type\":{\"type\":\"fixed\",\"name\":\"DefaultsFixed\",\"size\":1},\"default\":\"5\"},{\"name\":\"testFixedUnion\",\"type\":[\"null\",\"DefaultsFixed\"],\"default\":null},{\"name\":\"testFixedArray\",\"type\":{\"type\":\"array\",\"items\":\"DefaultsFixed\"},\"default\":[\"6\"]},{\"name\":\"testFixedUnionArray\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"DefaultsFixed\"]},\"default\":[null]},{\"name\":\"testEnum\",\"type\":{\"type\":\"enum\",\"name\":\"DefaultsEnum\",\"symbols\":[\"A\",\"B\",\"C\",\"D\",\"E\"]},\"default\":\"C\"},{\"name\":\"testEnumUnion\",\"type\":[\"null\",\"DefaultsEnum\"],\"default\":null},{\"name\":\"testEnumArray\",\"type\":{\"type\":\"array\",\"items\":\"DefaultsEnum\"},\"default\":[\"E\",\"B\"]},{\"name\":\"testEnumUnionArray\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"DefaultsEnum\"]},\"default\":[null]},{\"name\":\"testNewEnumIntUnionArray\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":[{\"type\":\"enum\",\"name\":\"DefaultsNewEnum\",\"symbols\":[\"A\",\"B\"]},\"int\"]}},\"default\":[[\"B\"]]},{\"name\":\"oldSubRecord\",\"type\":{\"type\":\"record\",\"name\":\"OldSubRecord\",\"fields\":[{\"name\":\"oldSubField\",\"type\":\"string\"}]}},{\"name\":\"newFieldWithOldSubRecord\",\"type\":\"OldSubRecord\",\"default\":{\"oldSubField\":\"defaultOldSubField\"}},{\"name\":\"subRecordUnion\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DefaultsSubRecord\",\"fields\":[{\"name\":\"subField\",\"type\":\"string\"},{\"name\":\"anotherField\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"arrayField\",\"type\":{\"type\":\"array\",\"items\":\"DefaultsEnum\"},\"default\":[]}]}],\"default\":null},{\"name\":\"subRecord\",\"type\":\"DefaultsSubRecord\",\"default\":{\"subField\":\"valueOfSubField\",\"anotherField\":null,\"arrayField\":[\"A\"]}},{\"name\":\"recordArray\",\"type\":{\"type\":\"array\",\"items\":\"DefaultsSubRecord\"},\"default\":[{\"subField\":\"recordArrayValue\",\"anotherField\":null,\"arrayField\":[\"A\"]}]},{\"name\":\"recordUnionArray\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"DefaultsSubRecord\"]},\"default\":[null]},{\"name\":\"stringableMap\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"java-class\":\"java.math.BigInteger\"},\"java-key-class\":\"java.net.URL\"},\"default\":{\"http://www.example2.com\":\"123\"}},{\"name\":\"recordMap\",\"type\":{\"type\":\"map\",\"values\":\"DefaultsSubRecord\"},\"default\":{\"test\":{\"subField\":\"recordMapValue\",\"anotherField\":null,\"arrayField\":[\"A\"]}}},{\"name\":\"recordUnionMap\",\"type\":{\"type\":\"map\",\"values\":[\"null\",\"DefaultsSubRecord\"]},\"default\":{\"test\":null}},{\"name\":\"recordUnionMapArray\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"map\",\"values\":[\"null\",\"DefaultsSubRecord\"]}},\"default\":[{\"test\":null}]},{\"name\":\"recordUnionArrayMap\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":[\"null\",\"DefaultsSubRecord\"]}},\"default\":{\"test\":[null]}},{\"name\":\"booleanArray\",\"type\":{\"type\":\"array\",\"items\":\"boolean\"},\"default\":[]},{\"name\":\"doubleArray\",\"type\":{\"type\":\"array\",\"items\":\"double\"},\"default\":[]},{\"name\":\"floatArray\",\"type\":{\"type\":\"array\",\"items\":\"float\"},\"default\":[]},{\"name\":\"intArray\",\"type\":{\"type\":\"array\",\"items\":\"int\"},\"default\":[]},{\"name\":\"longArray\",\"type\":{\"type\":\"array\",\"items\":\"long\"},\"default\":[]},{\"name\":\"stringArray\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DefaultsTestRecord> ENCODER =
      new BinaryMessageEncoder<DefaultsTestRecord>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DefaultsTestRecord> DECODER =
      new BinaryMessageDecoder<DefaultsTestRecord>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<DefaultsTestRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<DefaultsTestRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<DefaultsTestRecord>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this DefaultsTestRecord to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a DefaultsTestRecord from a ByteBuffer. */
  public static DefaultsTestRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int testInt;
  @Deprecated public java.lang.Integer testIntUnion;
  @Deprecated public long testLong;
  @Deprecated public java.lang.Long testLongUnion;
  @Deprecated public double testDouble;
  @Deprecated public java.lang.Double testDoubleUnion;
  @Deprecated public float testFloat;
  @Deprecated public java.lang.Float testFloatUnion;
  @Deprecated public boolean testBoolean;
  @Deprecated public java.lang.Boolean testBooleanUnion;
  @Deprecated public java.nio.ByteBuffer testBytes;
  @Deprecated public java.nio.ByteBuffer testBytesUnion;
  @Deprecated public java.lang.CharSequence testString;
  @Deprecated public java.net.URL testStringable;
  @Deprecated public java.lang.CharSequence testStringUnion;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.DefaultsFixed testFixed;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.DefaultsFixed testFixedUnion;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> testFixedArray;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> testFixedUnionArray;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.DefaultsEnum testEnum;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.DefaultsEnum testEnumUnion;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> testEnumArray;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> testEnumUnionArray;
  @Deprecated public java.util.List<java.util.List<java.lang.Object>> testNewEnumIntUnionArray;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.OldSubRecord oldSubRecord;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.OldSubRecord newFieldWithOldSubRecord;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord subRecordUnion;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord subRecord;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordArray;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordUnionArray;
  @Deprecated public java.util.Map<java.net.URL,java.math.BigInteger> stringableMap;
  @Deprecated public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordMap;
  @Deprecated public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordUnionMap;
  @Deprecated public java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> recordUnionMapArray;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> recordUnionArrayMap;
  @Deprecated public java.util.List<java.lang.Boolean> booleanArray;
  @Deprecated public java.util.List<java.lang.Double> doubleArray;
  @Deprecated public java.util.List<java.lang.Float> floatArray;
  @Deprecated public java.util.List<java.lang.Integer> intArray;
  @Deprecated public java.util.List<java.lang.Long> longArray;
  @Deprecated public java.util.List<java.lang.CharSequence> stringArray;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DefaultsTestRecord() {}

  /**
   * All-args constructor.
   * @param testInt The new value for testInt
   * @param testIntUnion The new value for testIntUnion
   * @param testLong The new value for testLong
   * @param testLongUnion The new value for testLongUnion
   * @param testDouble The new value for testDouble
   * @param testDoubleUnion The new value for testDoubleUnion
   * @param testFloat The new value for testFloat
   * @param testFloatUnion The new value for testFloatUnion
   * @param testBoolean The new value for testBoolean
   * @param testBooleanUnion The new value for testBooleanUnion
   * @param testBytes The new value for testBytes
   * @param testBytesUnion The new value for testBytesUnion
   * @param testString The new value for testString
   * @param testStringable The new value for testStringable
   * @param testStringUnion The new value for testStringUnion
   * @param testFixed The new value for testFixed
   * @param testFixedUnion The new value for testFixedUnion
   * @param testFixedArray The new value for testFixedArray
   * @param testFixedUnionArray The new value for testFixedUnionArray
   * @param testEnum The new value for testEnum
   * @param testEnumUnion The new value for testEnumUnion
   * @param testEnumArray The new value for testEnumArray
   * @param testEnumUnionArray The new value for testEnumUnionArray
   * @param testNewEnumIntUnionArray The new value for testNewEnumIntUnionArray
   * @param oldSubRecord The new value for oldSubRecord
   * @param newFieldWithOldSubRecord The new value for newFieldWithOldSubRecord
   * @param subRecordUnion The new value for subRecordUnion
   * @param subRecord The new value for subRecord
   * @param recordArray The new value for recordArray
   * @param recordUnionArray The new value for recordUnionArray
   * @param stringableMap The new value for stringableMap
   * @param recordMap The new value for recordMap
   * @param recordUnionMap The new value for recordUnionMap
   * @param recordUnionMapArray The new value for recordUnionMapArray
   * @param recordUnionArrayMap The new value for recordUnionArrayMap
   * @param booleanArray The new value for booleanArray
   * @param doubleArray The new value for doubleArray
   * @param floatArray The new value for floatArray
   * @param intArray The new value for intArray
   * @param longArray The new value for longArray
   * @param stringArray The new value for stringArray
   */
  public DefaultsTestRecord(java.lang.Integer testInt, java.lang.Integer testIntUnion, java.lang.Long testLong, java.lang.Long testLongUnion, java.lang.Double testDouble, java.lang.Double testDoubleUnion, java.lang.Float testFloat, java.lang.Float testFloatUnion, java.lang.Boolean testBoolean, java.lang.Boolean testBooleanUnion, java.nio.ByteBuffer testBytes, java.nio.ByteBuffer testBytesUnion, java.lang.CharSequence testString, java.net.URL testStringable, java.lang.CharSequence testStringUnion, com.linkedin.avro.fastserde.generated.avro.DefaultsFixed testFixed, com.linkedin.avro.fastserde.generated.avro.DefaultsFixed testFixedUnion, java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> testFixedArray, java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> testFixedUnionArray, com.linkedin.avro.fastserde.generated.avro.DefaultsEnum testEnum, com.linkedin.avro.fastserde.generated.avro.DefaultsEnum testEnumUnion, java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> testEnumArray, java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> testEnumUnionArray, java.util.List<java.util.List<java.lang.Object>> testNewEnumIntUnionArray, com.linkedin.avro.fastserde.generated.avro.OldSubRecord oldSubRecord, com.linkedin.avro.fastserde.generated.avro.OldSubRecord newFieldWithOldSubRecord, com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord subRecordUnion, com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord subRecord, java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordArray, java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordUnionArray, java.util.Map<java.net.URL,java.math.BigInteger> stringableMap, java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordMap, java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordUnionMap, java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> recordUnionMapArray, java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> recordUnionArrayMap, java.util.List<java.lang.Boolean> booleanArray, java.util.List<java.lang.Double> doubleArray, java.util.List<java.lang.Float> floatArray, java.util.List<java.lang.Integer> intArray, java.util.List<java.lang.Long> longArray, java.util.List<java.lang.CharSequence> stringArray) {
    this.testInt = testInt;
    this.testIntUnion = testIntUnion;
    this.testLong = testLong;
    this.testLongUnion = testLongUnion;
    this.testDouble = testDouble;
    this.testDoubleUnion = testDoubleUnion;
    this.testFloat = testFloat;
    this.testFloatUnion = testFloatUnion;
    this.testBoolean = testBoolean;
    this.testBooleanUnion = testBooleanUnion;
    this.testBytes = testBytes;
    this.testBytesUnion = testBytesUnion;
    this.testString = testString;
    this.testStringable = testStringable;
    this.testStringUnion = testStringUnion;
    this.testFixed = testFixed;
    this.testFixedUnion = testFixedUnion;
    this.testFixedArray = testFixedArray;
    this.testFixedUnionArray = testFixedUnionArray;
    this.testEnum = testEnum;
    this.testEnumUnion = testEnumUnion;
    this.testEnumArray = testEnumArray;
    this.testEnumUnionArray = testEnumUnionArray;
    this.testNewEnumIntUnionArray = testNewEnumIntUnionArray;
    this.oldSubRecord = oldSubRecord;
    this.newFieldWithOldSubRecord = newFieldWithOldSubRecord;
    this.subRecordUnion = subRecordUnion;
    this.subRecord = subRecord;
    this.recordArray = recordArray;
    this.recordUnionArray = recordUnionArray;
    this.stringableMap = stringableMap;
    this.recordMap = recordMap;
    this.recordUnionMap = recordUnionMap;
    this.recordUnionMapArray = recordUnionMapArray;
    this.recordUnionArrayMap = recordUnionArrayMap;
    this.booleanArray = booleanArray;
    this.doubleArray = doubleArray;
    this.floatArray = floatArray;
    this.intArray = intArray;
    this.longArray = longArray;
    this.stringArray = stringArray;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return testInt;
    case 1: return testIntUnion;
    case 2: return testLong;
    case 3: return testLongUnion;
    case 4: return testDouble;
    case 5: return testDoubleUnion;
    case 6: return testFloat;
    case 7: return testFloatUnion;
    case 8: return testBoolean;
    case 9: return testBooleanUnion;
    case 10: return testBytes;
    case 11: return testBytesUnion;
    case 12: return testString;
    case 13: return testStringable;
    case 14: return testStringUnion;
    case 15: return testFixed;
    case 16: return testFixedUnion;
    case 17: return testFixedArray;
    case 18: return testFixedUnionArray;
    case 19: return testEnum;
    case 20: return testEnumUnion;
    case 21: return testEnumArray;
    case 22: return testEnumUnionArray;
    case 23: return testNewEnumIntUnionArray;
    case 24: return oldSubRecord;
    case 25: return newFieldWithOldSubRecord;
    case 26: return subRecordUnion;
    case 27: return subRecord;
    case 28: return recordArray;
    case 29: return recordUnionArray;
    case 30: return stringableMap;
    case 31: return recordMap;
    case 32: return recordUnionMap;
    case 33: return recordUnionMapArray;
    case 34: return recordUnionArrayMap;
    case 35: return booleanArray;
    case 36: return doubleArray;
    case 37: return floatArray;
    case 38: return intArray;
    case 39: return longArray;
    case 40: return stringArray;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: testInt = (java.lang.Integer)value$; break;
    case 1: testIntUnion = (java.lang.Integer)value$; break;
    case 2: testLong = (java.lang.Long)value$; break;
    case 3: testLongUnion = (java.lang.Long)value$; break;
    case 4: testDouble = (java.lang.Double)value$; break;
    case 5: testDoubleUnion = (java.lang.Double)value$; break;
    case 6: testFloat = (java.lang.Float)value$; break;
    case 7: testFloatUnion = (java.lang.Float)value$; break;
    case 8: testBoolean = (java.lang.Boolean)value$; break;
    case 9: testBooleanUnion = (java.lang.Boolean)value$; break;
    case 10: testBytes = (java.nio.ByteBuffer)value$; break;
    case 11: testBytesUnion = (java.nio.ByteBuffer)value$; break;
    case 12: testString = (java.lang.CharSequence)value$; break;
    case 13: testStringable = (java.net.URL)value$; break;
    case 14: testStringUnion = (java.lang.CharSequence)value$; break;
    case 15: testFixed = (com.linkedin.avro.fastserde.generated.avro.DefaultsFixed)value$; break;
    case 16: testFixedUnion = (com.linkedin.avro.fastserde.generated.avro.DefaultsFixed)value$; break;
    case 17: testFixedArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed>)value$; break;
    case 18: testFixedUnionArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed>)value$; break;
    case 19: testEnum = (com.linkedin.avro.fastserde.generated.avro.DefaultsEnum)value$; break;
    case 20: testEnumUnion = (com.linkedin.avro.fastserde.generated.avro.DefaultsEnum)value$; break;
    case 21: testEnumArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum>)value$; break;
    case 22: testEnumUnionArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum>)value$; break;
    case 23: testNewEnumIntUnionArray = (java.util.List<java.util.List<java.lang.Object>>)value$; break;
    case 24: oldSubRecord = (com.linkedin.avro.fastserde.generated.avro.OldSubRecord)value$; break;
    case 25: newFieldWithOldSubRecord = (com.linkedin.avro.fastserde.generated.avro.OldSubRecord)value$; break;
    case 26: subRecordUnion = (com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord)value$; break;
    case 27: subRecord = (com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord)value$; break;
    case 28: recordArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>)value$; break;
    case 29: recordUnionArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>)value$; break;
    case 30: stringableMap = (java.util.Map<java.net.URL,java.math.BigInteger>)value$; break;
    case 31: recordMap = (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>)value$; break;
    case 32: recordUnionMap = (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>)value$; break;
    case 33: recordUnionMapArray = (java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>>)value$; break;
    case 34: recordUnionArrayMap = (java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>>)value$; break;
    case 35: booleanArray = (java.util.List<java.lang.Boolean>)value$; break;
    case 36: doubleArray = (java.util.List<java.lang.Double>)value$; break;
    case 37: floatArray = (java.util.List<java.lang.Float>)value$; break;
    case 38: intArray = (java.util.List<java.lang.Integer>)value$; break;
    case 39: longArray = (java.util.List<java.lang.Long>)value$; break;
    case 40: stringArray = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'testInt' field.
   * @return The value of the 'testInt' field.
   */
  public java.lang.Integer getTestInt() {
    return testInt;
  }

  /**
   * Sets the value of the 'testInt' field.
   * @param value the value to set.
   */
  public void setTestInt(java.lang.Integer value) {
    this.testInt = value;
  }

  /**
   * Gets the value of the 'testIntUnion' field.
   * @return The value of the 'testIntUnion' field.
   */
  public java.lang.Integer getTestIntUnion() {
    return testIntUnion;
  }

  /**
   * Sets the value of the 'testIntUnion' field.
   * @param value the value to set.
   */
  public void setTestIntUnion(java.lang.Integer value) {
    this.testIntUnion = value;
  }

  /**
   * Gets the value of the 'testLong' field.
   * @return The value of the 'testLong' field.
   */
  public java.lang.Long getTestLong() {
    return testLong;
  }

  /**
   * Sets the value of the 'testLong' field.
   * @param value the value to set.
   */
  public void setTestLong(java.lang.Long value) {
    this.testLong = value;
  }

  /**
   * Gets the value of the 'testLongUnion' field.
   * @return The value of the 'testLongUnion' field.
   */
  public java.lang.Long getTestLongUnion() {
    return testLongUnion;
  }

  /**
   * Sets the value of the 'testLongUnion' field.
   * @param value the value to set.
   */
  public void setTestLongUnion(java.lang.Long value) {
    this.testLongUnion = value;
  }

  /**
   * Gets the value of the 'testDouble' field.
   * @return The value of the 'testDouble' field.
   */
  public java.lang.Double getTestDouble() {
    return testDouble;
  }

  /**
   * Sets the value of the 'testDouble' field.
   * @param value the value to set.
   */
  public void setTestDouble(java.lang.Double value) {
    this.testDouble = value;
  }

  /**
   * Gets the value of the 'testDoubleUnion' field.
   * @return The value of the 'testDoubleUnion' field.
   */
  public java.lang.Double getTestDoubleUnion() {
    return testDoubleUnion;
  }

  /**
   * Sets the value of the 'testDoubleUnion' field.
   * @param value the value to set.
   */
  public void setTestDoubleUnion(java.lang.Double value) {
    this.testDoubleUnion = value;
  }

  /**
   * Gets the value of the 'testFloat' field.
   * @return The value of the 'testFloat' field.
   */
  public java.lang.Float getTestFloat() {
    return testFloat;
  }

  /**
   * Sets the value of the 'testFloat' field.
   * @param value the value to set.
   */
  public void setTestFloat(java.lang.Float value) {
    this.testFloat = value;
  }

  /**
   * Gets the value of the 'testFloatUnion' field.
   * @return The value of the 'testFloatUnion' field.
   */
  public java.lang.Float getTestFloatUnion() {
    return testFloatUnion;
  }

  /**
   * Sets the value of the 'testFloatUnion' field.
   * @param value the value to set.
   */
  public void setTestFloatUnion(java.lang.Float value) {
    this.testFloatUnion = value;
  }

  /**
   * Gets the value of the 'testBoolean' field.
   * @return The value of the 'testBoolean' field.
   */
  public java.lang.Boolean getTestBoolean() {
    return testBoolean;
  }

  /**
   * Sets the value of the 'testBoolean' field.
   * @param value the value to set.
   */
  public void setTestBoolean(java.lang.Boolean value) {
    this.testBoolean = value;
  }

  /**
   * Gets the value of the 'testBooleanUnion' field.
   * @return The value of the 'testBooleanUnion' field.
   */
  public java.lang.Boolean getTestBooleanUnion() {
    return testBooleanUnion;
  }

  /**
   * Sets the value of the 'testBooleanUnion' field.
   * @param value the value to set.
   */
  public void setTestBooleanUnion(java.lang.Boolean value) {
    this.testBooleanUnion = value;
  }

  /**
   * Gets the value of the 'testBytes' field.
   * @return The value of the 'testBytes' field.
   */
  public java.nio.ByteBuffer getTestBytes() {
    return testBytes;
  }

  /**
   * Sets the value of the 'testBytes' field.
   * @param value the value to set.
   */
  public void setTestBytes(java.nio.ByteBuffer value) {
    this.testBytes = value;
  }

  /**
   * Gets the value of the 'testBytesUnion' field.
   * @return The value of the 'testBytesUnion' field.
   */
  public java.nio.ByteBuffer getTestBytesUnion() {
    return testBytesUnion;
  }

  /**
   * Sets the value of the 'testBytesUnion' field.
   * @param value the value to set.
   */
  public void setTestBytesUnion(java.nio.ByteBuffer value) {
    this.testBytesUnion = value;
  }

  /**
   * Gets the value of the 'testString' field.
   * @return The value of the 'testString' field.
   */
  public java.lang.CharSequence getTestString() {
    return testString;
  }

  /**
   * Sets the value of the 'testString' field.
   * @param value the value to set.
   */
  public void setTestString(java.lang.CharSequence value) {
    this.testString = value;
  }

  /**
   * Gets the value of the 'testStringable' field.
   * @return The value of the 'testStringable' field.
   */
  public java.net.URL getTestStringable() {
    return testStringable;
  }

  /**
   * Sets the value of the 'testStringable' field.
   * @param value the value to set.
   */
  public void setTestStringable(java.net.URL value) {
    this.testStringable = value;
  }

  /**
   * Gets the value of the 'testStringUnion' field.
   * @return The value of the 'testStringUnion' field.
   */
  public java.lang.CharSequence getTestStringUnion() {
    return testStringUnion;
  }

  /**
   * Sets the value of the 'testStringUnion' field.
   * @param value the value to set.
   */
  public void setTestStringUnion(java.lang.CharSequence value) {
    this.testStringUnion = value;
  }

  /**
   * Gets the value of the 'testFixed' field.
   * @return The value of the 'testFixed' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.DefaultsFixed getTestFixed() {
    return testFixed;
  }

  /**
   * Sets the value of the 'testFixed' field.
   * @param value the value to set.
   */
  public void setTestFixed(com.linkedin.avro.fastserde.generated.avro.DefaultsFixed value) {
    this.testFixed = value;
  }

  /**
   * Gets the value of the 'testFixedUnion' field.
   * @return The value of the 'testFixedUnion' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.DefaultsFixed getTestFixedUnion() {
    return testFixedUnion;
  }

  /**
   * Sets the value of the 'testFixedUnion' field.
   * @param value the value to set.
   */
  public void setTestFixedUnion(com.linkedin.avro.fastserde.generated.avro.DefaultsFixed value) {
    this.testFixedUnion = value;
  }

  /**
   * Gets the value of the 'testFixedArray' field.
   * @return The value of the 'testFixedArray' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> getTestFixedArray() {
    return testFixedArray;
  }

  /**
   * Sets the value of the 'testFixedArray' field.
   * @param value the value to set.
   */
  public void setTestFixedArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> value) {
    this.testFixedArray = value;
  }

  /**
   * Gets the value of the 'testFixedUnionArray' field.
   * @return The value of the 'testFixedUnionArray' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> getTestFixedUnionArray() {
    return testFixedUnionArray;
  }

  /**
   * Sets the value of the 'testFixedUnionArray' field.
   * @param value the value to set.
   */
  public void setTestFixedUnionArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> value) {
    this.testFixedUnionArray = value;
  }

  /**
   * Gets the value of the 'testEnum' field.
   * @return The value of the 'testEnum' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.DefaultsEnum getTestEnum() {
    return testEnum;
  }

  /**
   * Sets the value of the 'testEnum' field.
   * @param value the value to set.
   */
  public void setTestEnum(com.linkedin.avro.fastserde.generated.avro.DefaultsEnum value) {
    this.testEnum = value;
  }

  /**
   * Gets the value of the 'testEnumUnion' field.
   * @return The value of the 'testEnumUnion' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.DefaultsEnum getTestEnumUnion() {
    return testEnumUnion;
  }

  /**
   * Sets the value of the 'testEnumUnion' field.
   * @param value the value to set.
   */
  public void setTestEnumUnion(com.linkedin.avro.fastserde.generated.avro.DefaultsEnum value) {
    this.testEnumUnion = value;
  }

  /**
   * Gets the value of the 'testEnumArray' field.
   * @return The value of the 'testEnumArray' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> getTestEnumArray() {
    return testEnumArray;
  }

  /**
   * Sets the value of the 'testEnumArray' field.
   * @param value the value to set.
   */
  public void setTestEnumArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> value) {
    this.testEnumArray = value;
  }

  /**
   * Gets the value of the 'testEnumUnionArray' field.
   * @return The value of the 'testEnumUnionArray' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> getTestEnumUnionArray() {
    return testEnumUnionArray;
  }

  /**
   * Sets the value of the 'testEnumUnionArray' field.
   * @param value the value to set.
   */
  public void setTestEnumUnionArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> value) {
    this.testEnumUnionArray = value;
  }

  /**
   * Gets the value of the 'testNewEnumIntUnionArray' field.
   * @return The value of the 'testNewEnumIntUnionArray' field.
   */
  public java.util.List<java.util.List<java.lang.Object>> getTestNewEnumIntUnionArray() {
    return testNewEnumIntUnionArray;
  }

  /**
   * Sets the value of the 'testNewEnumIntUnionArray' field.
   * @param value the value to set.
   */
  public void setTestNewEnumIntUnionArray(java.util.List<java.util.List<java.lang.Object>> value) {
    this.testNewEnumIntUnionArray = value;
  }

  /**
   * Gets the value of the 'oldSubRecord' field.
   * @return The value of the 'oldSubRecord' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.OldSubRecord getOldSubRecord() {
    return oldSubRecord;
  }

  /**
   * Sets the value of the 'oldSubRecord' field.
   * @param value the value to set.
   */
  public void setOldSubRecord(com.linkedin.avro.fastserde.generated.avro.OldSubRecord value) {
    this.oldSubRecord = value;
  }

  /**
   * Gets the value of the 'newFieldWithOldSubRecord' field.
   * @return The value of the 'newFieldWithOldSubRecord' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.OldSubRecord getNewFieldWithOldSubRecord() {
    return newFieldWithOldSubRecord;
  }

  /**
   * Sets the value of the 'newFieldWithOldSubRecord' field.
   * @param value the value to set.
   */
  public void setNewFieldWithOldSubRecord(com.linkedin.avro.fastserde.generated.avro.OldSubRecord value) {
    this.newFieldWithOldSubRecord = value;
  }

  /**
   * Gets the value of the 'subRecordUnion' field.
   * @return The value of the 'subRecordUnion' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord getSubRecordUnion() {
    return subRecordUnion;
  }

  /**
   * Sets the value of the 'subRecordUnion' field.
   * @param value the value to set.
   */
  public void setSubRecordUnion(com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord value) {
    this.subRecordUnion = value;
  }

  /**
   * Gets the value of the 'subRecord' field.
   * @return The value of the 'subRecord' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord getSubRecord() {
    return subRecord;
  }

  /**
   * Sets the value of the 'subRecord' field.
   * @param value the value to set.
   */
  public void setSubRecord(com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord value) {
    this.subRecord = value;
  }

  /**
   * Gets the value of the 'recordArray' field.
   * @return The value of the 'recordArray' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> getRecordArray() {
    return recordArray;
  }

  /**
   * Sets the value of the 'recordArray' field.
   * @param value the value to set.
   */
  public void setRecordArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> value) {
    this.recordArray = value;
  }

  /**
   * Gets the value of the 'recordUnionArray' field.
   * @return The value of the 'recordUnionArray' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> getRecordUnionArray() {
    return recordUnionArray;
  }

  /**
   * Sets the value of the 'recordUnionArray' field.
   * @param value the value to set.
   */
  public void setRecordUnionArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> value) {
    this.recordUnionArray = value;
  }

  /**
   * Gets the value of the 'stringableMap' field.
   * @return The value of the 'stringableMap' field.
   */
  public java.util.Map<java.net.URL,java.math.BigInteger> getStringableMap() {
    return stringableMap;
  }

  /**
   * Sets the value of the 'stringableMap' field.
   * @param value the value to set.
   */
  public void setStringableMap(java.util.Map<java.net.URL,java.math.BigInteger> value) {
    this.stringableMap = value;
  }

  /**
   * Gets the value of the 'recordMap' field.
   * @return The value of the 'recordMap' field.
   */
  public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> getRecordMap() {
    return recordMap;
  }

  /**
   * Sets the value of the 'recordMap' field.
   * @param value the value to set.
   */
  public void setRecordMap(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> value) {
    this.recordMap = value;
  }

  /**
   * Gets the value of the 'recordUnionMap' field.
   * @return The value of the 'recordUnionMap' field.
   */
  public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> getRecordUnionMap() {
    return recordUnionMap;
  }

  /**
   * Sets the value of the 'recordUnionMap' field.
   * @param value the value to set.
   */
  public void setRecordUnionMap(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> value) {
    this.recordUnionMap = value;
  }

  /**
   * Gets the value of the 'recordUnionMapArray' field.
   * @return The value of the 'recordUnionMapArray' field.
   */
  public java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> getRecordUnionMapArray() {
    return recordUnionMapArray;
  }

  /**
   * Sets the value of the 'recordUnionMapArray' field.
   * @param value the value to set.
   */
  public void setRecordUnionMapArray(java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> value) {
    this.recordUnionMapArray = value;
  }

  /**
   * Gets the value of the 'recordUnionArrayMap' field.
   * @return The value of the 'recordUnionArrayMap' field.
   */
  public java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> getRecordUnionArrayMap() {
    return recordUnionArrayMap;
  }

  /**
   * Sets the value of the 'recordUnionArrayMap' field.
   * @param value the value to set.
   */
  public void setRecordUnionArrayMap(java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> value) {
    this.recordUnionArrayMap = value;
  }

  /**
   * Gets the value of the 'booleanArray' field.
   * @return The value of the 'booleanArray' field.
   */
  public java.util.List<java.lang.Boolean> getBooleanArray() {
    return booleanArray;
  }

  /**
   * Sets the value of the 'booleanArray' field.
   * @param value the value to set.
   */
  public void setBooleanArray(java.util.List<java.lang.Boolean> value) {
    this.booleanArray = value;
  }

  /**
   * Gets the value of the 'doubleArray' field.
   * @return The value of the 'doubleArray' field.
   */
  public java.util.List<java.lang.Double> getDoubleArray() {
    return doubleArray;
  }

  /**
   * Sets the value of the 'doubleArray' field.
   * @param value the value to set.
   */
  public void setDoubleArray(java.util.List<java.lang.Double> value) {
    this.doubleArray = value;
  }

  /**
   * Gets the value of the 'floatArray' field.
   * @return The value of the 'floatArray' field.
   */
  public java.util.List<java.lang.Float> getFloatArray() {
    return floatArray;
  }

  /**
   * Sets the value of the 'floatArray' field.
   * @param value the value to set.
   */
  public void setFloatArray(java.util.List<java.lang.Float> value) {
    this.floatArray = value;
  }

  /**
   * Gets the value of the 'intArray' field.
   * @return The value of the 'intArray' field.
   */
  public java.util.List<java.lang.Integer> getIntArray() {
    return intArray;
  }

  /**
   * Sets the value of the 'intArray' field.
   * @param value the value to set.
   */
  public void setIntArray(java.util.List<java.lang.Integer> value) {
    this.intArray = value;
  }

  /**
   * Gets the value of the 'longArray' field.
   * @return The value of the 'longArray' field.
   */
  public java.util.List<java.lang.Long> getLongArray() {
    return longArray;
  }

  /**
   * Sets the value of the 'longArray' field.
   * @param value the value to set.
   */
  public void setLongArray(java.util.List<java.lang.Long> value) {
    this.longArray = value;
  }

  /**
   * Gets the value of the 'stringArray' field.
   * @return The value of the 'stringArray' field.
   */
  public java.util.List<java.lang.CharSequence> getStringArray() {
    return stringArray;
  }

  /**
   * Sets the value of the 'stringArray' field.
   * @param value the value to set.
   */
  public void setStringArray(java.util.List<java.lang.CharSequence> value) {
    this.stringArray = value;
  }

  /**
   * Creates a new DefaultsTestRecord RecordBuilder.
   * @return A new DefaultsTestRecord RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder newBuilder() {
    return new com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder();
  }

  /**
   * Creates a new DefaultsTestRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DefaultsTestRecord RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder other) {
    return new com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder(other);
  }

  /**
   * Creates a new DefaultsTestRecord RecordBuilder by copying an existing DefaultsTestRecord instance.
   * @param other The existing instance to copy.
   * @return A new DefaultsTestRecord RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord other) {
    return new com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder(other);
  }

  /**
   * RecordBuilder for DefaultsTestRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DefaultsTestRecord>
    implements org.apache.avro.data.RecordBuilder<DefaultsTestRecord> {

    private int testInt;
    private java.lang.Integer testIntUnion;
    private long testLong;
    private java.lang.Long testLongUnion;
    private double testDouble;
    private java.lang.Double testDoubleUnion;
    private float testFloat;
    private java.lang.Float testFloatUnion;
    private boolean testBoolean;
    private java.lang.Boolean testBooleanUnion;
    private java.nio.ByteBuffer testBytes;
    private java.nio.ByteBuffer testBytesUnion;
    private java.lang.CharSequence testString;
    private java.net.URL testStringable;
    private java.lang.CharSequence testStringUnion;
    private com.linkedin.avro.fastserde.generated.avro.DefaultsFixed testFixed;
    private com.linkedin.avro.fastserde.generated.avro.DefaultsFixed testFixedUnion;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> testFixedArray;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> testFixedUnionArray;
    private com.linkedin.avro.fastserde.generated.avro.DefaultsEnum testEnum;
    private com.linkedin.avro.fastserde.generated.avro.DefaultsEnum testEnumUnion;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> testEnumArray;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> testEnumUnionArray;
    private java.util.List<java.util.List<java.lang.Object>> testNewEnumIntUnionArray;
    private com.linkedin.avro.fastserde.generated.avro.OldSubRecord oldSubRecord;
    private com.linkedin.avro.fastserde.generated.avro.OldSubRecord.Builder oldSubRecordBuilder;
    private com.linkedin.avro.fastserde.generated.avro.OldSubRecord newFieldWithOldSubRecord;
    private com.linkedin.avro.fastserde.generated.avro.OldSubRecord.Builder newFieldWithOldSubRecordBuilder;
    private com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord subRecordUnion;
    private com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.Builder subRecordUnionBuilder;
    private com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord subRecord;
    private com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.Builder subRecordBuilder;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordArray;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordUnionArray;
    private java.util.Map<java.net.URL,java.math.BigInteger> stringableMap;
    private java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordMap;
    private java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> recordUnionMap;
    private java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> recordUnionMapArray;
    private java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> recordUnionArrayMap;
    private java.util.List<java.lang.Boolean> booleanArray;
    private java.util.List<java.lang.Double> doubleArray;
    private java.util.List<java.lang.Float> floatArray;
    private java.util.List<java.lang.Integer> intArray;
    private java.util.List<java.lang.Long> longArray;
    private java.util.List<java.lang.CharSequence> stringArray;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.testInt)) {
        this.testInt = data().deepCopy(fields()[0].schema(), other.testInt);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.testIntUnion)) {
        this.testIntUnion = data().deepCopy(fields()[1].schema(), other.testIntUnion);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.testLong)) {
        this.testLong = data().deepCopy(fields()[2].schema(), other.testLong);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.testLongUnion)) {
        this.testLongUnion = data().deepCopy(fields()[3].schema(), other.testLongUnion);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.testDouble)) {
        this.testDouble = data().deepCopy(fields()[4].schema(), other.testDouble);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.testDoubleUnion)) {
        this.testDoubleUnion = data().deepCopy(fields()[5].schema(), other.testDoubleUnion);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.testFloat)) {
        this.testFloat = data().deepCopy(fields()[6].schema(), other.testFloat);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.testFloatUnion)) {
        this.testFloatUnion = data().deepCopy(fields()[7].schema(), other.testFloatUnion);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.testBoolean)) {
        this.testBoolean = data().deepCopy(fields()[8].schema(), other.testBoolean);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.testBooleanUnion)) {
        this.testBooleanUnion = data().deepCopy(fields()[9].schema(), other.testBooleanUnion);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.testBytes)) {
        this.testBytes = data().deepCopy(fields()[10].schema(), other.testBytes);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.testBytesUnion)) {
        this.testBytesUnion = data().deepCopy(fields()[11].schema(), other.testBytesUnion);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.testString)) {
        this.testString = data().deepCopy(fields()[12].schema(), other.testString);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.testStringable)) {
        this.testStringable = data().deepCopy(fields()[13].schema(), other.testStringable);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.testStringUnion)) {
        this.testStringUnion = data().deepCopy(fields()[14].schema(), other.testStringUnion);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.testFixed)) {
        this.testFixed = data().deepCopy(fields()[15].schema(), other.testFixed);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.testFixedUnion)) {
        this.testFixedUnion = data().deepCopy(fields()[16].schema(), other.testFixedUnion);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.testFixedArray)) {
        this.testFixedArray = data().deepCopy(fields()[17].schema(), other.testFixedArray);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.testFixedUnionArray)) {
        this.testFixedUnionArray = data().deepCopy(fields()[18].schema(), other.testFixedUnionArray);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.testEnum)) {
        this.testEnum = data().deepCopy(fields()[19].schema(), other.testEnum);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.testEnumUnion)) {
        this.testEnumUnion = data().deepCopy(fields()[20].schema(), other.testEnumUnion);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.testEnumArray)) {
        this.testEnumArray = data().deepCopy(fields()[21].schema(), other.testEnumArray);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.testEnumUnionArray)) {
        this.testEnumUnionArray = data().deepCopy(fields()[22].schema(), other.testEnumUnionArray);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.testNewEnumIntUnionArray)) {
        this.testNewEnumIntUnionArray = data().deepCopy(fields()[23].schema(), other.testNewEnumIntUnionArray);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.oldSubRecord)) {
        this.oldSubRecord = data().deepCopy(fields()[24].schema(), other.oldSubRecord);
        fieldSetFlags()[24] = true;
      }
      if (other.hasOldSubRecordBuilder()) {
        this.oldSubRecordBuilder = com.linkedin.avro.fastserde.generated.avro.OldSubRecord.newBuilder(other.getOldSubRecordBuilder());
      }
      if (isValidValue(fields()[25], other.newFieldWithOldSubRecord)) {
        this.newFieldWithOldSubRecord = data().deepCopy(fields()[25].schema(), other.newFieldWithOldSubRecord);
        fieldSetFlags()[25] = true;
      }
      if (other.hasNewFieldWithOldSubRecordBuilder()) {
        this.newFieldWithOldSubRecordBuilder = com.linkedin.avro.fastserde.generated.avro.OldSubRecord.newBuilder(other.getNewFieldWithOldSubRecordBuilder());
      }
      if (isValidValue(fields()[26], other.subRecordUnion)) {
        this.subRecordUnion = data().deepCopy(fields()[26].schema(), other.subRecordUnion);
        fieldSetFlags()[26] = true;
      }
      if (other.hasSubRecordUnionBuilder()) {
        this.subRecordUnionBuilder = com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.newBuilder(other.getSubRecordUnionBuilder());
      }
      if (isValidValue(fields()[27], other.subRecord)) {
        this.subRecord = data().deepCopy(fields()[27].schema(), other.subRecord);
        fieldSetFlags()[27] = true;
      }
      if (other.hasSubRecordBuilder()) {
        this.subRecordBuilder = com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.newBuilder(other.getSubRecordBuilder());
      }
      if (isValidValue(fields()[28], other.recordArray)) {
        this.recordArray = data().deepCopy(fields()[28].schema(), other.recordArray);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.recordUnionArray)) {
        this.recordUnionArray = data().deepCopy(fields()[29].schema(), other.recordUnionArray);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.stringableMap)) {
        this.stringableMap = data().deepCopy(fields()[30].schema(), other.stringableMap);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.recordMap)) {
        this.recordMap = data().deepCopy(fields()[31].schema(), other.recordMap);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.recordUnionMap)) {
        this.recordUnionMap = data().deepCopy(fields()[32].schema(), other.recordUnionMap);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.recordUnionMapArray)) {
        this.recordUnionMapArray = data().deepCopy(fields()[33].schema(), other.recordUnionMapArray);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.recordUnionArrayMap)) {
        this.recordUnionArrayMap = data().deepCopy(fields()[34].schema(), other.recordUnionArrayMap);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.booleanArray)) {
        this.booleanArray = data().deepCopy(fields()[35].schema(), other.booleanArray);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.doubleArray)) {
        this.doubleArray = data().deepCopy(fields()[36].schema(), other.doubleArray);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.floatArray)) {
        this.floatArray = data().deepCopy(fields()[37].schema(), other.floatArray);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.intArray)) {
        this.intArray = data().deepCopy(fields()[38].schema(), other.intArray);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.longArray)) {
        this.longArray = data().deepCopy(fields()[39].schema(), other.longArray);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.stringArray)) {
        this.stringArray = data().deepCopy(fields()[40].schema(), other.stringArray);
        fieldSetFlags()[40] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing DefaultsTestRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.testInt)) {
        this.testInt = data().deepCopy(fields()[0].schema(), other.testInt);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.testIntUnion)) {
        this.testIntUnion = data().deepCopy(fields()[1].schema(), other.testIntUnion);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.testLong)) {
        this.testLong = data().deepCopy(fields()[2].schema(), other.testLong);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.testLongUnion)) {
        this.testLongUnion = data().deepCopy(fields()[3].schema(), other.testLongUnion);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.testDouble)) {
        this.testDouble = data().deepCopy(fields()[4].schema(), other.testDouble);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.testDoubleUnion)) {
        this.testDoubleUnion = data().deepCopy(fields()[5].schema(), other.testDoubleUnion);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.testFloat)) {
        this.testFloat = data().deepCopy(fields()[6].schema(), other.testFloat);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.testFloatUnion)) {
        this.testFloatUnion = data().deepCopy(fields()[7].schema(), other.testFloatUnion);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.testBoolean)) {
        this.testBoolean = data().deepCopy(fields()[8].schema(), other.testBoolean);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.testBooleanUnion)) {
        this.testBooleanUnion = data().deepCopy(fields()[9].schema(), other.testBooleanUnion);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.testBytes)) {
        this.testBytes = data().deepCopy(fields()[10].schema(), other.testBytes);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.testBytesUnion)) {
        this.testBytesUnion = data().deepCopy(fields()[11].schema(), other.testBytesUnion);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.testString)) {
        this.testString = data().deepCopy(fields()[12].schema(), other.testString);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.testStringable)) {
        this.testStringable = data().deepCopy(fields()[13].schema(), other.testStringable);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.testStringUnion)) {
        this.testStringUnion = data().deepCopy(fields()[14].schema(), other.testStringUnion);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.testFixed)) {
        this.testFixed = data().deepCopy(fields()[15].schema(), other.testFixed);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.testFixedUnion)) {
        this.testFixedUnion = data().deepCopy(fields()[16].schema(), other.testFixedUnion);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.testFixedArray)) {
        this.testFixedArray = data().deepCopy(fields()[17].schema(), other.testFixedArray);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.testFixedUnionArray)) {
        this.testFixedUnionArray = data().deepCopy(fields()[18].schema(), other.testFixedUnionArray);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.testEnum)) {
        this.testEnum = data().deepCopy(fields()[19].schema(), other.testEnum);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.testEnumUnion)) {
        this.testEnumUnion = data().deepCopy(fields()[20].schema(), other.testEnumUnion);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.testEnumArray)) {
        this.testEnumArray = data().deepCopy(fields()[21].schema(), other.testEnumArray);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.testEnumUnionArray)) {
        this.testEnumUnionArray = data().deepCopy(fields()[22].schema(), other.testEnumUnionArray);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.testNewEnumIntUnionArray)) {
        this.testNewEnumIntUnionArray = data().deepCopy(fields()[23].schema(), other.testNewEnumIntUnionArray);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.oldSubRecord)) {
        this.oldSubRecord = data().deepCopy(fields()[24].schema(), other.oldSubRecord);
        fieldSetFlags()[24] = true;
      }
      this.oldSubRecordBuilder = null;
      if (isValidValue(fields()[25], other.newFieldWithOldSubRecord)) {
        this.newFieldWithOldSubRecord = data().deepCopy(fields()[25].schema(), other.newFieldWithOldSubRecord);
        fieldSetFlags()[25] = true;
      }
      this.newFieldWithOldSubRecordBuilder = null;
      if (isValidValue(fields()[26], other.subRecordUnion)) {
        this.subRecordUnion = data().deepCopy(fields()[26].schema(), other.subRecordUnion);
        fieldSetFlags()[26] = true;
      }
      this.subRecordUnionBuilder = null;
      if (isValidValue(fields()[27], other.subRecord)) {
        this.subRecord = data().deepCopy(fields()[27].schema(), other.subRecord);
        fieldSetFlags()[27] = true;
      }
      this.subRecordBuilder = null;
      if (isValidValue(fields()[28], other.recordArray)) {
        this.recordArray = data().deepCopy(fields()[28].schema(), other.recordArray);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.recordUnionArray)) {
        this.recordUnionArray = data().deepCopy(fields()[29].schema(), other.recordUnionArray);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.stringableMap)) {
        this.stringableMap = data().deepCopy(fields()[30].schema(), other.stringableMap);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.recordMap)) {
        this.recordMap = data().deepCopy(fields()[31].schema(), other.recordMap);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.recordUnionMap)) {
        this.recordUnionMap = data().deepCopy(fields()[32].schema(), other.recordUnionMap);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.recordUnionMapArray)) {
        this.recordUnionMapArray = data().deepCopy(fields()[33].schema(), other.recordUnionMapArray);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.recordUnionArrayMap)) {
        this.recordUnionArrayMap = data().deepCopy(fields()[34].schema(), other.recordUnionArrayMap);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.booleanArray)) {
        this.booleanArray = data().deepCopy(fields()[35].schema(), other.booleanArray);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.doubleArray)) {
        this.doubleArray = data().deepCopy(fields()[36].schema(), other.doubleArray);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.floatArray)) {
        this.floatArray = data().deepCopy(fields()[37].schema(), other.floatArray);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.intArray)) {
        this.intArray = data().deepCopy(fields()[38].schema(), other.intArray);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.longArray)) {
        this.longArray = data().deepCopy(fields()[39].schema(), other.longArray);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.stringArray)) {
        this.stringArray = data().deepCopy(fields()[40].schema(), other.stringArray);
        fieldSetFlags()[40] = true;
      }
    }

    /**
      * Gets the value of the 'testInt' field.
      * @return The value.
      */
    public java.lang.Integer getTestInt() {
      return testInt;
    }

    /**
      * Sets the value of the 'testInt' field.
      * @param value The value of 'testInt'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestInt(int value) {
      validate(fields()[0], value);
      this.testInt = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'testInt' field has been set.
      * @return True if the 'testInt' field has been set, false otherwise.
      */
    public boolean hasTestInt() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'testInt' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestInt() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'testIntUnion' field.
      * @return The value.
      */
    public java.lang.Integer getTestIntUnion() {
      return testIntUnion;
    }

    /**
      * Sets the value of the 'testIntUnion' field.
      * @param value The value of 'testIntUnion'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestIntUnion(java.lang.Integer value) {
      validate(fields()[1], value);
      this.testIntUnion = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'testIntUnion' field has been set.
      * @return True if the 'testIntUnion' field has been set, false otherwise.
      */
    public boolean hasTestIntUnion() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'testIntUnion' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestIntUnion() {
      testIntUnion = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'testLong' field.
      * @return The value.
      */
    public java.lang.Long getTestLong() {
      return testLong;
    }

    /**
      * Sets the value of the 'testLong' field.
      * @param value The value of 'testLong'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestLong(long value) {
      validate(fields()[2], value);
      this.testLong = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'testLong' field has been set.
      * @return True if the 'testLong' field has been set, false otherwise.
      */
    public boolean hasTestLong() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'testLong' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestLong() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'testLongUnion' field.
      * @return The value.
      */
    public java.lang.Long getTestLongUnion() {
      return testLongUnion;
    }

    /**
      * Sets the value of the 'testLongUnion' field.
      * @param value The value of 'testLongUnion'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestLongUnion(java.lang.Long value) {
      validate(fields()[3], value);
      this.testLongUnion = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'testLongUnion' field has been set.
      * @return True if the 'testLongUnion' field has been set, false otherwise.
      */
    public boolean hasTestLongUnion() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'testLongUnion' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestLongUnion() {
      testLongUnion = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'testDouble' field.
      * @return The value.
      */
    public java.lang.Double getTestDouble() {
      return testDouble;
    }

    /**
      * Sets the value of the 'testDouble' field.
      * @param value The value of 'testDouble'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestDouble(double value) {
      validate(fields()[4], value);
      this.testDouble = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'testDouble' field has been set.
      * @return True if the 'testDouble' field has been set, false otherwise.
      */
    public boolean hasTestDouble() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'testDouble' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestDouble() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'testDoubleUnion' field.
      * @return The value.
      */
    public java.lang.Double getTestDoubleUnion() {
      return testDoubleUnion;
    }

    /**
      * Sets the value of the 'testDoubleUnion' field.
      * @param value The value of 'testDoubleUnion'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestDoubleUnion(java.lang.Double value) {
      validate(fields()[5], value);
      this.testDoubleUnion = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'testDoubleUnion' field has been set.
      * @return True if the 'testDoubleUnion' field has been set, false otherwise.
      */
    public boolean hasTestDoubleUnion() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'testDoubleUnion' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestDoubleUnion() {
      testDoubleUnion = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'testFloat' field.
      * @return The value.
      */
    public java.lang.Float getTestFloat() {
      return testFloat;
    }

    /**
      * Sets the value of the 'testFloat' field.
      * @param value The value of 'testFloat'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestFloat(float value) {
      validate(fields()[6], value);
      this.testFloat = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'testFloat' field has been set.
      * @return True if the 'testFloat' field has been set, false otherwise.
      */
    public boolean hasTestFloat() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'testFloat' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestFloat() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'testFloatUnion' field.
      * @return The value.
      */
    public java.lang.Float getTestFloatUnion() {
      return testFloatUnion;
    }

    /**
      * Sets the value of the 'testFloatUnion' field.
      * @param value The value of 'testFloatUnion'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestFloatUnion(java.lang.Float value) {
      validate(fields()[7], value);
      this.testFloatUnion = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'testFloatUnion' field has been set.
      * @return True if the 'testFloatUnion' field has been set, false otherwise.
      */
    public boolean hasTestFloatUnion() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'testFloatUnion' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestFloatUnion() {
      testFloatUnion = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'testBoolean' field.
      * @return The value.
      */
    public java.lang.Boolean getTestBoolean() {
      return testBoolean;
    }

    /**
      * Sets the value of the 'testBoolean' field.
      * @param value The value of 'testBoolean'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestBoolean(boolean value) {
      validate(fields()[8], value);
      this.testBoolean = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'testBoolean' field has been set.
      * @return True if the 'testBoolean' field has been set, false otherwise.
      */
    public boolean hasTestBoolean() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'testBoolean' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestBoolean() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'testBooleanUnion' field.
      * @return The value.
      */
    public java.lang.Boolean getTestBooleanUnion() {
      return testBooleanUnion;
    }

    /**
      * Sets the value of the 'testBooleanUnion' field.
      * @param value The value of 'testBooleanUnion'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestBooleanUnion(java.lang.Boolean value) {
      validate(fields()[9], value);
      this.testBooleanUnion = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'testBooleanUnion' field has been set.
      * @return True if the 'testBooleanUnion' field has been set, false otherwise.
      */
    public boolean hasTestBooleanUnion() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'testBooleanUnion' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestBooleanUnion() {
      testBooleanUnion = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'testBytes' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getTestBytes() {
      return testBytes;
    }

    /**
      * Sets the value of the 'testBytes' field.
      * @param value The value of 'testBytes'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestBytes(java.nio.ByteBuffer value) {
      validate(fields()[10], value);
      this.testBytes = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'testBytes' field has been set.
      * @return True if the 'testBytes' field has been set, false otherwise.
      */
    public boolean hasTestBytes() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'testBytes' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestBytes() {
      testBytes = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'testBytesUnion' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getTestBytesUnion() {
      return testBytesUnion;
    }

    /**
      * Sets the value of the 'testBytesUnion' field.
      * @param value The value of 'testBytesUnion'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestBytesUnion(java.nio.ByteBuffer value) {
      validate(fields()[11], value);
      this.testBytesUnion = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'testBytesUnion' field has been set.
      * @return True if the 'testBytesUnion' field has been set, false otherwise.
      */
    public boolean hasTestBytesUnion() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'testBytesUnion' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestBytesUnion() {
      testBytesUnion = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'testString' field.
      * @return The value.
      */
    public java.lang.CharSequence getTestString() {
      return testString;
    }

    /**
      * Sets the value of the 'testString' field.
      * @param value The value of 'testString'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestString(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.testString = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'testString' field has been set.
      * @return True if the 'testString' field has been set, false otherwise.
      */
    public boolean hasTestString() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'testString' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestString() {
      testString = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'testStringable' field.
      * @return The value.
      */
    public java.net.URL getTestStringable() {
      return testStringable;
    }

    /**
      * Sets the value of the 'testStringable' field.
      * @param value The value of 'testStringable'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestStringable(java.net.URL value) {
      validate(fields()[13], value);
      this.testStringable = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'testStringable' field has been set.
      * @return True if the 'testStringable' field has been set, false otherwise.
      */
    public boolean hasTestStringable() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'testStringable' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestStringable() {
      testStringable = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'testStringUnion' field.
      * @return The value.
      */
    public java.lang.CharSequence getTestStringUnion() {
      return testStringUnion;
    }

    /**
      * Sets the value of the 'testStringUnion' field.
      * @param value The value of 'testStringUnion'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestStringUnion(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.testStringUnion = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'testStringUnion' field has been set.
      * @return True if the 'testStringUnion' field has been set, false otherwise.
      */
    public boolean hasTestStringUnion() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'testStringUnion' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestStringUnion() {
      testStringUnion = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'testFixed' field.
      * @return The value.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsFixed getTestFixed() {
      return testFixed;
    }

    /**
      * Sets the value of the 'testFixed' field.
      * @param value The value of 'testFixed'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestFixed(com.linkedin.avro.fastserde.generated.avro.DefaultsFixed value) {
      validate(fields()[15], value);
      this.testFixed = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'testFixed' field has been set.
      * @return True if the 'testFixed' field has been set, false otherwise.
      */
    public boolean hasTestFixed() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'testFixed' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestFixed() {
      testFixed = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'testFixedUnion' field.
      * @return The value.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsFixed getTestFixedUnion() {
      return testFixedUnion;
    }

    /**
      * Sets the value of the 'testFixedUnion' field.
      * @param value The value of 'testFixedUnion'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestFixedUnion(com.linkedin.avro.fastserde.generated.avro.DefaultsFixed value) {
      validate(fields()[16], value);
      this.testFixedUnion = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'testFixedUnion' field has been set.
      * @return True if the 'testFixedUnion' field has been set, false otherwise.
      */
    public boolean hasTestFixedUnion() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'testFixedUnion' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestFixedUnion() {
      testFixedUnion = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'testFixedArray' field.
      * @return The value.
      */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> getTestFixedArray() {
      return testFixedArray;
    }

    /**
      * Sets the value of the 'testFixedArray' field.
      * @param value The value of 'testFixedArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestFixedArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> value) {
      validate(fields()[17], value);
      this.testFixedArray = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'testFixedArray' field has been set.
      * @return True if the 'testFixedArray' field has been set, false otherwise.
      */
    public boolean hasTestFixedArray() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'testFixedArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestFixedArray() {
      testFixedArray = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'testFixedUnionArray' field.
      * @return The value.
      */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> getTestFixedUnionArray() {
      return testFixedUnionArray;
    }

    /**
      * Sets the value of the 'testFixedUnionArray' field.
      * @param value The value of 'testFixedUnionArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestFixedUnionArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed> value) {
      validate(fields()[18], value);
      this.testFixedUnionArray = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'testFixedUnionArray' field has been set.
      * @return True if the 'testFixedUnionArray' field has been set, false otherwise.
      */
    public boolean hasTestFixedUnionArray() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'testFixedUnionArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestFixedUnionArray() {
      testFixedUnionArray = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'testEnum' field.
      * @return The value.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsEnum getTestEnum() {
      return testEnum;
    }

    /**
      * Sets the value of the 'testEnum' field.
      * @param value The value of 'testEnum'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestEnum(com.linkedin.avro.fastserde.generated.avro.DefaultsEnum value) {
      validate(fields()[19], value);
      this.testEnum = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'testEnum' field has been set.
      * @return True if the 'testEnum' field has been set, false otherwise.
      */
    public boolean hasTestEnum() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'testEnum' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestEnum() {
      testEnum = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'testEnumUnion' field.
      * @return The value.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsEnum getTestEnumUnion() {
      return testEnumUnion;
    }

    /**
      * Sets the value of the 'testEnumUnion' field.
      * @param value The value of 'testEnumUnion'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestEnumUnion(com.linkedin.avro.fastserde.generated.avro.DefaultsEnum value) {
      validate(fields()[20], value);
      this.testEnumUnion = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'testEnumUnion' field has been set.
      * @return True if the 'testEnumUnion' field has been set, false otherwise.
      */
    public boolean hasTestEnumUnion() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'testEnumUnion' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestEnumUnion() {
      testEnumUnion = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'testEnumArray' field.
      * @return The value.
      */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> getTestEnumArray() {
      return testEnumArray;
    }

    /**
      * Sets the value of the 'testEnumArray' field.
      * @param value The value of 'testEnumArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestEnumArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> value) {
      validate(fields()[21], value);
      this.testEnumArray = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'testEnumArray' field has been set.
      * @return True if the 'testEnumArray' field has been set, false otherwise.
      */
    public boolean hasTestEnumArray() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'testEnumArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestEnumArray() {
      testEnumArray = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'testEnumUnionArray' field.
      * @return The value.
      */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> getTestEnumUnionArray() {
      return testEnumUnionArray;
    }

    /**
      * Sets the value of the 'testEnumUnionArray' field.
      * @param value The value of 'testEnumUnionArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestEnumUnionArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum> value) {
      validate(fields()[22], value);
      this.testEnumUnionArray = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'testEnumUnionArray' field has been set.
      * @return True if the 'testEnumUnionArray' field has been set, false otherwise.
      */
    public boolean hasTestEnumUnionArray() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'testEnumUnionArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestEnumUnionArray() {
      testEnumUnionArray = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'testNewEnumIntUnionArray' field.
      * @return The value.
      */
    public java.util.List<java.util.List<java.lang.Object>> getTestNewEnumIntUnionArray() {
      return testNewEnumIntUnionArray;
    }

    /**
      * Sets the value of the 'testNewEnumIntUnionArray' field.
      * @param value The value of 'testNewEnumIntUnionArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setTestNewEnumIntUnionArray(java.util.List<java.util.List<java.lang.Object>> value) {
      validate(fields()[23], value);
      this.testNewEnumIntUnionArray = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'testNewEnumIntUnionArray' field has been set.
      * @return True if the 'testNewEnumIntUnionArray' field has been set, false otherwise.
      */
    public boolean hasTestNewEnumIntUnionArray() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'testNewEnumIntUnionArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearTestNewEnumIntUnionArray() {
      testNewEnumIntUnionArray = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'oldSubRecord' field.
      * @return The value.
      */
    public com.linkedin.avro.fastserde.generated.avro.OldSubRecord getOldSubRecord() {
      return oldSubRecord;
    }

    /**
      * Sets the value of the 'oldSubRecord' field.
      * @param value The value of 'oldSubRecord'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setOldSubRecord(com.linkedin.avro.fastserde.generated.avro.OldSubRecord value) {
      validate(fields()[24], value);
      this.oldSubRecordBuilder = null;
      this.oldSubRecord = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'oldSubRecord' field has been set.
      * @return True if the 'oldSubRecord' field has been set, false otherwise.
      */
    public boolean hasOldSubRecord() {
      return fieldSetFlags()[24];
    }

    /**
     * Gets the Builder instance for the 'oldSubRecord' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.linkedin.avro.fastserde.generated.avro.OldSubRecord.Builder getOldSubRecordBuilder() {
      if (oldSubRecordBuilder == null) {
        if (hasOldSubRecord()) {
          setOldSubRecordBuilder(com.linkedin.avro.fastserde.generated.avro.OldSubRecord.newBuilder(oldSubRecord));
        } else {
          setOldSubRecordBuilder(com.linkedin.avro.fastserde.generated.avro.OldSubRecord.newBuilder());
        }
      }
      return oldSubRecordBuilder;
    }

    /**
     * Sets the Builder instance for the 'oldSubRecord' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setOldSubRecordBuilder(com.linkedin.avro.fastserde.generated.avro.OldSubRecord.Builder value) {
      clearOldSubRecord();
      oldSubRecordBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'oldSubRecord' field has an active Builder instance
     * @return True if the 'oldSubRecord' field has an active Builder instance
     */
    public boolean hasOldSubRecordBuilder() {
      return oldSubRecordBuilder != null;
    }

    /**
      * Clears the value of the 'oldSubRecord' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearOldSubRecord() {
      oldSubRecord = null;
      oldSubRecordBuilder = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'newFieldWithOldSubRecord' field.
      * @return The value.
      */
    public com.linkedin.avro.fastserde.generated.avro.OldSubRecord getNewFieldWithOldSubRecord() {
      return newFieldWithOldSubRecord;
    }

    /**
      * Sets the value of the 'newFieldWithOldSubRecord' field.
      * @param value The value of 'newFieldWithOldSubRecord'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setNewFieldWithOldSubRecord(com.linkedin.avro.fastserde.generated.avro.OldSubRecord value) {
      validate(fields()[25], value);
      this.newFieldWithOldSubRecordBuilder = null;
      this.newFieldWithOldSubRecord = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'newFieldWithOldSubRecord' field has been set.
      * @return True if the 'newFieldWithOldSubRecord' field has been set, false otherwise.
      */
    public boolean hasNewFieldWithOldSubRecord() {
      return fieldSetFlags()[25];
    }

    /**
     * Gets the Builder instance for the 'newFieldWithOldSubRecord' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.linkedin.avro.fastserde.generated.avro.OldSubRecord.Builder getNewFieldWithOldSubRecordBuilder() {
      if (newFieldWithOldSubRecordBuilder == null) {
        if (hasNewFieldWithOldSubRecord()) {
          setNewFieldWithOldSubRecordBuilder(com.linkedin.avro.fastserde.generated.avro.OldSubRecord.newBuilder(newFieldWithOldSubRecord));
        } else {
          setNewFieldWithOldSubRecordBuilder(com.linkedin.avro.fastserde.generated.avro.OldSubRecord.newBuilder());
        }
      }
      return newFieldWithOldSubRecordBuilder;
    }

    /**
     * Sets the Builder instance for the 'newFieldWithOldSubRecord' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setNewFieldWithOldSubRecordBuilder(com.linkedin.avro.fastserde.generated.avro.OldSubRecord.Builder value) {
      clearNewFieldWithOldSubRecord();
      newFieldWithOldSubRecordBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'newFieldWithOldSubRecord' field has an active Builder instance
     * @return True if the 'newFieldWithOldSubRecord' field has an active Builder instance
     */
    public boolean hasNewFieldWithOldSubRecordBuilder() {
      return newFieldWithOldSubRecordBuilder != null;
    }

    /**
      * Clears the value of the 'newFieldWithOldSubRecord' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearNewFieldWithOldSubRecord() {
      newFieldWithOldSubRecord = null;
      newFieldWithOldSubRecordBuilder = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'subRecordUnion' field.
      * @return The value.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord getSubRecordUnion() {
      return subRecordUnion;
    }

    /**
      * Sets the value of the 'subRecordUnion' field.
      * @param value The value of 'subRecordUnion'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setSubRecordUnion(com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord value) {
      validate(fields()[26], value);
      this.subRecordUnionBuilder = null;
      this.subRecordUnion = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'subRecordUnion' field has been set.
      * @return True if the 'subRecordUnion' field has been set, false otherwise.
      */
    public boolean hasSubRecordUnion() {
      return fieldSetFlags()[26];
    }

    /**
     * Gets the Builder instance for the 'subRecordUnion' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.Builder getSubRecordUnionBuilder() {
      if (subRecordUnionBuilder == null) {
        if (hasSubRecordUnion()) {
          setSubRecordUnionBuilder(com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.newBuilder(subRecordUnion));
        } else {
          setSubRecordUnionBuilder(com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.newBuilder());
        }
      }
      return subRecordUnionBuilder;
    }

    /**
     * Sets the Builder instance for the 'subRecordUnion' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setSubRecordUnionBuilder(com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.Builder value) {
      clearSubRecordUnion();
      subRecordUnionBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subRecordUnion' field has an active Builder instance
     * @return True if the 'subRecordUnion' field has an active Builder instance
     */
    public boolean hasSubRecordUnionBuilder() {
      return subRecordUnionBuilder != null;
    }

    /**
      * Clears the value of the 'subRecordUnion' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearSubRecordUnion() {
      subRecordUnion = null;
      subRecordUnionBuilder = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'subRecord' field.
      * @return The value.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord getSubRecord() {
      return subRecord;
    }

    /**
      * Sets the value of the 'subRecord' field.
      * @param value The value of 'subRecord'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setSubRecord(com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord value) {
      validate(fields()[27], value);
      this.subRecordBuilder = null;
      this.subRecord = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'subRecord' field has been set.
      * @return True if the 'subRecord' field has been set, false otherwise.
      */
    public boolean hasSubRecord() {
      return fieldSetFlags()[27];
    }

    /**
     * Gets the Builder instance for the 'subRecord' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.Builder getSubRecordBuilder() {
      if (subRecordBuilder == null) {
        if (hasSubRecord()) {
          setSubRecordBuilder(com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.newBuilder(subRecord));
        } else {
          setSubRecordBuilder(com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.newBuilder());
        }
      }
      return subRecordBuilder;
    }

    /**
     * Sets the Builder instance for the 'subRecord' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setSubRecordBuilder(com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord.Builder value) {
      clearSubRecord();
      subRecordBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subRecord' field has an active Builder instance
     * @return True if the 'subRecord' field has an active Builder instance
     */
    public boolean hasSubRecordBuilder() {
      return subRecordBuilder != null;
    }

    /**
      * Clears the value of the 'subRecord' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearSubRecord() {
      subRecord = null;
      subRecordBuilder = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'recordArray' field.
      * @return The value.
      */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> getRecordArray() {
      return recordArray;
    }

    /**
      * Sets the value of the 'recordArray' field.
      * @param value The value of 'recordArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setRecordArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> value) {
      validate(fields()[28], value);
      this.recordArray = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'recordArray' field has been set.
      * @return True if the 'recordArray' field has been set, false otherwise.
      */
    public boolean hasRecordArray() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'recordArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearRecordArray() {
      recordArray = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'recordUnionArray' field.
      * @return The value.
      */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> getRecordUnionArray() {
      return recordUnionArray;
    }

    /**
      * Sets the value of the 'recordUnionArray' field.
      * @param value The value of 'recordUnionArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setRecordUnionArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> value) {
      validate(fields()[29], value);
      this.recordUnionArray = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'recordUnionArray' field has been set.
      * @return True if the 'recordUnionArray' field has been set, false otherwise.
      */
    public boolean hasRecordUnionArray() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'recordUnionArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearRecordUnionArray() {
      recordUnionArray = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'stringableMap' field.
      * @return The value.
      */
    public java.util.Map<java.net.URL,java.math.BigInteger> getStringableMap() {
      return stringableMap;
    }

    /**
      * Sets the value of the 'stringableMap' field.
      * @param value The value of 'stringableMap'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setStringableMap(java.util.Map<java.net.URL,java.math.BigInteger> value) {
      validate(fields()[30], value);
      this.stringableMap = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'stringableMap' field has been set.
      * @return True if the 'stringableMap' field has been set, false otherwise.
      */
    public boolean hasStringableMap() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'stringableMap' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearStringableMap() {
      stringableMap = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'recordMap' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> getRecordMap() {
      return recordMap;
    }

    /**
      * Sets the value of the 'recordMap' field.
      * @param value The value of 'recordMap'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setRecordMap(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> value) {
      validate(fields()[31], value);
      this.recordMap = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'recordMap' field has been set.
      * @return True if the 'recordMap' field has been set, false otherwise.
      */
    public boolean hasRecordMap() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'recordMap' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearRecordMap() {
      recordMap = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'recordUnionMap' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> getRecordUnionMap() {
      return recordUnionMap;
    }

    /**
      * Sets the value of the 'recordUnionMap' field.
      * @param value The value of 'recordUnionMap'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setRecordUnionMap(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord> value) {
      validate(fields()[32], value);
      this.recordUnionMap = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'recordUnionMap' field has been set.
      * @return True if the 'recordUnionMap' field has been set, false otherwise.
      */
    public boolean hasRecordUnionMap() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'recordUnionMap' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearRecordUnionMap() {
      recordUnionMap = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'recordUnionMapArray' field.
      * @return The value.
      */
    public java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> getRecordUnionMapArray() {
      return recordUnionMapArray;
    }

    /**
      * Sets the value of the 'recordUnionMapArray' field.
      * @param value The value of 'recordUnionMapArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setRecordUnionMapArray(java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> value) {
      validate(fields()[33], value);
      this.recordUnionMapArray = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'recordUnionMapArray' field has been set.
      * @return True if the 'recordUnionMapArray' field has been set, false otherwise.
      */
    public boolean hasRecordUnionMapArray() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'recordUnionMapArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearRecordUnionMapArray() {
      recordUnionMapArray = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'recordUnionArrayMap' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> getRecordUnionArrayMap() {
      return recordUnionArrayMap;
    }

    /**
      * Sets the value of the 'recordUnionArrayMap' field.
      * @param value The value of 'recordUnionArrayMap'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setRecordUnionArrayMap(java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>> value) {
      validate(fields()[34], value);
      this.recordUnionArrayMap = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'recordUnionArrayMap' field has been set.
      * @return True if the 'recordUnionArrayMap' field has been set, false otherwise.
      */
    public boolean hasRecordUnionArrayMap() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'recordUnionArrayMap' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearRecordUnionArrayMap() {
      recordUnionArrayMap = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'booleanArray' field.
      * @return The value.
      */
    public java.util.List<java.lang.Boolean> getBooleanArray() {
      return booleanArray;
    }

    /**
      * Sets the value of the 'booleanArray' field.
      * @param value The value of 'booleanArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setBooleanArray(java.util.List<java.lang.Boolean> value) {
      validate(fields()[35], value);
      this.booleanArray = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'booleanArray' field has been set.
      * @return True if the 'booleanArray' field has been set, false otherwise.
      */
    public boolean hasBooleanArray() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'booleanArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearBooleanArray() {
      booleanArray = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'doubleArray' field.
      * @return The value.
      */
    public java.util.List<java.lang.Double> getDoubleArray() {
      return doubleArray;
    }

    /**
      * Sets the value of the 'doubleArray' field.
      * @param value The value of 'doubleArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setDoubleArray(java.util.List<java.lang.Double> value) {
      validate(fields()[36], value);
      this.doubleArray = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'doubleArray' field has been set.
      * @return True if the 'doubleArray' field has been set, false otherwise.
      */
    public boolean hasDoubleArray() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'doubleArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearDoubleArray() {
      doubleArray = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'floatArray' field.
      * @return The value.
      */
    public java.util.List<java.lang.Float> getFloatArray() {
      return floatArray;
    }

    /**
      * Sets the value of the 'floatArray' field.
      * @param value The value of 'floatArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setFloatArray(java.util.List<java.lang.Float> value) {
      validate(fields()[37], value);
      this.floatArray = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'floatArray' field has been set.
      * @return True if the 'floatArray' field has been set, false otherwise.
      */
    public boolean hasFloatArray() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'floatArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearFloatArray() {
      floatArray = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'intArray' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIntArray() {
      return intArray;
    }

    /**
      * Sets the value of the 'intArray' field.
      * @param value The value of 'intArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setIntArray(java.util.List<java.lang.Integer> value) {
      validate(fields()[38], value);
      this.intArray = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'intArray' field has been set.
      * @return True if the 'intArray' field has been set, false otherwise.
      */
    public boolean hasIntArray() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'intArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearIntArray() {
      intArray = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'longArray' field.
      * @return The value.
      */
    public java.util.List<java.lang.Long> getLongArray() {
      return longArray;
    }

    /**
      * Sets the value of the 'longArray' field.
      * @param value The value of 'longArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setLongArray(java.util.List<java.lang.Long> value) {
      validate(fields()[39], value);
      this.longArray = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'longArray' field has been set.
      * @return True if the 'longArray' field has been set, false otherwise.
      */
    public boolean hasLongArray() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'longArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearLongArray() {
      longArray = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'stringArray' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getStringArray() {
      return stringArray;
    }

    /**
      * Sets the value of the 'stringArray' field.
      * @param value The value of 'stringArray'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder setStringArray(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[40], value);
      this.stringArray = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'stringArray' field has been set.
      * @return True if the 'stringArray' field has been set, false otherwise.
      */
    public boolean hasStringArray() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'stringArray' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.DefaultsTestRecord.Builder clearStringArray() {
      stringArray = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DefaultsTestRecord build() {
      try {
        DefaultsTestRecord record = new DefaultsTestRecord();
        record.testInt = fieldSetFlags()[0] ? this.testInt : (java.lang.Integer) defaultValue(fields()[0]);
        record.testIntUnion = fieldSetFlags()[1] ? this.testIntUnion : (java.lang.Integer) defaultValue(fields()[1]);
        record.testLong = fieldSetFlags()[2] ? this.testLong : (java.lang.Long) defaultValue(fields()[2]);
        record.testLongUnion = fieldSetFlags()[3] ? this.testLongUnion : (java.lang.Long) defaultValue(fields()[3]);
        record.testDouble = fieldSetFlags()[4] ? this.testDouble : (java.lang.Double) defaultValue(fields()[4]);
        record.testDoubleUnion = fieldSetFlags()[5] ? this.testDoubleUnion : (java.lang.Double) defaultValue(fields()[5]);
        record.testFloat = fieldSetFlags()[6] ? this.testFloat : (java.lang.Float) defaultValue(fields()[6]);
        record.testFloatUnion = fieldSetFlags()[7] ? this.testFloatUnion : (java.lang.Float) defaultValue(fields()[7]);
        record.testBoolean = fieldSetFlags()[8] ? this.testBoolean : (java.lang.Boolean) defaultValue(fields()[8]);
        record.testBooleanUnion = fieldSetFlags()[9] ? this.testBooleanUnion : (java.lang.Boolean) defaultValue(fields()[9]);
        record.testBytes = fieldSetFlags()[10] ? this.testBytes : (java.nio.ByteBuffer) defaultValue(fields()[10]);
        record.testBytesUnion = fieldSetFlags()[11] ? this.testBytesUnion : (java.nio.ByteBuffer) defaultValue(fields()[11]);
        record.testString = fieldSetFlags()[12] ? this.testString : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.testStringable = fieldSetFlags()[13] ? this.testStringable : (java.net.URL) defaultValue(fields()[13]);
        record.testStringUnion = fieldSetFlags()[14] ? this.testStringUnion : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.testFixed = fieldSetFlags()[15] ? this.testFixed : (com.linkedin.avro.fastserde.generated.avro.DefaultsFixed) defaultValue(fields()[15]);
        record.testFixedUnion = fieldSetFlags()[16] ? this.testFixedUnion : (com.linkedin.avro.fastserde.generated.avro.DefaultsFixed) defaultValue(fields()[16]);
        record.testFixedArray = fieldSetFlags()[17] ? this.testFixedArray : (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed>) defaultValue(fields()[17]);
        record.testFixedUnionArray = fieldSetFlags()[18] ? this.testFixedUnionArray : (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsFixed>) defaultValue(fields()[18]);
        record.testEnum = fieldSetFlags()[19] ? this.testEnum : (com.linkedin.avro.fastserde.generated.avro.DefaultsEnum) defaultValue(fields()[19]);
        record.testEnumUnion = fieldSetFlags()[20] ? this.testEnumUnion : (com.linkedin.avro.fastserde.generated.avro.DefaultsEnum) defaultValue(fields()[20]);
        record.testEnumArray = fieldSetFlags()[21] ? this.testEnumArray : (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum>) defaultValue(fields()[21]);
        record.testEnumUnionArray = fieldSetFlags()[22] ? this.testEnumUnionArray : (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsEnum>) defaultValue(fields()[22]);
        record.testNewEnumIntUnionArray = fieldSetFlags()[23] ? this.testNewEnumIntUnionArray : (java.util.List<java.util.List<java.lang.Object>>) defaultValue(fields()[23]);
        if (oldSubRecordBuilder != null) {
          record.oldSubRecord = this.oldSubRecordBuilder.build();
        } else {
          record.oldSubRecord = fieldSetFlags()[24] ? this.oldSubRecord : (com.linkedin.avro.fastserde.generated.avro.OldSubRecord) defaultValue(fields()[24]);
        }
        if (newFieldWithOldSubRecordBuilder != null) {
          record.newFieldWithOldSubRecord = this.newFieldWithOldSubRecordBuilder.build();
        } else {
          record.newFieldWithOldSubRecord = fieldSetFlags()[25] ? this.newFieldWithOldSubRecord : (com.linkedin.avro.fastserde.generated.avro.OldSubRecord) defaultValue(fields()[25]);
        }
        if (subRecordUnionBuilder != null) {
          record.subRecordUnion = this.subRecordUnionBuilder.build();
        } else {
          record.subRecordUnion = fieldSetFlags()[26] ? this.subRecordUnion : (com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord) defaultValue(fields()[26]);
        }
        if (subRecordBuilder != null) {
          record.subRecord = this.subRecordBuilder.build();
        } else {
          record.subRecord = fieldSetFlags()[27] ? this.subRecord : (com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord) defaultValue(fields()[27]);
        }
        record.recordArray = fieldSetFlags()[28] ? this.recordArray : (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>) defaultValue(fields()[28]);
        record.recordUnionArray = fieldSetFlags()[29] ? this.recordUnionArray : (java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>) defaultValue(fields()[29]);
        record.stringableMap = fieldSetFlags()[30] ? this.stringableMap : (java.util.Map<java.net.URL,java.math.BigInteger>) defaultValue(fields()[30]);
        record.recordMap = fieldSetFlags()[31] ? this.recordMap : (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>) defaultValue(fields()[31]);
        record.recordUnionMap = fieldSetFlags()[32] ? this.recordUnionMap : (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>) defaultValue(fields()[32]);
        record.recordUnionMapArray = fieldSetFlags()[33] ? this.recordUnionMapArray : (java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>>) defaultValue(fields()[33]);
        record.recordUnionArrayMap = fieldSetFlags()[34] ? this.recordUnionArrayMap : (java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.DefaultsSubRecord>>) defaultValue(fields()[34]);
        record.booleanArray = fieldSetFlags()[35] ? this.booleanArray : (java.util.List<java.lang.Boolean>) defaultValue(fields()[35]);
        record.doubleArray = fieldSetFlags()[36] ? this.doubleArray : (java.util.List<java.lang.Double>) defaultValue(fields()[36]);
        record.floatArray = fieldSetFlags()[37] ? this.floatArray : (java.util.List<java.lang.Float>) defaultValue(fields()[37]);
        record.intArray = fieldSetFlags()[38] ? this.intArray : (java.util.List<java.lang.Integer>) defaultValue(fields()[38]);
        record.longArray = fieldSetFlags()[39] ? this.longArray : (java.util.List<java.lang.Long>) defaultValue(fields()[39]);
        record.stringArray = fieldSetFlags()[40] ? this.stringArray : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[40]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DefaultsTestRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<DefaultsTestRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DefaultsTestRecord>
    READER$ = (org.apache.avro.io.DatumReader<DefaultsTestRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
