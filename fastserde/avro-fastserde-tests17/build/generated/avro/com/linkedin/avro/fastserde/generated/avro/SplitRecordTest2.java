/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.avro.fastserde.generated.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SplitRecordTest2 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SplitRecordTest2\",\"namespace\":\"com.linkedin.avro.fastserde.generated.avro\",\"fields\":[{\"name\":\"record1\",\"type\":{\"type\":\"record\",\"name\":\"StringRecord\",\"fields\":[{\"name\":\"field1\",\"type\":[\"null\",\"string\"],\"default\":null}],\"aliases\":[\"FullRecord\"]}},{\"name\":\"record2\",\"type\":{\"type\":\"record\",\"name\":\"IntRecord\",\"fields\":[{\"name\":\"field2\",\"type\":[\"null\",\"int\"],\"default\":null}],\"aliases\":[\"FullRecord\"]}},{\"name\":\"record3\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FullRecord\",\"fields\":[{\"name\":\"field1\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"field2\",\"type\":[\"null\",\"int\"],\"default\":null}]}}}],\"aliases\":[\"SplitRecordTest1\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.StringRecord record1;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.IntRecord record2;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.FullRecord> record3;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SplitRecordTest2() {}

  /**
   * All-args constructor.
   */
  public SplitRecordTest2(com.linkedin.avro.fastserde.generated.avro.StringRecord record1, com.linkedin.avro.fastserde.generated.avro.IntRecord record2, java.util.List<com.linkedin.avro.fastserde.generated.avro.FullRecord> record3) {
    this.record1 = record1;
    this.record2 = record2;
    this.record3 = record3;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return record1;
    case 1: return record2;
    case 2: return record3;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: record1 = (com.linkedin.avro.fastserde.generated.avro.StringRecord)value$; break;
    case 1: record2 = (com.linkedin.avro.fastserde.generated.avro.IntRecord)value$; break;
    case 2: record3 = (java.util.List<com.linkedin.avro.fastserde.generated.avro.FullRecord>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'record1' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.StringRecord getRecord1() {
    return record1;
  }

  /**
   * Sets the value of the 'record1' field.
   * @param value the value to set.
   */
  public void setRecord1(com.linkedin.avro.fastserde.generated.avro.StringRecord value) {
    this.record1 = value;
  }

  /**
   * Gets the value of the 'record2' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.IntRecord getRecord2() {
    return record2;
  }

  /**
   * Sets the value of the 'record2' field.
   * @param value the value to set.
   */
  public void setRecord2(com.linkedin.avro.fastserde.generated.avro.IntRecord value) {
    this.record2 = value;
  }

  /**
   * Gets the value of the 'record3' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.FullRecord> getRecord3() {
    return record3;
  }

  /**
   * Sets the value of the 'record3' field.
   * @param value the value to set.
   */
  public void setRecord3(java.util.List<com.linkedin.avro.fastserde.generated.avro.FullRecord> value) {
    this.record3 = value;
  }

  /** Creates a new SplitRecordTest2 RecordBuilder */
  public static com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder newBuilder() {
    return new com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder();
  }
  
  /** Creates a new SplitRecordTest2 RecordBuilder by copying an existing Builder */
  public static com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder other) {
    return new com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder(other);
  }
  
  /** Creates a new SplitRecordTest2 RecordBuilder by copying an existing SplitRecordTest2 instance */
  public static com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2 other) {
    return new com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder(other);
  }
  
  /**
   * RecordBuilder for SplitRecordTest2 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SplitRecordTest2>
    implements org.apache.avro.data.RecordBuilder<SplitRecordTest2> {

    private com.linkedin.avro.fastserde.generated.avro.StringRecord record1;
    private com.linkedin.avro.fastserde.generated.avro.IntRecord record2;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.FullRecord> record3;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.record1)) {
        this.record1 = data().deepCopy(fields()[0].schema(), other.record1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.record2)) {
        this.record2 = data().deepCopy(fields()[1].schema(), other.record2);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.record3)) {
        this.record3 = data().deepCopy(fields()[2].schema(), other.record3);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SplitRecordTest2 instance */
    private Builder(com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2 other) {
            super(com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.SCHEMA$);
      if (isValidValue(fields()[0], other.record1)) {
        this.record1 = data().deepCopy(fields()[0].schema(), other.record1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.record2)) {
        this.record2 = data().deepCopy(fields()[1].schema(), other.record2);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.record3)) {
        this.record3 = data().deepCopy(fields()[2].schema(), other.record3);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'record1' field */
    public com.linkedin.avro.fastserde.generated.avro.StringRecord getRecord1() {
      return record1;
    }
    
    /** Sets the value of the 'record1' field */
    public com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder setRecord1(com.linkedin.avro.fastserde.generated.avro.StringRecord value) {
      validate(fields()[0], value);
      this.record1 = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'record1' field has been set */
    public boolean hasRecord1() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'record1' field */
    public com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder clearRecord1() {
      record1 = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'record2' field */
    public com.linkedin.avro.fastserde.generated.avro.IntRecord getRecord2() {
      return record2;
    }
    
    /** Sets the value of the 'record2' field */
    public com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder setRecord2(com.linkedin.avro.fastserde.generated.avro.IntRecord value) {
      validate(fields()[1], value);
      this.record2 = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'record2' field has been set */
    public boolean hasRecord2() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'record2' field */
    public com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder clearRecord2() {
      record2 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'record3' field */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.FullRecord> getRecord3() {
      return record3;
    }
    
    /** Sets the value of the 'record3' field */
    public com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder setRecord3(java.util.List<com.linkedin.avro.fastserde.generated.avro.FullRecord> value) {
      validate(fields()[2], value);
      this.record3 = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'record3' field has been set */
    public boolean hasRecord3() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'record3' field */
    public com.linkedin.avro.fastserde.generated.avro.SplitRecordTest2.Builder clearRecord3() {
      record3 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public SplitRecordTest2 build() {
      try {
        SplitRecordTest2 record = new SplitRecordTest2();
        record.record1 = fieldSetFlags()[0] ? this.record1 : (com.linkedin.avro.fastserde.generated.avro.StringRecord) defaultValue(fields()[0]);
        record.record2 = fieldSetFlags()[1] ? this.record2 : (com.linkedin.avro.fastserde.generated.avro.IntRecord) defaultValue(fields()[1]);
        record.record3 = fieldSetFlags()[2] ? this.record3 : (java.util.List<com.linkedin.avro.fastserde.generated.avro.FullRecord>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
