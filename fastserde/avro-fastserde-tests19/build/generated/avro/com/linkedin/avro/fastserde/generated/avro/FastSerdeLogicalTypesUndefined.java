/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.avro.fastserde.generated.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Used in tests to confirm fast-serde supports logical-types */
@org.apache.avro.specific.AvroGenerated
public class FastSerdeLogicalTypesUndefined extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1061345473436268103L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FastSerdeLogicalTypesUndefined\",\"namespace\":\"com.linkedin.avro.fastserde.generated.avro\",\"doc\":\"Used in tests to confirm fast-serde supports logical-types\",\"fields\":[{\"name\":\"timeMillisField\",\"type\":\"int\"},{\"name\":\"dateField\",\"type\":\"int\"},{\"name\":\"arrayOfUnionOfDateAndTimestampMillis\",\"type\":{\"type\":\"array\",\"items\":[\"int\",\"long\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FastSerdeLogicalTypesUndefined> ENCODER =
      new BinaryMessageEncoder<FastSerdeLogicalTypesUndefined>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FastSerdeLogicalTypesUndefined> DECODER =
      new BinaryMessageDecoder<FastSerdeLogicalTypesUndefined>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FastSerdeLogicalTypesUndefined> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FastSerdeLogicalTypesUndefined> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FastSerdeLogicalTypesUndefined> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FastSerdeLogicalTypesUndefined>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FastSerdeLogicalTypesUndefined to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FastSerdeLogicalTypesUndefined from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FastSerdeLogicalTypesUndefined instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FastSerdeLogicalTypesUndefined fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int timeMillisField;
   private int dateField;
   private java.util.List<java.lang.Object> arrayOfUnionOfDateAndTimestampMillis;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FastSerdeLogicalTypesUndefined() {}

  /**
   * All-args constructor.
   * @param timeMillisField The new value for timeMillisField
   * @param dateField The new value for dateField
   * @param arrayOfUnionOfDateAndTimestampMillis The new value for arrayOfUnionOfDateAndTimestampMillis
   */
  public FastSerdeLogicalTypesUndefined(java.lang.Integer timeMillisField, java.lang.Integer dateField, java.util.List<java.lang.Object> arrayOfUnionOfDateAndTimestampMillis) {
    this.timeMillisField = timeMillisField;
    this.dateField = dateField;
    this.arrayOfUnionOfDateAndTimestampMillis = arrayOfUnionOfDateAndTimestampMillis;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timeMillisField;
    case 1: return dateField;
    case 2: return arrayOfUnionOfDateAndTimestampMillis;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timeMillisField = (java.lang.Integer)value$; break;
    case 1: dateField = (java.lang.Integer)value$; break;
    case 2: arrayOfUnionOfDateAndTimestampMillis = (java.util.List<java.lang.Object>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'timeMillisField' field.
   * @return The value of the 'timeMillisField' field.
   */
  public int getTimeMillisField() {
    return timeMillisField;
  }


  /**
   * Sets the value of the 'timeMillisField' field.
   * @param value the value to set.
   */
  public void setTimeMillisField(int value) {
    this.timeMillisField = value;
  }

  /**
   * Gets the value of the 'dateField' field.
   * @return The value of the 'dateField' field.
   */
  public int getDateField() {
    return dateField;
  }


  /**
   * Sets the value of the 'dateField' field.
   * @param value the value to set.
   */
  public void setDateField(int value) {
    this.dateField = value;
  }

  /**
   * Gets the value of the 'arrayOfUnionOfDateAndTimestampMillis' field.
   * @return The value of the 'arrayOfUnionOfDateAndTimestampMillis' field.
   */
  public java.util.List<java.lang.Object> getArrayOfUnionOfDateAndTimestampMillis() {
    return arrayOfUnionOfDateAndTimestampMillis;
  }


  /**
   * Sets the value of the 'arrayOfUnionOfDateAndTimestampMillis' field.
   * @param value the value to set.
   */
  public void setArrayOfUnionOfDateAndTimestampMillis(java.util.List<java.lang.Object> value) {
    this.arrayOfUnionOfDateAndTimestampMillis = value;
  }

  /**
   * Creates a new FastSerdeLogicalTypesUndefined RecordBuilder.
   * @return A new FastSerdeLogicalTypesUndefined RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder newBuilder() {
    return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder();
  }

  /**
   * Creates a new FastSerdeLogicalTypesUndefined RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FastSerdeLogicalTypesUndefined RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder other) {
    if (other == null) {
      return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder();
    } else {
      return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder(other);
    }
  }

  /**
   * Creates a new FastSerdeLogicalTypesUndefined RecordBuilder by copying an existing FastSerdeLogicalTypesUndefined instance.
   * @param other The existing instance to copy.
   * @return A new FastSerdeLogicalTypesUndefined RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined other) {
    if (other == null) {
      return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder();
    } else {
      return new com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder(other);
    }
  }

  /**
   * RecordBuilder for FastSerdeLogicalTypesUndefined instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FastSerdeLogicalTypesUndefined>
    implements org.apache.avro.data.RecordBuilder<FastSerdeLogicalTypesUndefined> {

    private int timeMillisField;
    private int dateField;
    private java.util.List<java.lang.Object> arrayOfUnionOfDateAndTimestampMillis;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timeMillisField)) {
        this.timeMillisField = data().deepCopy(fields()[0].schema(), other.timeMillisField);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.dateField)) {
        this.dateField = data().deepCopy(fields()[1].schema(), other.dateField);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.arrayOfUnionOfDateAndTimestampMillis)) {
        this.arrayOfUnionOfDateAndTimestampMillis = data().deepCopy(fields()[2].schema(), other.arrayOfUnionOfDateAndTimestampMillis);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing FastSerdeLogicalTypesUndefined instance
     * @param other The existing instance to copy.
     */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.timeMillisField)) {
        this.timeMillisField = data().deepCopy(fields()[0].schema(), other.timeMillisField);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dateField)) {
        this.dateField = data().deepCopy(fields()[1].schema(), other.dateField);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.arrayOfUnionOfDateAndTimestampMillis)) {
        this.arrayOfUnionOfDateAndTimestampMillis = data().deepCopy(fields()[2].schema(), other.arrayOfUnionOfDateAndTimestampMillis);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'timeMillisField' field.
      * @return The value.
      */
    public int getTimeMillisField() {
      return timeMillisField;
    }


    /**
      * Sets the value of the 'timeMillisField' field.
      * @param value The value of 'timeMillisField'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder setTimeMillisField(int value) {
      validate(fields()[0], value);
      this.timeMillisField = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'timeMillisField' field has been set.
      * @return True if the 'timeMillisField' field has been set, false otherwise.
      */
    public boolean hasTimeMillisField() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'timeMillisField' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder clearTimeMillisField() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'dateField' field.
      * @return The value.
      */
    public int getDateField() {
      return dateField;
    }


    /**
      * Sets the value of the 'dateField' field.
      * @param value The value of 'dateField'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder setDateField(int value) {
      validate(fields()[1], value);
      this.dateField = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'dateField' field has been set.
      * @return True if the 'dateField' field has been set, false otherwise.
      */
    public boolean hasDateField() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'dateField' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder clearDateField() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'arrayOfUnionOfDateAndTimestampMillis' field.
      * @return The value.
      */
    public java.util.List<java.lang.Object> getArrayOfUnionOfDateAndTimestampMillis() {
      return arrayOfUnionOfDateAndTimestampMillis;
    }


    /**
      * Sets the value of the 'arrayOfUnionOfDateAndTimestampMillis' field.
      * @param value The value of 'arrayOfUnionOfDateAndTimestampMillis'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder setArrayOfUnionOfDateAndTimestampMillis(java.util.List<java.lang.Object> value) {
      validate(fields()[2], value);
      this.arrayOfUnionOfDateAndTimestampMillis = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'arrayOfUnionOfDateAndTimestampMillis' field has been set.
      * @return True if the 'arrayOfUnionOfDateAndTimestampMillis' field has been set, false otherwise.
      */
    public boolean hasArrayOfUnionOfDateAndTimestampMillis() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'arrayOfUnionOfDateAndTimestampMillis' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeLogicalTypesUndefined.Builder clearArrayOfUnionOfDateAndTimestampMillis() {
      arrayOfUnionOfDateAndTimestampMillis = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FastSerdeLogicalTypesUndefined build() {
      try {
        FastSerdeLogicalTypesUndefined record = new FastSerdeLogicalTypesUndefined();
        record.timeMillisField = fieldSetFlags()[0] ? this.timeMillisField : (java.lang.Integer) defaultValue(fields()[0]);
        record.dateField = fieldSetFlags()[1] ? this.dateField : (java.lang.Integer) defaultValue(fields()[1]);
        record.arrayOfUnionOfDateAndTimestampMillis = fieldSetFlags()[2] ? this.arrayOfUnionOfDateAndTimestampMillis : (java.util.List<java.lang.Object>) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FastSerdeLogicalTypesUndefined>
    WRITER$ = (org.apache.avro.io.DatumWriter<FastSerdeLogicalTypesUndefined>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FastSerdeLogicalTypesUndefined>
    READER$ = (org.apache.avro.io.DatumReader<FastSerdeLogicalTypesUndefined>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










