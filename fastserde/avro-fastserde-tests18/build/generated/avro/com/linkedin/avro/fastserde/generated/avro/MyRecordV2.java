/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.avro.fastserde.generated.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MyRecordV2 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 251474079486200156L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MyRecordV2\",\"namespace\":\"com.linkedin.avro.fastserde.generated.avro\",\"fields\":[{\"name\":\"enumField\",\"type\":{\"type\":\"enum\",\"name\":\"MyEnumV2\",\"symbols\":[\"VAL1\",\"VAL3\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MyRecordV2> ENCODER =
      new BinaryMessageEncoder<MyRecordV2>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MyRecordV2> DECODER =
      new BinaryMessageDecoder<MyRecordV2>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MyRecordV2> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MyRecordV2> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MyRecordV2>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MyRecordV2 to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MyRecordV2 from a ByteBuffer. */
  public static MyRecordV2 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.linkedin.avro.fastserde.generated.avro.MyEnumV2 enumField;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MyRecordV2() {}

  /**
   * All-args constructor.
   * @param enumField The new value for enumField
   */
  public MyRecordV2(com.linkedin.avro.fastserde.generated.avro.MyEnumV2 enumField) {
    this.enumField = enumField;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return enumField;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: enumField = (com.linkedin.avro.fastserde.generated.avro.MyEnumV2)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'enumField' field.
   * @return The value of the 'enumField' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.MyEnumV2 getEnumField() {
    return enumField;
  }

  /**
   * Sets the value of the 'enumField' field.
   * @param value the value to set.
   */
  public void setEnumField(com.linkedin.avro.fastserde.generated.avro.MyEnumV2 value) {
    this.enumField = value;
  }

  /**
   * Creates a new MyRecordV2 RecordBuilder.
   * @return A new MyRecordV2 RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.MyRecordV2.Builder newBuilder() {
    return new com.linkedin.avro.fastserde.generated.avro.MyRecordV2.Builder();
  }

  /**
   * Creates a new MyRecordV2 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MyRecordV2 RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.MyRecordV2.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.MyRecordV2.Builder other) {
    return new com.linkedin.avro.fastserde.generated.avro.MyRecordV2.Builder(other);
  }

  /**
   * Creates a new MyRecordV2 RecordBuilder by copying an existing MyRecordV2 instance.
   * @param other The existing instance to copy.
   * @return A new MyRecordV2 RecordBuilder
   */
  public static com.linkedin.avro.fastserde.generated.avro.MyRecordV2.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.MyRecordV2 other) {
    return new com.linkedin.avro.fastserde.generated.avro.MyRecordV2.Builder(other);
  }

  /**
   * RecordBuilder for MyRecordV2 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MyRecordV2>
    implements org.apache.avro.data.RecordBuilder<MyRecordV2> {

    private com.linkedin.avro.fastserde.generated.avro.MyEnumV2 enumField;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.linkedin.avro.fastserde.generated.avro.MyRecordV2.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.enumField)) {
        this.enumField = data().deepCopy(fields()[0].schema(), other.enumField);
        fieldSetFlags()[0] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MyRecordV2 instance
     * @param other The existing instance to copy.
     */
    private Builder(com.linkedin.avro.fastserde.generated.avro.MyRecordV2 other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.enumField)) {
        this.enumField = data().deepCopy(fields()[0].schema(), other.enumField);
        fieldSetFlags()[0] = true;
      }
    }

    /**
      * Gets the value of the 'enumField' field.
      * @return The value.
      */
    public com.linkedin.avro.fastserde.generated.avro.MyEnumV2 getEnumField() {
      return enumField;
    }

    /**
      * Sets the value of the 'enumField' field.
      * @param value The value of 'enumField'.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.MyRecordV2.Builder setEnumField(com.linkedin.avro.fastserde.generated.avro.MyEnumV2 value) {
      validate(fields()[0], value);
      this.enumField = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'enumField' field has been set.
      * @return True if the 'enumField' field has been set, false otherwise.
      */
    public boolean hasEnumField() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'enumField' field.
      * @return This builder.
      */
    public com.linkedin.avro.fastserde.generated.avro.MyRecordV2.Builder clearEnumField() {
      enumField = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MyRecordV2 build() {
      try {
        MyRecordV2 record = new MyRecordV2();
        record.enumField = fieldSetFlags()[0] ? this.enumField : (com.linkedin.avro.fastserde.generated.avro.MyEnumV2) defaultValue(fields()[0]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MyRecordV2>
    WRITER$ = (org.apache.avro.io.DatumWriter<MyRecordV2>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MyRecordV2>
    READER$ = (org.apache.avro.io.DatumReader<MyRecordV2>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
