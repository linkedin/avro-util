/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.avro.fastserde.generated.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FullRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FullRecord\",\"namespace\":\"com.linkedin.avro.fastserde.generated.avro\",\"fields\":[{\"name\":\"field1\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"field2\",\"type\":[\"null\",\"int\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence field1;
  @Deprecated public java.lang.Integer field2;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public FullRecord() {}

  /**
   * All-args constructor.
   */
  public FullRecord(java.lang.CharSequence field1, java.lang.Integer field2) {
    this.field1 = field1;
    this.field2 = field2;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return field1;
    case 1: return field2;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: field1 = (java.lang.CharSequence)value$; break;
    case 1: field2 = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'field1' field.
   */
  public java.lang.CharSequence getField1() {
    return field1;
  }

  /**
   * Sets the value of the 'field1' field.
   * @param value the value to set.
   */
  public void setField1(java.lang.CharSequence value) {
    this.field1 = value;
  }

  /**
   * Gets the value of the 'field2' field.
   */
  public java.lang.Integer getField2() {
    return field2;
  }

  /**
   * Sets the value of the 'field2' field.
   * @param value the value to set.
   */
  public void setField2(java.lang.Integer value) {
    this.field2 = value;
  }

  /** Creates a new FullRecord RecordBuilder */
  public static com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder newBuilder() {
    return new com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder();
  }
  
  /** Creates a new FullRecord RecordBuilder by copying an existing Builder */
  public static com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder other) {
    return new com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder(other);
  }
  
  /** Creates a new FullRecord RecordBuilder by copying an existing FullRecord instance */
  public static com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FullRecord other) {
    return new com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder(other);
  }
  
  /**
   * RecordBuilder for FullRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FullRecord>
    implements org.apache.avro.data.RecordBuilder<FullRecord> {

    private java.lang.CharSequence field1;
    private java.lang.Integer field2;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.avro.fastserde.generated.avro.FullRecord.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.field1)) {
        this.field1 = data().deepCopy(fields()[0].schema(), other.field1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.field2)) {
        this.field2 = data().deepCopy(fields()[1].schema(), other.field2);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing FullRecord instance */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FullRecord other) {
            super(com.linkedin.avro.fastserde.generated.avro.FullRecord.SCHEMA$);
      if (isValidValue(fields()[0], other.field1)) {
        this.field1 = data().deepCopy(fields()[0].schema(), other.field1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.field2)) {
        this.field2 = data().deepCopy(fields()[1].schema(), other.field2);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'field1' field */
    public java.lang.CharSequence getField1() {
      return field1;
    }
    
    /** Sets the value of the 'field1' field */
    public com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder setField1(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.field1 = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'field1' field has been set */
    public boolean hasField1() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'field1' field */
    public com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder clearField1() {
      field1 = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'field2' field */
    public java.lang.Integer getField2() {
      return field2;
    }
    
    /** Sets the value of the 'field2' field */
    public com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder setField2(java.lang.Integer value) {
      validate(fields()[1], value);
      this.field2 = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'field2' field has been set */
    public boolean hasField2() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'field2' field */
    public com.linkedin.avro.fastserde.generated.avro.FullRecord.Builder clearField2() {
      field2 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public FullRecord build() {
      try {
        FullRecord record = new FullRecord();
        record.field1 = fieldSetFlags()[0] ? this.field1 : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.field2 = fieldSetFlags()[1] ? this.field2 : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
