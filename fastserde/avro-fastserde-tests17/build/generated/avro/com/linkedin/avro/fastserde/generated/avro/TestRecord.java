/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.avro.fastserde.generated.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TestRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TestRecord\",\"namespace\":\"com.linkedin.avro.fastserde.generated.avro\",\"fields\":[{\"name\":\"testInt\",\"type\":\"int\"},{\"name\":\"testIntUnion\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"testLong\",\"type\":\"long\"},{\"name\":\"testLongUnion\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"testDouble\",\"type\":\"double\"},{\"name\":\"testDoubleUnion\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"testFloat\",\"type\":\"float\"},{\"name\":\"testFloatUnion\",\"type\":[\"null\",\"float\"],\"default\":null},{\"name\":\"testBoolean\",\"type\":\"boolean\"},{\"name\":\"testBooleanUnion\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"testBytes\",\"type\":\"bytes\"},{\"name\":\"testBytesUnion\",\"type\":[\"null\",\"bytes\"],\"default\":null},{\"name\":\"testString\",\"type\":\"string\"},{\"name\":\"testStringUnion\",\"type\":[\"null\",\"string\"],\"default\":null,\"aliases\":[\"testStringAlias\"]},{\"name\":\"testFixed\",\"type\":{\"type\":\"fixed\",\"name\":\"TestFixed\",\"size\":1}},{\"name\":\"testFixedUnion\",\"type\":[\"null\",\"TestFixed\"],\"default\":null},{\"name\":\"testFixedArray\",\"type\":{\"type\":\"array\",\"items\":\"TestFixed\"}},{\"name\":\"testFixedUnionArray\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"TestFixed\"]}},{\"name\":\"testEnum\",\"type\":{\"type\":\"enum\",\"name\":\"TestEnum\",\"symbols\":[\"A\",\"B\",\"C\",\"D\",\"E\"]}},{\"name\":\"testEnumUnion\",\"type\":[\"null\",\"TestEnum\"],\"default\":null},{\"name\":\"testEnumArray\",\"type\":{\"type\":\"array\",\"items\":\"TestEnum\"}},{\"name\":\"testEnumUnionArray\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"TestEnum\"]}},{\"name\":\"subRecordUnion\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"SubRecord\",\"fields\":[{\"name\":\"subField\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"anotherField\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"subRecord\",\"type\":\"SubRecord\"},{\"name\":\"recordsArray\",\"type\":{\"type\":\"array\",\"items\":\"SubRecord\"}},{\"name\":\"recordsMap\",\"type\":{\"type\":\"map\",\"values\":\"SubRecord\"}},{\"name\":\"recordsArrayUnion\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",\"SubRecord\"]}],\"default\":null},{\"name\":\"recordsMapUnion\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",\"SubRecord\"]}],\"default\":null},{\"name\":\"recordsArrayMap\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"map\",\"values\":[\"null\",\"SubRecord\"]}}},{\"name\":\"recordsMapArray\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":[\"null\",\"SubRecord\"]}}},{\"name\":\"recordsArrayMapUnion\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"map\",\"values\":[\"null\",\"SubRecord\"]}}]},{\"name\":\"recordsMapArrayUnion\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":[\"null\",\"SubRecord\"]}}],\"default\":null},{\"name\":\"union\",\"type\":[\"null\",\"SubRecord\",\"string\",\"int\"],\"default\":null},{\"name\":\"booleanArray\",\"type\":{\"type\":\"array\",\"items\":\"boolean\"},\"default\":[]},{\"name\":\"doubleArray\",\"type\":{\"type\":\"array\",\"items\":\"double\"},\"default\":[]},{\"name\":\"floatArray\",\"type\":{\"type\":\"array\",\"items\":\"float\"},\"default\":[]},{\"name\":\"intArray\",\"type\":{\"type\":\"array\",\"items\":\"int\"},\"default\":[]},{\"name\":\"longArray\",\"type\":{\"type\":\"array\",\"items\":\"long\"},\"default\":[]},{\"name\":\"stringArray\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int testInt;
  @Deprecated public java.lang.Integer testIntUnion;
  @Deprecated public long testLong;
  @Deprecated public java.lang.Long testLongUnion;
  @Deprecated public double testDouble;
  @Deprecated public java.lang.Double testDoubleUnion;
  @Deprecated public float testFloat;
  @Deprecated public java.lang.Float testFloatUnion;
  @Deprecated public boolean testBoolean;
  @Deprecated public java.lang.Boolean testBooleanUnion;
  @Deprecated public java.nio.ByteBuffer testBytes;
  @Deprecated public java.nio.ByteBuffer testBytesUnion;
  @Deprecated public java.lang.CharSequence testString;
  @Deprecated public java.lang.CharSequence testStringUnion;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.TestFixed testFixed;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.TestFixed testFixedUnion;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> testFixedArray;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> testFixedUnionArray;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.TestEnum testEnum;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.TestEnum testEnumUnion;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> testEnumArray;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> testEnumUnionArray;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.SubRecord subRecordUnion;
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.SubRecord subRecord;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsArray;
  @Deprecated public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsMap;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsArrayUnion;
  @Deprecated public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsMapUnion;
  @Deprecated public java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsArrayMap;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsMapArray;
  @Deprecated public java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsArrayMapUnion;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsMapArrayUnion;
  @Deprecated public java.lang.Object union;
  @Deprecated public java.util.List<java.lang.Boolean> booleanArray;
  @Deprecated public java.util.List<java.lang.Double> doubleArray;
  @Deprecated public java.util.List<java.lang.Float> floatArray;
  @Deprecated public java.util.List<java.lang.Integer> intArray;
  @Deprecated public java.util.List<java.lang.Long> longArray;
  @Deprecated public java.util.List<java.lang.CharSequence> stringArray;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TestRecord() {}

  /**
   * All-args constructor.
   */
  public TestRecord(java.lang.Integer testInt, java.lang.Integer testIntUnion, java.lang.Long testLong, java.lang.Long testLongUnion, java.lang.Double testDouble, java.lang.Double testDoubleUnion, java.lang.Float testFloat, java.lang.Float testFloatUnion, java.lang.Boolean testBoolean, java.lang.Boolean testBooleanUnion, java.nio.ByteBuffer testBytes, java.nio.ByteBuffer testBytesUnion, java.lang.CharSequence testString, java.lang.CharSequence testStringUnion, com.linkedin.avro.fastserde.generated.avro.TestFixed testFixed, com.linkedin.avro.fastserde.generated.avro.TestFixed testFixedUnion, java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> testFixedArray, java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> testFixedUnionArray, com.linkedin.avro.fastserde.generated.avro.TestEnum testEnum, com.linkedin.avro.fastserde.generated.avro.TestEnum testEnumUnion, java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> testEnumArray, java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> testEnumUnionArray, com.linkedin.avro.fastserde.generated.avro.SubRecord subRecordUnion, com.linkedin.avro.fastserde.generated.avro.SubRecord subRecord, java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsArray, java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsMap, java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsArrayUnion, java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsMapUnion, java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsArrayMap, java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsMapArray, java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsArrayMapUnion, java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsMapArrayUnion, java.lang.Object union, java.util.List<java.lang.Boolean> booleanArray, java.util.List<java.lang.Double> doubleArray, java.util.List<java.lang.Float> floatArray, java.util.List<java.lang.Integer> intArray, java.util.List<java.lang.Long> longArray, java.util.List<java.lang.CharSequence> stringArray) {
    this.testInt = testInt;
    this.testIntUnion = testIntUnion;
    this.testLong = testLong;
    this.testLongUnion = testLongUnion;
    this.testDouble = testDouble;
    this.testDoubleUnion = testDoubleUnion;
    this.testFloat = testFloat;
    this.testFloatUnion = testFloatUnion;
    this.testBoolean = testBoolean;
    this.testBooleanUnion = testBooleanUnion;
    this.testBytes = testBytes;
    this.testBytesUnion = testBytesUnion;
    this.testString = testString;
    this.testStringUnion = testStringUnion;
    this.testFixed = testFixed;
    this.testFixedUnion = testFixedUnion;
    this.testFixedArray = testFixedArray;
    this.testFixedUnionArray = testFixedUnionArray;
    this.testEnum = testEnum;
    this.testEnumUnion = testEnumUnion;
    this.testEnumArray = testEnumArray;
    this.testEnumUnionArray = testEnumUnionArray;
    this.subRecordUnion = subRecordUnion;
    this.subRecord = subRecord;
    this.recordsArray = recordsArray;
    this.recordsMap = recordsMap;
    this.recordsArrayUnion = recordsArrayUnion;
    this.recordsMapUnion = recordsMapUnion;
    this.recordsArrayMap = recordsArrayMap;
    this.recordsMapArray = recordsMapArray;
    this.recordsArrayMapUnion = recordsArrayMapUnion;
    this.recordsMapArrayUnion = recordsMapArrayUnion;
    this.union = union;
    this.booleanArray = booleanArray;
    this.doubleArray = doubleArray;
    this.floatArray = floatArray;
    this.intArray = intArray;
    this.longArray = longArray;
    this.stringArray = stringArray;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return testInt;
    case 1: return testIntUnion;
    case 2: return testLong;
    case 3: return testLongUnion;
    case 4: return testDouble;
    case 5: return testDoubleUnion;
    case 6: return testFloat;
    case 7: return testFloatUnion;
    case 8: return testBoolean;
    case 9: return testBooleanUnion;
    case 10: return testBytes;
    case 11: return testBytesUnion;
    case 12: return testString;
    case 13: return testStringUnion;
    case 14: return testFixed;
    case 15: return testFixedUnion;
    case 16: return testFixedArray;
    case 17: return testFixedUnionArray;
    case 18: return testEnum;
    case 19: return testEnumUnion;
    case 20: return testEnumArray;
    case 21: return testEnumUnionArray;
    case 22: return subRecordUnion;
    case 23: return subRecord;
    case 24: return recordsArray;
    case 25: return recordsMap;
    case 26: return recordsArrayUnion;
    case 27: return recordsMapUnion;
    case 28: return recordsArrayMap;
    case 29: return recordsMapArray;
    case 30: return recordsArrayMapUnion;
    case 31: return recordsMapArrayUnion;
    case 32: return union;
    case 33: return booleanArray;
    case 34: return doubleArray;
    case 35: return floatArray;
    case 36: return intArray;
    case 37: return longArray;
    case 38: return stringArray;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: testInt = (java.lang.Integer)value$; break;
    case 1: testIntUnion = (java.lang.Integer)value$; break;
    case 2: testLong = (java.lang.Long)value$; break;
    case 3: testLongUnion = (java.lang.Long)value$; break;
    case 4: testDouble = (java.lang.Double)value$; break;
    case 5: testDoubleUnion = (java.lang.Double)value$; break;
    case 6: testFloat = (java.lang.Float)value$; break;
    case 7: testFloatUnion = (java.lang.Float)value$; break;
    case 8: testBoolean = (java.lang.Boolean)value$; break;
    case 9: testBooleanUnion = (java.lang.Boolean)value$; break;
    case 10: testBytes = (java.nio.ByteBuffer)value$; break;
    case 11: testBytesUnion = (java.nio.ByteBuffer)value$; break;
    case 12: testString = (java.lang.CharSequence)value$; break;
    case 13: testStringUnion = (java.lang.CharSequence)value$; break;
    case 14: testFixed = (com.linkedin.avro.fastserde.generated.avro.TestFixed)value$; break;
    case 15: testFixedUnion = (com.linkedin.avro.fastserde.generated.avro.TestFixed)value$; break;
    case 16: testFixedArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed>)value$; break;
    case 17: testFixedUnionArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed>)value$; break;
    case 18: testEnum = (com.linkedin.avro.fastserde.generated.avro.TestEnum)value$; break;
    case 19: testEnumUnion = (com.linkedin.avro.fastserde.generated.avro.TestEnum)value$; break;
    case 20: testEnumArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum>)value$; break;
    case 21: testEnumUnionArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum>)value$; break;
    case 22: subRecordUnion = (com.linkedin.avro.fastserde.generated.avro.SubRecord)value$; break;
    case 23: subRecord = (com.linkedin.avro.fastserde.generated.avro.SubRecord)value$; break;
    case 24: recordsArray = (java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>)value$; break;
    case 25: recordsMap = (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>)value$; break;
    case 26: recordsArrayUnion = (java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>)value$; break;
    case 27: recordsMapUnion = (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>)value$; break;
    case 28: recordsArrayMap = (java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>>)value$; break;
    case 29: recordsMapArray = (java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>>)value$; break;
    case 30: recordsArrayMapUnion = (java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>>)value$; break;
    case 31: recordsMapArrayUnion = (java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>>)value$; break;
    case 32: union = (java.lang.Object)value$; break;
    case 33: booleanArray = (java.util.List<java.lang.Boolean>)value$; break;
    case 34: doubleArray = (java.util.List<java.lang.Double>)value$; break;
    case 35: floatArray = (java.util.List<java.lang.Float>)value$; break;
    case 36: intArray = (java.util.List<java.lang.Integer>)value$; break;
    case 37: longArray = (java.util.List<java.lang.Long>)value$; break;
    case 38: stringArray = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'testInt' field.
   */
  public java.lang.Integer getTestInt() {
    return testInt;
  }

  /**
   * Sets the value of the 'testInt' field.
   * @param value the value to set.
   */
  public void setTestInt(java.lang.Integer value) {
    this.testInt = value;
  }

  /**
   * Gets the value of the 'testIntUnion' field.
   */
  public java.lang.Integer getTestIntUnion() {
    return testIntUnion;
  }

  /**
   * Sets the value of the 'testIntUnion' field.
   * @param value the value to set.
   */
  public void setTestIntUnion(java.lang.Integer value) {
    this.testIntUnion = value;
  }

  /**
   * Gets the value of the 'testLong' field.
   */
  public java.lang.Long getTestLong() {
    return testLong;
  }

  /**
   * Sets the value of the 'testLong' field.
   * @param value the value to set.
   */
  public void setTestLong(java.lang.Long value) {
    this.testLong = value;
  }

  /**
   * Gets the value of the 'testLongUnion' field.
   */
  public java.lang.Long getTestLongUnion() {
    return testLongUnion;
  }

  /**
   * Sets the value of the 'testLongUnion' field.
   * @param value the value to set.
   */
  public void setTestLongUnion(java.lang.Long value) {
    this.testLongUnion = value;
  }

  /**
   * Gets the value of the 'testDouble' field.
   */
  public java.lang.Double getTestDouble() {
    return testDouble;
  }

  /**
   * Sets the value of the 'testDouble' field.
   * @param value the value to set.
   */
  public void setTestDouble(java.lang.Double value) {
    this.testDouble = value;
  }

  /**
   * Gets the value of the 'testDoubleUnion' field.
   */
  public java.lang.Double getTestDoubleUnion() {
    return testDoubleUnion;
  }

  /**
   * Sets the value of the 'testDoubleUnion' field.
   * @param value the value to set.
   */
  public void setTestDoubleUnion(java.lang.Double value) {
    this.testDoubleUnion = value;
  }

  /**
   * Gets the value of the 'testFloat' field.
   */
  public java.lang.Float getTestFloat() {
    return testFloat;
  }

  /**
   * Sets the value of the 'testFloat' field.
   * @param value the value to set.
   */
  public void setTestFloat(java.lang.Float value) {
    this.testFloat = value;
  }

  /**
   * Gets the value of the 'testFloatUnion' field.
   */
  public java.lang.Float getTestFloatUnion() {
    return testFloatUnion;
  }

  /**
   * Sets the value of the 'testFloatUnion' field.
   * @param value the value to set.
   */
  public void setTestFloatUnion(java.lang.Float value) {
    this.testFloatUnion = value;
  }

  /**
   * Gets the value of the 'testBoolean' field.
   */
  public java.lang.Boolean getTestBoolean() {
    return testBoolean;
  }

  /**
   * Sets the value of the 'testBoolean' field.
   * @param value the value to set.
   */
  public void setTestBoolean(java.lang.Boolean value) {
    this.testBoolean = value;
  }

  /**
   * Gets the value of the 'testBooleanUnion' field.
   */
  public java.lang.Boolean getTestBooleanUnion() {
    return testBooleanUnion;
  }

  /**
   * Sets the value of the 'testBooleanUnion' field.
   * @param value the value to set.
   */
  public void setTestBooleanUnion(java.lang.Boolean value) {
    this.testBooleanUnion = value;
  }

  /**
   * Gets the value of the 'testBytes' field.
   */
  public java.nio.ByteBuffer getTestBytes() {
    return testBytes;
  }

  /**
   * Sets the value of the 'testBytes' field.
   * @param value the value to set.
   */
  public void setTestBytes(java.nio.ByteBuffer value) {
    this.testBytes = value;
  }

  /**
   * Gets the value of the 'testBytesUnion' field.
   */
  public java.nio.ByteBuffer getTestBytesUnion() {
    return testBytesUnion;
  }

  /**
   * Sets the value of the 'testBytesUnion' field.
   * @param value the value to set.
   */
  public void setTestBytesUnion(java.nio.ByteBuffer value) {
    this.testBytesUnion = value;
  }

  /**
   * Gets the value of the 'testString' field.
   */
  public java.lang.CharSequence getTestString() {
    return testString;
  }

  /**
   * Sets the value of the 'testString' field.
   * @param value the value to set.
   */
  public void setTestString(java.lang.CharSequence value) {
    this.testString = value;
  }

  /**
   * Gets the value of the 'testStringUnion' field.
   */
  public java.lang.CharSequence getTestStringUnion() {
    return testStringUnion;
  }

  /**
   * Sets the value of the 'testStringUnion' field.
   * @param value the value to set.
   */
  public void setTestStringUnion(java.lang.CharSequence value) {
    this.testStringUnion = value;
  }

  /**
   * Gets the value of the 'testFixed' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.TestFixed getTestFixed() {
    return testFixed;
  }

  /**
   * Sets the value of the 'testFixed' field.
   * @param value the value to set.
   */
  public void setTestFixed(com.linkedin.avro.fastserde.generated.avro.TestFixed value) {
    this.testFixed = value;
  }

  /**
   * Gets the value of the 'testFixedUnion' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.TestFixed getTestFixedUnion() {
    return testFixedUnion;
  }

  /**
   * Sets the value of the 'testFixedUnion' field.
   * @param value the value to set.
   */
  public void setTestFixedUnion(com.linkedin.avro.fastserde.generated.avro.TestFixed value) {
    this.testFixedUnion = value;
  }

  /**
   * Gets the value of the 'testFixedArray' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> getTestFixedArray() {
    return testFixedArray;
  }

  /**
   * Sets the value of the 'testFixedArray' field.
   * @param value the value to set.
   */
  public void setTestFixedArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> value) {
    this.testFixedArray = value;
  }

  /**
   * Gets the value of the 'testFixedUnionArray' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> getTestFixedUnionArray() {
    return testFixedUnionArray;
  }

  /**
   * Sets the value of the 'testFixedUnionArray' field.
   * @param value the value to set.
   */
  public void setTestFixedUnionArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> value) {
    this.testFixedUnionArray = value;
  }

  /**
   * Gets the value of the 'testEnum' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.TestEnum getTestEnum() {
    return testEnum;
  }

  /**
   * Sets the value of the 'testEnum' field.
   * @param value the value to set.
   */
  public void setTestEnum(com.linkedin.avro.fastserde.generated.avro.TestEnum value) {
    this.testEnum = value;
  }

  /**
   * Gets the value of the 'testEnumUnion' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.TestEnum getTestEnumUnion() {
    return testEnumUnion;
  }

  /**
   * Sets the value of the 'testEnumUnion' field.
   * @param value the value to set.
   */
  public void setTestEnumUnion(com.linkedin.avro.fastserde.generated.avro.TestEnum value) {
    this.testEnumUnion = value;
  }

  /**
   * Gets the value of the 'testEnumArray' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> getTestEnumArray() {
    return testEnumArray;
  }

  /**
   * Sets the value of the 'testEnumArray' field.
   * @param value the value to set.
   */
  public void setTestEnumArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> value) {
    this.testEnumArray = value;
  }

  /**
   * Gets the value of the 'testEnumUnionArray' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> getTestEnumUnionArray() {
    return testEnumUnionArray;
  }

  /**
   * Sets the value of the 'testEnumUnionArray' field.
   * @param value the value to set.
   */
  public void setTestEnumUnionArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> value) {
    this.testEnumUnionArray = value;
  }

  /**
   * Gets the value of the 'subRecordUnion' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.SubRecord getSubRecordUnion() {
    return subRecordUnion;
  }

  /**
   * Sets the value of the 'subRecordUnion' field.
   * @param value the value to set.
   */
  public void setSubRecordUnion(com.linkedin.avro.fastserde.generated.avro.SubRecord value) {
    this.subRecordUnion = value;
  }

  /**
   * Gets the value of the 'subRecord' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.SubRecord getSubRecord() {
    return subRecord;
  }

  /**
   * Sets the value of the 'subRecord' field.
   * @param value the value to set.
   */
  public void setSubRecord(com.linkedin.avro.fastserde.generated.avro.SubRecord value) {
    this.subRecord = value;
  }

  /**
   * Gets the value of the 'recordsArray' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> getRecordsArray() {
    return recordsArray;
  }

  /**
   * Sets the value of the 'recordsArray' field.
   * @param value the value to set.
   */
  public void setRecordsArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> value) {
    this.recordsArray = value;
  }

  /**
   * Gets the value of the 'recordsMap' field.
   */
  public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> getRecordsMap() {
    return recordsMap;
  }

  /**
   * Sets the value of the 'recordsMap' field.
   * @param value the value to set.
   */
  public void setRecordsMap(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> value) {
    this.recordsMap = value;
  }

  /**
   * Gets the value of the 'recordsArrayUnion' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> getRecordsArrayUnion() {
    return recordsArrayUnion;
  }

  /**
   * Sets the value of the 'recordsArrayUnion' field.
   * @param value the value to set.
   */
  public void setRecordsArrayUnion(java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> value) {
    this.recordsArrayUnion = value;
  }

  /**
   * Gets the value of the 'recordsMapUnion' field.
   */
  public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> getRecordsMapUnion() {
    return recordsMapUnion;
  }

  /**
   * Sets the value of the 'recordsMapUnion' field.
   * @param value the value to set.
   */
  public void setRecordsMapUnion(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> value) {
    this.recordsMapUnion = value;
  }

  /**
   * Gets the value of the 'recordsArrayMap' field.
   */
  public java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> getRecordsArrayMap() {
    return recordsArrayMap;
  }

  /**
   * Sets the value of the 'recordsArrayMap' field.
   * @param value the value to set.
   */
  public void setRecordsArrayMap(java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> value) {
    this.recordsArrayMap = value;
  }

  /**
   * Gets the value of the 'recordsMapArray' field.
   */
  public java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> getRecordsMapArray() {
    return recordsMapArray;
  }

  /**
   * Sets the value of the 'recordsMapArray' field.
   * @param value the value to set.
   */
  public void setRecordsMapArray(java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> value) {
    this.recordsMapArray = value;
  }

  /**
   * Gets the value of the 'recordsArrayMapUnion' field.
   */
  public java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> getRecordsArrayMapUnion() {
    return recordsArrayMapUnion;
  }

  /**
   * Sets the value of the 'recordsArrayMapUnion' field.
   * @param value the value to set.
   */
  public void setRecordsArrayMapUnion(java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> value) {
    this.recordsArrayMapUnion = value;
  }

  /**
   * Gets the value of the 'recordsMapArrayUnion' field.
   */
  public java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> getRecordsMapArrayUnion() {
    return recordsMapArrayUnion;
  }

  /**
   * Sets the value of the 'recordsMapArrayUnion' field.
   * @param value the value to set.
   */
  public void setRecordsMapArrayUnion(java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> value) {
    this.recordsMapArrayUnion = value;
  }

  /**
   * Gets the value of the 'union' field.
   */
  public java.lang.Object getUnion() {
    return union;
  }

  /**
   * Sets the value of the 'union' field.
   * @param value the value to set.
   */
  public void setUnion(java.lang.Object value) {
    this.union = value;
  }

  /**
   * Gets the value of the 'booleanArray' field.
   */
  public java.util.List<java.lang.Boolean> getBooleanArray() {
    return booleanArray;
  }

  /**
   * Sets the value of the 'booleanArray' field.
   * @param value the value to set.
   */
  public void setBooleanArray(java.util.List<java.lang.Boolean> value) {
    this.booleanArray = value;
  }

  /**
   * Gets the value of the 'doubleArray' field.
   */
  public java.util.List<java.lang.Double> getDoubleArray() {
    return doubleArray;
  }

  /**
   * Sets the value of the 'doubleArray' field.
   * @param value the value to set.
   */
  public void setDoubleArray(java.util.List<java.lang.Double> value) {
    this.doubleArray = value;
  }

  /**
   * Gets the value of the 'floatArray' field.
   */
  public java.util.List<java.lang.Float> getFloatArray() {
    return floatArray;
  }

  /**
   * Sets the value of the 'floatArray' field.
   * @param value the value to set.
   */
  public void setFloatArray(java.util.List<java.lang.Float> value) {
    this.floatArray = value;
  }

  /**
   * Gets the value of the 'intArray' field.
   */
  public java.util.List<java.lang.Integer> getIntArray() {
    return intArray;
  }

  /**
   * Sets the value of the 'intArray' field.
   * @param value the value to set.
   */
  public void setIntArray(java.util.List<java.lang.Integer> value) {
    this.intArray = value;
  }

  /**
   * Gets the value of the 'longArray' field.
   */
  public java.util.List<java.lang.Long> getLongArray() {
    return longArray;
  }

  /**
   * Sets the value of the 'longArray' field.
   * @param value the value to set.
   */
  public void setLongArray(java.util.List<java.lang.Long> value) {
    this.longArray = value;
  }

  /**
   * Gets the value of the 'stringArray' field.
   */
  public java.util.List<java.lang.CharSequence> getStringArray() {
    return stringArray;
  }

  /**
   * Sets the value of the 'stringArray' field.
   * @param value the value to set.
   */
  public void setStringArray(java.util.List<java.lang.CharSequence> value) {
    this.stringArray = value;
  }

  /** Creates a new TestRecord RecordBuilder */
  public static com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder newBuilder() {
    return new com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder();
  }
  
  /** Creates a new TestRecord RecordBuilder by copying an existing Builder */
  public static com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder other) {
    return new com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder(other);
  }
  
  /** Creates a new TestRecord RecordBuilder by copying an existing TestRecord instance */
  public static com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.TestRecord other) {
    return new com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder(other);
  }
  
  /**
   * RecordBuilder for TestRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TestRecord>
    implements org.apache.avro.data.RecordBuilder<TestRecord> {

    private int testInt;
    private java.lang.Integer testIntUnion;
    private long testLong;
    private java.lang.Long testLongUnion;
    private double testDouble;
    private java.lang.Double testDoubleUnion;
    private float testFloat;
    private java.lang.Float testFloatUnion;
    private boolean testBoolean;
    private java.lang.Boolean testBooleanUnion;
    private java.nio.ByteBuffer testBytes;
    private java.nio.ByteBuffer testBytesUnion;
    private java.lang.CharSequence testString;
    private java.lang.CharSequence testStringUnion;
    private com.linkedin.avro.fastserde.generated.avro.TestFixed testFixed;
    private com.linkedin.avro.fastserde.generated.avro.TestFixed testFixedUnion;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> testFixedArray;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> testFixedUnionArray;
    private com.linkedin.avro.fastserde.generated.avro.TestEnum testEnum;
    private com.linkedin.avro.fastserde.generated.avro.TestEnum testEnumUnion;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> testEnumArray;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> testEnumUnionArray;
    private com.linkedin.avro.fastserde.generated.avro.SubRecord subRecordUnion;
    private com.linkedin.avro.fastserde.generated.avro.SubRecord subRecord;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsArray;
    private java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsMap;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsArrayUnion;
    private java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> recordsMapUnion;
    private java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsArrayMap;
    private java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsMapArray;
    private java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsArrayMapUnion;
    private java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> recordsMapArrayUnion;
    private java.lang.Object union;
    private java.util.List<java.lang.Boolean> booleanArray;
    private java.util.List<java.lang.Double> doubleArray;
    private java.util.List<java.lang.Float> floatArray;
    private java.util.List<java.lang.Integer> intArray;
    private java.util.List<java.lang.Long> longArray;
    private java.util.List<java.lang.CharSequence> stringArray;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.avro.fastserde.generated.avro.TestRecord.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.testInt)) {
        this.testInt = data().deepCopy(fields()[0].schema(), other.testInt);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.testIntUnion)) {
        this.testIntUnion = data().deepCopy(fields()[1].schema(), other.testIntUnion);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.testLong)) {
        this.testLong = data().deepCopy(fields()[2].schema(), other.testLong);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.testLongUnion)) {
        this.testLongUnion = data().deepCopy(fields()[3].schema(), other.testLongUnion);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.testDouble)) {
        this.testDouble = data().deepCopy(fields()[4].schema(), other.testDouble);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.testDoubleUnion)) {
        this.testDoubleUnion = data().deepCopy(fields()[5].schema(), other.testDoubleUnion);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.testFloat)) {
        this.testFloat = data().deepCopy(fields()[6].schema(), other.testFloat);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.testFloatUnion)) {
        this.testFloatUnion = data().deepCopy(fields()[7].schema(), other.testFloatUnion);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.testBoolean)) {
        this.testBoolean = data().deepCopy(fields()[8].schema(), other.testBoolean);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.testBooleanUnion)) {
        this.testBooleanUnion = data().deepCopy(fields()[9].schema(), other.testBooleanUnion);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.testBytes)) {
        this.testBytes = data().deepCopy(fields()[10].schema(), other.testBytes);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.testBytesUnion)) {
        this.testBytesUnion = data().deepCopy(fields()[11].schema(), other.testBytesUnion);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.testString)) {
        this.testString = data().deepCopy(fields()[12].schema(), other.testString);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.testStringUnion)) {
        this.testStringUnion = data().deepCopy(fields()[13].schema(), other.testStringUnion);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.testFixed)) {
        this.testFixed = data().deepCopy(fields()[14].schema(), other.testFixed);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.testFixedUnion)) {
        this.testFixedUnion = data().deepCopy(fields()[15].schema(), other.testFixedUnion);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.testFixedArray)) {
        this.testFixedArray = data().deepCopy(fields()[16].schema(), other.testFixedArray);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.testFixedUnionArray)) {
        this.testFixedUnionArray = data().deepCopy(fields()[17].schema(), other.testFixedUnionArray);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.testEnum)) {
        this.testEnum = data().deepCopy(fields()[18].schema(), other.testEnum);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.testEnumUnion)) {
        this.testEnumUnion = data().deepCopy(fields()[19].schema(), other.testEnumUnion);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.testEnumArray)) {
        this.testEnumArray = data().deepCopy(fields()[20].schema(), other.testEnumArray);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.testEnumUnionArray)) {
        this.testEnumUnionArray = data().deepCopy(fields()[21].schema(), other.testEnumUnionArray);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.subRecordUnion)) {
        this.subRecordUnion = data().deepCopy(fields()[22].schema(), other.subRecordUnion);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.subRecord)) {
        this.subRecord = data().deepCopy(fields()[23].schema(), other.subRecord);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.recordsArray)) {
        this.recordsArray = data().deepCopy(fields()[24].schema(), other.recordsArray);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.recordsMap)) {
        this.recordsMap = data().deepCopy(fields()[25].schema(), other.recordsMap);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.recordsArrayUnion)) {
        this.recordsArrayUnion = data().deepCopy(fields()[26].schema(), other.recordsArrayUnion);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.recordsMapUnion)) {
        this.recordsMapUnion = data().deepCopy(fields()[27].schema(), other.recordsMapUnion);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.recordsArrayMap)) {
        this.recordsArrayMap = data().deepCopy(fields()[28].schema(), other.recordsArrayMap);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.recordsMapArray)) {
        this.recordsMapArray = data().deepCopy(fields()[29].schema(), other.recordsMapArray);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.recordsArrayMapUnion)) {
        this.recordsArrayMapUnion = data().deepCopy(fields()[30].schema(), other.recordsArrayMapUnion);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.recordsMapArrayUnion)) {
        this.recordsMapArrayUnion = data().deepCopy(fields()[31].schema(), other.recordsMapArrayUnion);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.union)) {
        this.union = data().deepCopy(fields()[32].schema(), other.union);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.booleanArray)) {
        this.booleanArray = data().deepCopy(fields()[33].schema(), other.booleanArray);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.doubleArray)) {
        this.doubleArray = data().deepCopy(fields()[34].schema(), other.doubleArray);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.floatArray)) {
        this.floatArray = data().deepCopy(fields()[35].schema(), other.floatArray);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.intArray)) {
        this.intArray = data().deepCopy(fields()[36].schema(), other.intArray);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.longArray)) {
        this.longArray = data().deepCopy(fields()[37].schema(), other.longArray);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.stringArray)) {
        this.stringArray = data().deepCopy(fields()[38].schema(), other.stringArray);
        fieldSetFlags()[38] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TestRecord instance */
    private Builder(com.linkedin.avro.fastserde.generated.avro.TestRecord other) {
            super(com.linkedin.avro.fastserde.generated.avro.TestRecord.SCHEMA$);
      if (isValidValue(fields()[0], other.testInt)) {
        this.testInt = data().deepCopy(fields()[0].schema(), other.testInt);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.testIntUnion)) {
        this.testIntUnion = data().deepCopy(fields()[1].schema(), other.testIntUnion);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.testLong)) {
        this.testLong = data().deepCopy(fields()[2].schema(), other.testLong);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.testLongUnion)) {
        this.testLongUnion = data().deepCopy(fields()[3].schema(), other.testLongUnion);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.testDouble)) {
        this.testDouble = data().deepCopy(fields()[4].schema(), other.testDouble);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.testDoubleUnion)) {
        this.testDoubleUnion = data().deepCopy(fields()[5].schema(), other.testDoubleUnion);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.testFloat)) {
        this.testFloat = data().deepCopy(fields()[6].schema(), other.testFloat);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.testFloatUnion)) {
        this.testFloatUnion = data().deepCopy(fields()[7].schema(), other.testFloatUnion);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.testBoolean)) {
        this.testBoolean = data().deepCopy(fields()[8].schema(), other.testBoolean);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.testBooleanUnion)) {
        this.testBooleanUnion = data().deepCopy(fields()[9].schema(), other.testBooleanUnion);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.testBytes)) {
        this.testBytes = data().deepCopy(fields()[10].schema(), other.testBytes);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.testBytesUnion)) {
        this.testBytesUnion = data().deepCopy(fields()[11].schema(), other.testBytesUnion);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.testString)) {
        this.testString = data().deepCopy(fields()[12].schema(), other.testString);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.testStringUnion)) {
        this.testStringUnion = data().deepCopy(fields()[13].schema(), other.testStringUnion);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.testFixed)) {
        this.testFixed = data().deepCopy(fields()[14].schema(), other.testFixed);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.testFixedUnion)) {
        this.testFixedUnion = data().deepCopy(fields()[15].schema(), other.testFixedUnion);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.testFixedArray)) {
        this.testFixedArray = data().deepCopy(fields()[16].schema(), other.testFixedArray);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.testFixedUnionArray)) {
        this.testFixedUnionArray = data().deepCopy(fields()[17].schema(), other.testFixedUnionArray);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.testEnum)) {
        this.testEnum = data().deepCopy(fields()[18].schema(), other.testEnum);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.testEnumUnion)) {
        this.testEnumUnion = data().deepCopy(fields()[19].schema(), other.testEnumUnion);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.testEnumArray)) {
        this.testEnumArray = data().deepCopy(fields()[20].schema(), other.testEnumArray);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.testEnumUnionArray)) {
        this.testEnumUnionArray = data().deepCopy(fields()[21].schema(), other.testEnumUnionArray);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.subRecordUnion)) {
        this.subRecordUnion = data().deepCopy(fields()[22].schema(), other.subRecordUnion);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.subRecord)) {
        this.subRecord = data().deepCopy(fields()[23].schema(), other.subRecord);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.recordsArray)) {
        this.recordsArray = data().deepCopy(fields()[24].schema(), other.recordsArray);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.recordsMap)) {
        this.recordsMap = data().deepCopy(fields()[25].schema(), other.recordsMap);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.recordsArrayUnion)) {
        this.recordsArrayUnion = data().deepCopy(fields()[26].schema(), other.recordsArrayUnion);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.recordsMapUnion)) {
        this.recordsMapUnion = data().deepCopy(fields()[27].schema(), other.recordsMapUnion);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.recordsArrayMap)) {
        this.recordsArrayMap = data().deepCopy(fields()[28].schema(), other.recordsArrayMap);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.recordsMapArray)) {
        this.recordsMapArray = data().deepCopy(fields()[29].schema(), other.recordsMapArray);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.recordsArrayMapUnion)) {
        this.recordsArrayMapUnion = data().deepCopy(fields()[30].schema(), other.recordsArrayMapUnion);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.recordsMapArrayUnion)) {
        this.recordsMapArrayUnion = data().deepCopy(fields()[31].schema(), other.recordsMapArrayUnion);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.union)) {
        this.union = data().deepCopy(fields()[32].schema(), other.union);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.booleanArray)) {
        this.booleanArray = data().deepCopy(fields()[33].schema(), other.booleanArray);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.doubleArray)) {
        this.doubleArray = data().deepCopy(fields()[34].schema(), other.doubleArray);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.floatArray)) {
        this.floatArray = data().deepCopy(fields()[35].schema(), other.floatArray);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.intArray)) {
        this.intArray = data().deepCopy(fields()[36].schema(), other.intArray);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.longArray)) {
        this.longArray = data().deepCopy(fields()[37].schema(), other.longArray);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.stringArray)) {
        this.stringArray = data().deepCopy(fields()[38].schema(), other.stringArray);
        fieldSetFlags()[38] = true;
      }
    }

    /** Gets the value of the 'testInt' field */
    public java.lang.Integer getTestInt() {
      return testInt;
    }
    
    /** Sets the value of the 'testInt' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestInt(int value) {
      validate(fields()[0], value);
      this.testInt = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'testInt' field has been set */
    public boolean hasTestInt() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'testInt' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestInt() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'testIntUnion' field */
    public java.lang.Integer getTestIntUnion() {
      return testIntUnion;
    }
    
    /** Sets the value of the 'testIntUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestIntUnion(java.lang.Integer value) {
      validate(fields()[1], value);
      this.testIntUnion = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'testIntUnion' field has been set */
    public boolean hasTestIntUnion() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'testIntUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestIntUnion() {
      testIntUnion = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'testLong' field */
    public java.lang.Long getTestLong() {
      return testLong;
    }
    
    /** Sets the value of the 'testLong' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestLong(long value) {
      validate(fields()[2], value);
      this.testLong = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'testLong' field has been set */
    public boolean hasTestLong() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'testLong' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestLong() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'testLongUnion' field */
    public java.lang.Long getTestLongUnion() {
      return testLongUnion;
    }
    
    /** Sets the value of the 'testLongUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestLongUnion(java.lang.Long value) {
      validate(fields()[3], value);
      this.testLongUnion = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'testLongUnion' field has been set */
    public boolean hasTestLongUnion() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'testLongUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestLongUnion() {
      testLongUnion = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'testDouble' field */
    public java.lang.Double getTestDouble() {
      return testDouble;
    }
    
    /** Sets the value of the 'testDouble' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestDouble(double value) {
      validate(fields()[4], value);
      this.testDouble = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'testDouble' field has been set */
    public boolean hasTestDouble() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'testDouble' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestDouble() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'testDoubleUnion' field */
    public java.lang.Double getTestDoubleUnion() {
      return testDoubleUnion;
    }
    
    /** Sets the value of the 'testDoubleUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestDoubleUnion(java.lang.Double value) {
      validate(fields()[5], value);
      this.testDoubleUnion = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'testDoubleUnion' field has been set */
    public boolean hasTestDoubleUnion() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'testDoubleUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestDoubleUnion() {
      testDoubleUnion = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'testFloat' field */
    public java.lang.Float getTestFloat() {
      return testFloat;
    }
    
    /** Sets the value of the 'testFloat' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestFloat(float value) {
      validate(fields()[6], value);
      this.testFloat = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'testFloat' field has been set */
    public boolean hasTestFloat() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'testFloat' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestFloat() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'testFloatUnion' field */
    public java.lang.Float getTestFloatUnion() {
      return testFloatUnion;
    }
    
    /** Sets the value of the 'testFloatUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestFloatUnion(java.lang.Float value) {
      validate(fields()[7], value);
      this.testFloatUnion = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'testFloatUnion' field has been set */
    public boolean hasTestFloatUnion() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'testFloatUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestFloatUnion() {
      testFloatUnion = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'testBoolean' field */
    public java.lang.Boolean getTestBoolean() {
      return testBoolean;
    }
    
    /** Sets the value of the 'testBoolean' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestBoolean(boolean value) {
      validate(fields()[8], value);
      this.testBoolean = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'testBoolean' field has been set */
    public boolean hasTestBoolean() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'testBoolean' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestBoolean() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'testBooleanUnion' field */
    public java.lang.Boolean getTestBooleanUnion() {
      return testBooleanUnion;
    }
    
    /** Sets the value of the 'testBooleanUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestBooleanUnion(java.lang.Boolean value) {
      validate(fields()[9], value);
      this.testBooleanUnion = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'testBooleanUnion' field has been set */
    public boolean hasTestBooleanUnion() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'testBooleanUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestBooleanUnion() {
      testBooleanUnion = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'testBytes' field */
    public java.nio.ByteBuffer getTestBytes() {
      return testBytes;
    }
    
    /** Sets the value of the 'testBytes' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestBytes(java.nio.ByteBuffer value) {
      validate(fields()[10], value);
      this.testBytes = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'testBytes' field has been set */
    public boolean hasTestBytes() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'testBytes' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestBytes() {
      testBytes = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'testBytesUnion' field */
    public java.nio.ByteBuffer getTestBytesUnion() {
      return testBytesUnion;
    }
    
    /** Sets the value of the 'testBytesUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestBytesUnion(java.nio.ByteBuffer value) {
      validate(fields()[11], value);
      this.testBytesUnion = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'testBytesUnion' field has been set */
    public boolean hasTestBytesUnion() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'testBytesUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestBytesUnion() {
      testBytesUnion = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'testString' field */
    public java.lang.CharSequence getTestString() {
      return testString;
    }
    
    /** Sets the value of the 'testString' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestString(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.testString = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'testString' field has been set */
    public boolean hasTestString() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'testString' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestString() {
      testString = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'testStringUnion' field */
    public java.lang.CharSequence getTestStringUnion() {
      return testStringUnion;
    }
    
    /** Sets the value of the 'testStringUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestStringUnion(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.testStringUnion = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'testStringUnion' field has been set */
    public boolean hasTestStringUnion() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'testStringUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestStringUnion() {
      testStringUnion = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'testFixed' field */
    public com.linkedin.avro.fastserde.generated.avro.TestFixed getTestFixed() {
      return testFixed;
    }
    
    /** Sets the value of the 'testFixed' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestFixed(com.linkedin.avro.fastserde.generated.avro.TestFixed value) {
      validate(fields()[14], value);
      this.testFixed = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'testFixed' field has been set */
    public boolean hasTestFixed() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'testFixed' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestFixed() {
      testFixed = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'testFixedUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestFixed getTestFixedUnion() {
      return testFixedUnion;
    }
    
    /** Sets the value of the 'testFixedUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestFixedUnion(com.linkedin.avro.fastserde.generated.avro.TestFixed value) {
      validate(fields()[15], value);
      this.testFixedUnion = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'testFixedUnion' field has been set */
    public boolean hasTestFixedUnion() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'testFixedUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestFixedUnion() {
      testFixedUnion = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'testFixedArray' field */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> getTestFixedArray() {
      return testFixedArray;
    }
    
    /** Sets the value of the 'testFixedArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestFixedArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> value) {
      validate(fields()[16], value);
      this.testFixedArray = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'testFixedArray' field has been set */
    public boolean hasTestFixedArray() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'testFixedArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestFixedArray() {
      testFixedArray = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'testFixedUnionArray' field */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> getTestFixedUnionArray() {
      return testFixedUnionArray;
    }
    
    /** Sets the value of the 'testFixedUnionArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestFixedUnionArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed> value) {
      validate(fields()[17], value);
      this.testFixedUnionArray = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'testFixedUnionArray' field has been set */
    public boolean hasTestFixedUnionArray() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'testFixedUnionArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestFixedUnionArray() {
      testFixedUnionArray = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'testEnum' field */
    public com.linkedin.avro.fastserde.generated.avro.TestEnum getTestEnum() {
      return testEnum;
    }
    
    /** Sets the value of the 'testEnum' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestEnum(com.linkedin.avro.fastserde.generated.avro.TestEnum value) {
      validate(fields()[18], value);
      this.testEnum = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'testEnum' field has been set */
    public boolean hasTestEnum() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'testEnum' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestEnum() {
      testEnum = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'testEnumUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestEnum getTestEnumUnion() {
      return testEnumUnion;
    }
    
    /** Sets the value of the 'testEnumUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestEnumUnion(com.linkedin.avro.fastserde.generated.avro.TestEnum value) {
      validate(fields()[19], value);
      this.testEnumUnion = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'testEnumUnion' field has been set */
    public boolean hasTestEnumUnion() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'testEnumUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestEnumUnion() {
      testEnumUnion = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'testEnumArray' field */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> getTestEnumArray() {
      return testEnumArray;
    }
    
    /** Sets the value of the 'testEnumArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestEnumArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> value) {
      validate(fields()[20], value);
      this.testEnumArray = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'testEnumArray' field has been set */
    public boolean hasTestEnumArray() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'testEnumArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestEnumArray() {
      testEnumArray = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'testEnumUnionArray' field */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> getTestEnumUnionArray() {
      return testEnumUnionArray;
    }
    
    /** Sets the value of the 'testEnumUnionArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setTestEnumUnionArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum> value) {
      validate(fields()[21], value);
      this.testEnumUnionArray = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'testEnumUnionArray' field has been set */
    public boolean hasTestEnumUnionArray() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'testEnumUnionArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearTestEnumUnionArray() {
      testEnumUnionArray = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'subRecordUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.SubRecord getSubRecordUnion() {
      return subRecordUnion;
    }
    
    /** Sets the value of the 'subRecordUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setSubRecordUnion(com.linkedin.avro.fastserde.generated.avro.SubRecord value) {
      validate(fields()[22], value);
      this.subRecordUnion = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'subRecordUnion' field has been set */
    public boolean hasSubRecordUnion() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'subRecordUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearSubRecordUnion() {
      subRecordUnion = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'subRecord' field */
    public com.linkedin.avro.fastserde.generated.avro.SubRecord getSubRecord() {
      return subRecord;
    }
    
    /** Sets the value of the 'subRecord' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setSubRecord(com.linkedin.avro.fastserde.generated.avro.SubRecord value) {
      validate(fields()[23], value);
      this.subRecord = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'subRecord' field has been set */
    public boolean hasSubRecord() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'subRecord' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearSubRecord() {
      subRecord = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'recordsArray' field */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> getRecordsArray() {
      return recordsArray;
    }
    
    /** Sets the value of the 'recordsArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setRecordsArray(java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> value) {
      validate(fields()[24], value);
      this.recordsArray = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'recordsArray' field has been set */
    public boolean hasRecordsArray() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'recordsArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearRecordsArray() {
      recordsArray = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'recordsMap' field */
    public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> getRecordsMap() {
      return recordsMap;
    }
    
    /** Sets the value of the 'recordsMap' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setRecordsMap(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> value) {
      validate(fields()[25], value);
      this.recordsMap = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'recordsMap' field has been set */
    public boolean hasRecordsMap() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'recordsMap' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearRecordsMap() {
      recordsMap = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'recordsArrayUnion' field */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> getRecordsArrayUnion() {
      return recordsArrayUnion;
    }
    
    /** Sets the value of the 'recordsArrayUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setRecordsArrayUnion(java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord> value) {
      validate(fields()[26], value);
      this.recordsArrayUnion = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'recordsArrayUnion' field has been set */
    public boolean hasRecordsArrayUnion() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'recordsArrayUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearRecordsArrayUnion() {
      recordsArrayUnion = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'recordsMapUnion' field */
    public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> getRecordsMapUnion() {
      return recordsMapUnion;
    }
    
    /** Sets the value of the 'recordsMapUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setRecordsMapUnion(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord> value) {
      validate(fields()[27], value);
      this.recordsMapUnion = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'recordsMapUnion' field has been set */
    public boolean hasRecordsMapUnion() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'recordsMapUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearRecordsMapUnion() {
      recordsMapUnion = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'recordsArrayMap' field */
    public java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> getRecordsArrayMap() {
      return recordsArrayMap;
    }
    
    /** Sets the value of the 'recordsArrayMap' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setRecordsArrayMap(java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> value) {
      validate(fields()[28], value);
      this.recordsArrayMap = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'recordsArrayMap' field has been set */
    public boolean hasRecordsArrayMap() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'recordsArrayMap' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearRecordsArrayMap() {
      recordsArrayMap = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'recordsMapArray' field */
    public java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> getRecordsMapArray() {
      return recordsMapArray;
    }
    
    /** Sets the value of the 'recordsMapArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setRecordsMapArray(java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> value) {
      validate(fields()[29], value);
      this.recordsMapArray = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'recordsMapArray' field has been set */
    public boolean hasRecordsMapArray() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'recordsMapArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearRecordsMapArray() {
      recordsMapArray = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'recordsArrayMapUnion' field */
    public java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> getRecordsArrayMapUnion() {
      return recordsArrayMapUnion;
    }
    
    /** Sets the value of the 'recordsArrayMapUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setRecordsArrayMapUnion(java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>> value) {
      validate(fields()[30], value);
      this.recordsArrayMapUnion = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'recordsArrayMapUnion' field has been set */
    public boolean hasRecordsArrayMapUnion() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'recordsArrayMapUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearRecordsArrayMapUnion() {
      recordsArrayMapUnion = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'recordsMapArrayUnion' field */
    public java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> getRecordsMapArrayUnion() {
      return recordsMapArrayUnion;
    }
    
    /** Sets the value of the 'recordsMapArrayUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setRecordsMapArrayUnion(java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>> value) {
      validate(fields()[31], value);
      this.recordsMapArrayUnion = value;
      fieldSetFlags()[31] = true;
      return this; 
    }
    
    /** Checks whether the 'recordsMapArrayUnion' field has been set */
    public boolean hasRecordsMapArrayUnion() {
      return fieldSetFlags()[31];
    }
    
    /** Clears the value of the 'recordsMapArrayUnion' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearRecordsMapArrayUnion() {
      recordsMapArrayUnion = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /** Gets the value of the 'union' field */
    public java.lang.Object getUnion() {
      return union;
    }
    
    /** Sets the value of the 'union' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setUnion(java.lang.Object value) {
      validate(fields()[32], value);
      this.union = value;
      fieldSetFlags()[32] = true;
      return this; 
    }
    
    /** Checks whether the 'union' field has been set */
    public boolean hasUnion() {
      return fieldSetFlags()[32];
    }
    
    /** Clears the value of the 'union' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearUnion() {
      union = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /** Gets the value of the 'booleanArray' field */
    public java.util.List<java.lang.Boolean> getBooleanArray() {
      return booleanArray;
    }
    
    /** Sets the value of the 'booleanArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setBooleanArray(java.util.List<java.lang.Boolean> value) {
      validate(fields()[33], value);
      this.booleanArray = value;
      fieldSetFlags()[33] = true;
      return this; 
    }
    
    /** Checks whether the 'booleanArray' field has been set */
    public boolean hasBooleanArray() {
      return fieldSetFlags()[33];
    }
    
    /** Clears the value of the 'booleanArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearBooleanArray() {
      booleanArray = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /** Gets the value of the 'doubleArray' field */
    public java.util.List<java.lang.Double> getDoubleArray() {
      return doubleArray;
    }
    
    /** Sets the value of the 'doubleArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setDoubleArray(java.util.List<java.lang.Double> value) {
      validate(fields()[34], value);
      this.doubleArray = value;
      fieldSetFlags()[34] = true;
      return this; 
    }
    
    /** Checks whether the 'doubleArray' field has been set */
    public boolean hasDoubleArray() {
      return fieldSetFlags()[34];
    }
    
    /** Clears the value of the 'doubleArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearDoubleArray() {
      doubleArray = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /** Gets the value of the 'floatArray' field */
    public java.util.List<java.lang.Float> getFloatArray() {
      return floatArray;
    }
    
    /** Sets the value of the 'floatArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setFloatArray(java.util.List<java.lang.Float> value) {
      validate(fields()[35], value);
      this.floatArray = value;
      fieldSetFlags()[35] = true;
      return this; 
    }
    
    /** Checks whether the 'floatArray' field has been set */
    public boolean hasFloatArray() {
      return fieldSetFlags()[35];
    }
    
    /** Clears the value of the 'floatArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearFloatArray() {
      floatArray = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /** Gets the value of the 'intArray' field */
    public java.util.List<java.lang.Integer> getIntArray() {
      return intArray;
    }
    
    /** Sets the value of the 'intArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setIntArray(java.util.List<java.lang.Integer> value) {
      validate(fields()[36], value);
      this.intArray = value;
      fieldSetFlags()[36] = true;
      return this; 
    }
    
    /** Checks whether the 'intArray' field has been set */
    public boolean hasIntArray() {
      return fieldSetFlags()[36];
    }
    
    /** Clears the value of the 'intArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearIntArray() {
      intArray = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /** Gets the value of the 'longArray' field */
    public java.util.List<java.lang.Long> getLongArray() {
      return longArray;
    }
    
    /** Sets the value of the 'longArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setLongArray(java.util.List<java.lang.Long> value) {
      validate(fields()[37], value);
      this.longArray = value;
      fieldSetFlags()[37] = true;
      return this; 
    }
    
    /** Checks whether the 'longArray' field has been set */
    public boolean hasLongArray() {
      return fieldSetFlags()[37];
    }
    
    /** Clears the value of the 'longArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearLongArray() {
      longArray = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /** Gets the value of the 'stringArray' field */
    public java.util.List<java.lang.CharSequence> getStringArray() {
      return stringArray;
    }
    
    /** Sets the value of the 'stringArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder setStringArray(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[38], value);
      this.stringArray = value;
      fieldSetFlags()[38] = true;
      return this; 
    }
    
    /** Checks whether the 'stringArray' field has been set */
    public boolean hasStringArray() {
      return fieldSetFlags()[38];
    }
    
    /** Clears the value of the 'stringArray' field */
    public com.linkedin.avro.fastserde.generated.avro.TestRecord.Builder clearStringArray() {
      stringArray = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    @Override
    public TestRecord build() {
      try {
        TestRecord record = new TestRecord();
        record.testInt = fieldSetFlags()[0] ? this.testInt : (java.lang.Integer) defaultValue(fields()[0]);
        record.testIntUnion = fieldSetFlags()[1] ? this.testIntUnion : (java.lang.Integer) defaultValue(fields()[1]);
        record.testLong = fieldSetFlags()[2] ? this.testLong : (java.lang.Long) defaultValue(fields()[2]);
        record.testLongUnion = fieldSetFlags()[3] ? this.testLongUnion : (java.lang.Long) defaultValue(fields()[3]);
        record.testDouble = fieldSetFlags()[4] ? this.testDouble : (java.lang.Double) defaultValue(fields()[4]);
        record.testDoubleUnion = fieldSetFlags()[5] ? this.testDoubleUnion : (java.lang.Double) defaultValue(fields()[5]);
        record.testFloat = fieldSetFlags()[6] ? this.testFloat : (java.lang.Float) defaultValue(fields()[6]);
        record.testFloatUnion = fieldSetFlags()[7] ? this.testFloatUnion : (java.lang.Float) defaultValue(fields()[7]);
        record.testBoolean = fieldSetFlags()[8] ? this.testBoolean : (java.lang.Boolean) defaultValue(fields()[8]);
        record.testBooleanUnion = fieldSetFlags()[9] ? this.testBooleanUnion : (java.lang.Boolean) defaultValue(fields()[9]);
        record.testBytes = fieldSetFlags()[10] ? this.testBytes : (java.nio.ByteBuffer) defaultValue(fields()[10]);
        record.testBytesUnion = fieldSetFlags()[11] ? this.testBytesUnion : (java.nio.ByteBuffer) defaultValue(fields()[11]);
        record.testString = fieldSetFlags()[12] ? this.testString : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.testStringUnion = fieldSetFlags()[13] ? this.testStringUnion : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.testFixed = fieldSetFlags()[14] ? this.testFixed : (com.linkedin.avro.fastserde.generated.avro.TestFixed) defaultValue(fields()[14]);
        record.testFixedUnion = fieldSetFlags()[15] ? this.testFixedUnion : (com.linkedin.avro.fastserde.generated.avro.TestFixed) defaultValue(fields()[15]);
        record.testFixedArray = fieldSetFlags()[16] ? this.testFixedArray : (java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed>) defaultValue(fields()[16]);
        record.testFixedUnionArray = fieldSetFlags()[17] ? this.testFixedUnionArray : (java.util.List<com.linkedin.avro.fastserde.generated.avro.TestFixed>) defaultValue(fields()[17]);
        record.testEnum = fieldSetFlags()[18] ? this.testEnum : (com.linkedin.avro.fastserde.generated.avro.TestEnum) defaultValue(fields()[18]);
        record.testEnumUnion = fieldSetFlags()[19] ? this.testEnumUnion : (com.linkedin.avro.fastserde.generated.avro.TestEnum) defaultValue(fields()[19]);
        record.testEnumArray = fieldSetFlags()[20] ? this.testEnumArray : (java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum>) defaultValue(fields()[20]);
        record.testEnumUnionArray = fieldSetFlags()[21] ? this.testEnumUnionArray : (java.util.List<com.linkedin.avro.fastserde.generated.avro.TestEnum>) defaultValue(fields()[21]);
        record.subRecordUnion = fieldSetFlags()[22] ? this.subRecordUnion : (com.linkedin.avro.fastserde.generated.avro.SubRecord) defaultValue(fields()[22]);
        record.subRecord = fieldSetFlags()[23] ? this.subRecord : (com.linkedin.avro.fastserde.generated.avro.SubRecord) defaultValue(fields()[23]);
        record.recordsArray = fieldSetFlags()[24] ? this.recordsArray : (java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>) defaultValue(fields()[24]);
        record.recordsMap = fieldSetFlags()[25] ? this.recordsMap : (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>) defaultValue(fields()[25]);
        record.recordsArrayUnion = fieldSetFlags()[26] ? this.recordsArrayUnion : (java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>) defaultValue(fields()[26]);
        record.recordsMapUnion = fieldSetFlags()[27] ? this.recordsMapUnion : (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>) defaultValue(fields()[27]);
        record.recordsArrayMap = fieldSetFlags()[28] ? this.recordsArrayMap : (java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>>) defaultValue(fields()[28]);
        record.recordsMapArray = fieldSetFlags()[29] ? this.recordsMapArray : (java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>>) defaultValue(fields()[29]);
        record.recordsArrayMapUnion = fieldSetFlags()[30] ? this.recordsArrayMapUnion : (java.util.List<java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.SubRecord>>) defaultValue(fields()[30]);
        record.recordsMapArrayUnion = fieldSetFlags()[31] ? this.recordsMapArrayUnion : (java.util.Map<java.lang.CharSequence,java.util.List<com.linkedin.avro.fastserde.generated.avro.SubRecord>>) defaultValue(fields()[31]);
        record.union = fieldSetFlags()[32] ? this.union : (java.lang.Object) defaultValue(fields()[32]);
        record.booleanArray = fieldSetFlags()[33] ? this.booleanArray : (java.util.List<java.lang.Boolean>) defaultValue(fields()[33]);
        record.doubleArray = fieldSetFlags()[34] ? this.doubleArray : (java.util.List<java.lang.Double>) defaultValue(fields()[34]);
        record.floatArray = fieldSetFlags()[35] ? this.floatArray : (java.util.List<java.lang.Float>) defaultValue(fields()[35]);
        record.intArray = fieldSetFlags()[36] ? this.intArray : (java.util.List<java.lang.Integer>) defaultValue(fields()[36]);
        record.longArray = fieldSetFlags()[37] ? this.longArray : (java.util.List<java.lang.Long>) defaultValue(fields()[37]);
        record.stringArray = fieldSetFlags()[38] ? this.stringArray : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[38]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
