/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.avro.fastserde.generated.avro;  
@SuppressWarnings("all")
/** Used in tests to confirm generic-FastSerializer supports enum types */
public class FastSerdeEnums extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FastSerdeEnums\",\"namespace\":\"com.linkedin.avro.fastserde.generated.avro\",\"doc\":\"Used in tests to confirm generic-FastSerializer supports enum types\",\"fields\":[{\"name\":\"enumField\",\"type\":{\"type\":\"enum\",\"name\":\"JustSimpleEnum\",\"symbols\":[\"E1\",\"E2\",\"E3\",\"E4\",\"E5\"]}},{\"name\":\"arrayOfEnums\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"JustSimpleEnum\"}],\"default\":null},{\"name\":\"mapOfEnums\",\"type\":{\"type\":\"map\",\"values\":\"JustSimpleEnum\"}}]}");
  @Deprecated public com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum enumField;
  @Deprecated public java.util.List<com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> arrayOfEnums;
  @Deprecated public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> mapOfEnums;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return enumField;
    case 1: return arrayOfEnums;
    case 2: return mapOfEnums;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: enumField = (com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum)value$; break;
    case 1: arrayOfEnums = (java.util.List<com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum>)value$; break;
    case 2: mapOfEnums = (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'enumField' field.
   */
  public com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum getEnumField() {
    return enumField;
  }

  /**
   * Sets the value of the 'enumField' field.
   * @param value the value to set.
   */
  public void setEnumField(com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum value) {
    this.enumField = value;
  }

  /**
   * Gets the value of the 'arrayOfEnums' field.
   */
  public java.util.List<com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> getArrayOfEnums() {
    return arrayOfEnums;
  }

  /**
   * Sets the value of the 'arrayOfEnums' field.
   * @param value the value to set.
   */
  public void setArrayOfEnums(java.util.List<com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> value) {
    this.arrayOfEnums = value;
  }

  /**
   * Gets the value of the 'mapOfEnums' field.
   */
  public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> getMapOfEnums() {
    return mapOfEnums;
  }

  /**
   * Sets the value of the 'mapOfEnums' field.
   * @param value the value to set.
   */
  public void setMapOfEnums(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> value) {
    this.mapOfEnums = value;
  }

  /** Creates a new FastSerdeEnums RecordBuilder */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder newBuilder() {
    return new com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder();
  }
  
  /** Creates a new FastSerdeEnums RecordBuilder by copying an existing Builder */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder other) {
    return new com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder(other);
  }
  
  /** Creates a new FastSerdeEnums RecordBuilder by copying an existing FastSerdeEnums instance */
  public static com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder newBuilder(com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums other) {
    return new com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder(other);
  }
  
  /**
   * RecordBuilder for FastSerdeEnums instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FastSerdeEnums>
    implements org.apache.avro.data.RecordBuilder<FastSerdeEnums> {

    private com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum enumField;
    private java.util.List<com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> arrayOfEnums;
    private java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> mapOfEnums;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing FastSerdeEnums instance */
    private Builder(com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums other) {
            super(com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.SCHEMA$);
      if (isValidValue(fields()[0], other.enumField)) {
        this.enumField = (com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum) data().deepCopy(fields()[0].schema(), other.enumField);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.arrayOfEnums)) {
        this.arrayOfEnums = (java.util.List<com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum>) data().deepCopy(fields()[1].schema(), other.arrayOfEnums);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mapOfEnums)) {
        this.mapOfEnums = (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum>) data().deepCopy(fields()[2].schema(), other.mapOfEnums);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'enumField' field */
    public com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum getEnumField() {
      return enumField;
    }
    
    /** Sets the value of the 'enumField' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder setEnumField(com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum value) {
      validate(fields()[0], value);
      this.enumField = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'enumField' field has been set */
    public boolean hasEnumField() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'enumField' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder clearEnumField() {
      enumField = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'arrayOfEnums' field */
    public java.util.List<com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> getArrayOfEnums() {
      return arrayOfEnums;
    }
    
    /** Sets the value of the 'arrayOfEnums' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder setArrayOfEnums(java.util.List<com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> value) {
      validate(fields()[1], value);
      this.arrayOfEnums = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'arrayOfEnums' field has been set */
    public boolean hasArrayOfEnums() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'arrayOfEnums' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder clearArrayOfEnums() {
      arrayOfEnums = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'mapOfEnums' field */
    public java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> getMapOfEnums() {
      return mapOfEnums;
    }
    
    /** Sets the value of the 'mapOfEnums' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder setMapOfEnums(java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum> value) {
      validate(fields()[2], value);
      this.mapOfEnums = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'mapOfEnums' field has been set */
    public boolean hasMapOfEnums() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'mapOfEnums' field */
    public com.linkedin.avro.fastserde.generated.avro.FastSerdeEnums.Builder clearMapOfEnums() {
      mapOfEnums = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public FastSerdeEnums build() {
      try {
        FastSerdeEnums record = new FastSerdeEnums();
        record.enumField = fieldSetFlags()[0] ? this.enumField : (com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum) defaultValue(fields()[0]);
        record.arrayOfEnums = fieldSetFlags()[1] ? this.arrayOfEnums : (java.util.List<com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum>) defaultValue(fields()[1]);
        record.mapOfEnums = fieldSetFlags()[2] ? this.mapOfEnums : (java.util.Map<java.lang.CharSequence,com.linkedin.avro.fastserde.generated.avro.JustSimpleEnum>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
